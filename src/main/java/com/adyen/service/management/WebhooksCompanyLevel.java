/*
 * Management API
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.service.management;

import com.adyen.ApiKeyAuthenticatedService;
import com.adyen.Client;
import com.adyen.constants.ApiConstants;
import com.adyen.model.management.JSON;
import com.adyen.model.management.CreateCompanyWebhookRequest;
import com.adyen.model.management.GenerateHmacKeyResponse;
import com.adyen.model.management.ListWebhooksResponse;
import com.adyen.model.management.RestServiceError;
import com.adyen.model.management.TestCompanyWebhookRequest;
import com.adyen.model.management.TestWebhookResponse;
import com.adyen.model.management.UpdateCompanyWebhookRequest;
import com.adyen.model.management.Webhook;
import com.adyen.service.exception.ApiException;
import com.adyen.service.resource.ManagementResource;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class WebhooksCompanyLevel extends ApiKeyAuthenticatedService {
    public WebhooksCompanyLevel(Client client) {
        super(client);
        new JSON();
    }

    /**
     * Remove a webhook
     *
     * @param companyId The unique identifier of the company account. (required)
     * @param webhookId Unique identifier of the webhook configuration. (required)
     * @throws ApiException if fails to make API call
     */
    public void removeWebhook(String companyId, String webhookId) throws ApiException, IOException {
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId'", 400);
        }
        if (webhookId == null) {
            throw new ApiException("Missing the required parameter 'webhookId'", 400);
        }

        Map<String, String> pathParams = new HashMap<>();
        pathParams.put("companyId", companyId);
        pathParams.put("webhookId", webhookId);

        String requestBody = null;
        ManagementResource resource = new ManagementResource(this, "/companies/{companyId}/webhooks/{webhookId}");
        resource.request(requestBody, null, ApiConstants.HttpMethod.DELETE, pathParams);
    }
    
    /**
     * List all webhooks
     *
     * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account). (required)
     * @param queryParams  (optional)
     *    pageNumber: The number of the page to fetch. (optional)<br />
     *    pageSize: The number of items to have on a page, maximum 100. The default is 10 items on a page. (optional)<br />
     * @return ListWebhooksResponse
     * @throws ApiException if fails to make API call
     */
    public ListWebhooksResponse listAllWebhooks(String companyId, Map<String, String> queryParams) throws ApiException, IOException {
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId'", 400);
        }

        Map<String, String> pathParams = new HashMap<>();
        pathParams.put("companyId", companyId);

        String requestBody = null;
        ManagementResource resource = new ManagementResource(this, "/companies/{companyId}/webhooks");
        String jsonResult = resource.request(requestBody, null, ApiConstants.HttpMethod.GET, pathParams, queryParams);
        return ListWebhooksResponse.fromJson(jsonResult);
    }
    
    /**
     * Get a webhook
     *
     * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account). (required)
     * @param webhookId Unique identifier of the webhook configuration. (required)
     * @return Webhook
     * @throws ApiException if fails to make API call
     */
    public Webhook getWebhook(String companyId, String webhookId) throws ApiException, IOException {
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId'", 400);
        }
        if (webhookId == null) {
            throw new ApiException("Missing the required parameter 'webhookId'", 400);
        }

        Map<String, String> pathParams = new HashMap<>();
        pathParams.put("companyId", companyId);
        pathParams.put("webhookId", webhookId);

        String requestBody = null;
        ManagementResource resource = new ManagementResource(this, "/companies/{companyId}/webhooks/{webhookId}");
        String jsonResult = resource.request(requestBody, null, ApiConstants.HttpMethod.GET, pathParams);
        return Webhook.fromJson(jsonResult);
    }
    
    /**
     * Update a webhook
     *
     * @param companyId The unique identifier of the company account. (required)
     * @param webhookId Unique identifier of the webhook configuration. (required)
     * @param updateCompanyWebhookRequest  (optional)
     * @return Webhook
     * @throws ApiException if fails to make API call
     */
    public Webhook updateWebhook(String companyId, String webhookId, UpdateCompanyWebhookRequest updateCompanyWebhookRequest) throws ApiException, IOException {
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId'", 400);
        }
        if (webhookId == null) {
            throw new ApiException("Missing the required parameter 'webhookId'", 400);
        }

        Map<String, String> pathParams = new HashMap<>();
        pathParams.put("companyId", companyId);
        pathParams.put("webhookId", webhookId);

        String requestBody = updateCompanyWebhookRequest.toJson();
        ManagementResource resource = new ManagementResource(this, "/companies/{companyId}/webhooks/{webhookId}");
        String jsonResult = resource.request(requestBody, null, ApiConstants.HttpMethod.PATCH, pathParams);
        return Webhook.fromJson(jsonResult);
    }
    
    /**
     * Set up a webhook
     *
     * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account). (required)
     * @param createCompanyWebhookRequest  (optional)
     * @return Webhook
     * @throws ApiException if fails to make API call
     */
    public Webhook setUpWebhook(String companyId, CreateCompanyWebhookRequest createCompanyWebhookRequest) throws ApiException, IOException {
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId'", 400);
        }

        Map<String, String> pathParams = new HashMap<>();
        pathParams.put("companyId", companyId);

        String requestBody = createCompanyWebhookRequest.toJson();
        ManagementResource resource = new ManagementResource(this, "/companies/{companyId}/webhooks");
        String jsonResult = resource.request(requestBody, null, ApiConstants.HttpMethod.POST, pathParams);
        return Webhook.fromJson(jsonResult);
    }
    
    /**
     * Generate an HMAC key
     *
     * @param companyId The unique identifier of the company account. (required)
     * @param webhookId Unique identifier of the webhook configuration. (required)
     * @return GenerateHmacKeyResponse
     * @throws ApiException if fails to make API call
     */
    public GenerateHmacKeyResponse generateHmacKey(String companyId, String webhookId) throws ApiException, IOException {
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId'", 400);
        }
        if (webhookId == null) {
            throw new ApiException("Missing the required parameter 'webhookId'", 400);
        }

        Map<String, String> pathParams = new HashMap<>();
        pathParams.put("companyId", companyId);
        pathParams.put("webhookId", webhookId);

        String requestBody = null;
        ManagementResource resource = new ManagementResource(this, "/companies/{companyId}/webhooks/{webhookId}/generateHmac");
        String jsonResult = resource.request(requestBody, null, ApiConstants.HttpMethod.POST, pathParams);
        return GenerateHmacKeyResponse.fromJson(jsonResult);
    }
    
    /**
     * Test a webhook
     *
     * @param companyId The unique identifier of the company account. (required)
     * @param webhookId Unique identifier of the webhook configuration. (required)
     * @param testCompanyWebhookRequest  (optional)
     * @return TestWebhookResponse
     * @throws ApiException if fails to make API call
     */
    public TestWebhookResponse testWebhook(String companyId, String webhookId, TestCompanyWebhookRequest testCompanyWebhookRequest) throws ApiException, IOException {
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId'", 400);
        }
        if (webhookId == null) {
            throw new ApiException("Missing the required parameter 'webhookId'", 400);
        }

        Map<String, String> pathParams = new HashMap<>();
        pathParams.put("companyId", companyId);
        pathParams.put("webhookId", webhookId);

        String requestBody = testCompanyWebhookRequest.toJson();
        ManagementResource resource = new ManagementResource(this, "/companies/{companyId}/webhooks/{webhookId}/test");
        String jsonResult = resource.request(requestBody, null, ApiConstants.HttpMethod.POST, pathParams);
        return TestWebhookResponse.fromJson(jsonResult);
    }
    
}
