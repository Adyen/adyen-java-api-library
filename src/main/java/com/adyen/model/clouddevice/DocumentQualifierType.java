package com.adyen.model.clouddevice;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;

/** Type of document qualifier. */
public enum DocumentQualifierType {

  /** Where the POI system print the Sale receipt when requested by the Sale Terminal. */
  @Schema(
      description =
          "Where the POI system print the Sale receipt when requested by the Sale Terminal.")
  SALE_RECEIPT("SaleReceipt"),

  /**
   * Where the Sale system print the Cashier copy of the Payment receipt when requested by the POI
   * Terminal.
   */
  @Schema(
      description =
          "Where the Sale system print the Cashier copy of the Payment receipt when requested by the POI Terminal.")
  CASHIER_RECEIPT("CashierReceipt"),

  /**
   * Where you print the Customer Payment receipt that could be located on the Sale Terminal or in
   * some cases a restricted Customer Sale ticket on the POI Terminal.
   */
  @Schema(
      description =
          "Where you print the Customer Payment receipt that could be located on the Sale Terminal or in some cases a restricted Customer Sale ticket on the POI Terminal.")
  CUSTOMER_RECEIPT("CustomerReceipt"),

  /**
   * When the POI System wants to print specific document (check, dynamic currency conversion ...).
   * Used by the Sale System when the printer is not located on the
   */
  @Schema(
      description =
          "When the POI System wants to print specific document (check, dynamic currency conversion ...).  Used by the Sale System when the printer is not located on the")
  DOCUMENT("Document"),

  /**
   * Coupons, voucher or special ticket generated by the POI or the Sale System and to be printed.
   */
  @Schema(
      description =
          "Coupons, voucher or special ticket generated by the POI or the Sale System and to be printed.")
  VOUCHER("Voucher"),

  /**
   * When the POI or the Sale System wants to store a messageType on the journal printer or
   * electronic journal of the Sale Terminal (it is sometimes a Sale
   */
  @Schema(
      description =
          "When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale")
  JOURNAL("Journal");

  private final String value;

  DocumentQualifierType(String v) {
    value = v;
  }

  /**
   * Returns the string representation of the DocumentQualifierType.
   *
   * @return the string value
   */
  @JsonValue
  public String value() {
    return value;
  }

  /**
   * Creates a DocumentQualifierType from a string value.
   *
   * @param v the string value
   * @return the corresponding DocumentQualifierType
   */
  @JsonCreator
  public static DocumentQualifierType fromValue(String v) {
    return Arrays.stream(values()).filter(s -> s.value.equals(v)).findFirst().orElse(null);
  }
}