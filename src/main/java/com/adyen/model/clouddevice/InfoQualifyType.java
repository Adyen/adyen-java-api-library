package com.adyen.model.clouddevice;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;

/** Type of information qualifier. */
public enum InfoQualifyType {

  /**
   * The information is a new state on which the messageType sender is entering. For instance,
   * during a payment, the POI could display to the Cashier that POI request
   */
  @Schema(
      description =
          "The information is a new state on which the message sender is entering. For instance, during a payment, the POI could display to the Cashier that POI request")
  STATUS("Status"),

  /** The information is related to an error situation occurring on the messageType sender. */
  @Schema(
      description =
          "The information is related to an error situation occurring on the message sender.")
  ERROR("Error"),

  /** Standard display interface. */
  @Schema(description = "Standard display interface.")
  DISPLAY("Display"),

  /** Standard sound interface. */
  @Schema(description = "Standard sound interface.")
  SOUND("Sound"),

  /**
   * Answer to a question or information to be entered by the Cashier or the Customer, at the
   * request of the POI Terminal or the Sale Terminal.
   */
  @Schema(
      description =
          "Answer to a question or information to be entered by the Cashier or the Customer, at the request of the POI Terminal or the Sale Terminal.")
  INPUT("Input"),

  /** Information displayed on the Cardholder POI interface, replicated on the Cashier interface. */
  @Schema(
      description =
          "Information displayed on the Cardholder POI interface, replicated on the Cashier interface.")
  POI_REPLICATION("POIReplication"),

  /**
   * Input of the Cardholder POI interface which can be entered by the Cashier to assist the
   * Customer.
   */
  @Schema(
      description =
          "Input of the Cardholder POI interface which can be entered by the Cashier to assist the Customer.")
  CUSTOMER_ASSISTANCE("CustomerAssistance"),

  /**
   * Where you print the Payment receipt that could be located on the Sale Terminal or in some cases
   * a restricted Sale ticket on the POI Terminal.
   */
  @Schema(
      description =
          "Where you print the Payment receipt that could be located on the Sale Terminal or in some cases a restricted Sale ticket on the POI Terminal.")
  RECEIPT("Receipt"),

  /**
   * When the POI System wants to print specific document (check, dynamic currency conversion ...).
   * Used by the Sale System when the printer is not located on the
   */
  @Schema(
      description =
          "When the POI System wants to print specific document (check, dynamic currency conversion ...).  Used by the Sale System when the printer is not located on the")
  DOCUMENT("Document"),

  /**
   * Coupons, voucher or special ticket generated by the POI or the Sale System and to be printed.
   */
  @Schema(
      description =
          "Coupons, voucher or special ticket generated by the POI or the Sale System and to be printed.")
  VOUCHER("Voucher");

  private final String value;

  InfoQualifyType(String v) {
    value = v;
  }

  /**
   * Returns the string representation of the InfoQualifyType.
   *
   * @return the string value
   */
  @JsonValue
  public String value() {
    return value;
  }

  /**
   * Creates a InfoQualifyType from a string value.
   *
   * @param v the string value
   * @return the corresponding InfoQualifyType
   */
  @JsonCreator
  public static InfoQualifyType fromValue(String v) {
    return Arrays.stream(values()).filter(s -> s.value.equals(v)).findFirst().orElse(null);
  }
}