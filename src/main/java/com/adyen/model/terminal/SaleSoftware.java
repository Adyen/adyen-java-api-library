/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Information related to the software of the Sale System which manages the NEXO Sale to POI protocol.
 */
@ApiModel(description = "Information related to the software of the Sale System which manages the NEXO Sale to POI protocol.")
@JsonPropertyOrder({
  SaleSoftware.JSON_PROPERTY_MANUFACTURER_I_D,
  SaleSoftware.JSON_PROPERTY_APPLICATION_NAME,
  SaleSoftware.JSON_PROPERTY_SOFTWARE_VERSION,
  SaleSoftware.JSON_PROPERTY_CERTIFICATION_CODE
})

public class SaleSoftware {
  public static final String JSON_PROPERTY_MANUFACTURER_I_D = "ManufacturerID";
  private String manufacturerID;

  public static final String JSON_PROPERTY_APPLICATION_NAME = "ApplicationName";
  private String applicationName;

  public static final String JSON_PROPERTY_SOFTWARE_VERSION = "SoftwareVersion";
  private String softwareVersion;

  public static final String JSON_PROPERTY_CERTIFICATION_CODE = "CertificationCode";
  private String certificationCode;

  public SaleSoftware() { 
  }

  public SaleSoftware manufacturerID(String manufacturerID) {
    this.manufacturerID = manufacturerID;
    return this;
  }

   /**
   * Get manufacturerID
   * @return manufacturerID
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MANUFACTURER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManufacturerID() {
    return manufacturerID;
  }


 /**
  * manufacturerID
  *
  * @param manufacturerID
  */ 
  @JsonProperty(JSON_PROPERTY_MANUFACTURER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturerID(String manufacturerID) {
    this.manufacturerID = manufacturerID;
  }


  public SaleSoftware applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

   /**
   * Get applicationName
   * @return applicationName
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplicationName() {
    return applicationName;
  }


 /**
  * applicationName
  *
  * @param applicationName
  */ 
  @JsonProperty(JSON_PROPERTY_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }


  public SaleSoftware softwareVersion(String softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

   /**
   * Get softwareVersion
   * @return softwareVersion
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SOFTWARE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSoftwareVersion() {
    return softwareVersion;
  }


 /**
  * softwareVersion
  *
  * @param softwareVersion
  */ 
  @JsonProperty(JSON_PROPERTY_SOFTWARE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSoftwareVersion(String softwareVersion) {
    this.softwareVersion = softwareVersion;
  }


  public SaleSoftware certificationCode(String certificationCode) {
    this.certificationCode = certificationCode;
    return this;
  }

   /**
   * Get certificationCode
   * @return certificationCode
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CERTIFICATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCertificationCode() {
    return certificationCode;
  }


 /**
  * certificationCode
  *
  * @param certificationCode
  */ 
  @JsonProperty(JSON_PROPERTY_CERTIFICATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertificationCode(String certificationCode) {
    this.certificationCode = certificationCode;
  }


  /**
   * Return true if this SaleSoftware object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleSoftware saleSoftware = (SaleSoftware) o;
    return Objects.equals(this.manufacturerID, saleSoftware.manufacturerID) &&
        Objects.equals(this.applicationName, saleSoftware.applicationName) &&
        Objects.equals(this.softwareVersion, saleSoftware.softwareVersion) &&
        Objects.equals(this.certificationCode, saleSoftware.certificationCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(manufacturerID, applicationName, softwareVersion, certificationCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleSoftware {\n");
    sb.append("    manufacturerID: ").append(toIndentedString(manufacturerID)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("    certificationCode: ").append(toIndentedString(certificationCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of SaleSoftware given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SaleSoftware
   * @throws JsonProcessingException if the JSON string is invalid with respect to SaleSoftware
   */
  public static SaleSoftware fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, SaleSoftware.class);
  }
/**
  * Convert an instance of SaleSoftware to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

