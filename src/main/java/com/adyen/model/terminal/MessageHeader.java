/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.MessageCategory;
import com.adyen.model.terminal.MessageClass;
import com.adyen.model.terminal.MessageType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It conveys Information related to the Sale to POI protocol management. Message header of the Sale to POI protocol message.
 */
@ApiModel(description = "It conveys Information related to the Sale to POI protocol management. Message header of the Sale to POI protocol message.")
@JsonPropertyOrder({
  MessageHeader.JSON_PROPERTY_PROTOCOL_VERSION,
  MessageHeader.JSON_PROPERTY_MESSAGE_CLASS,
  MessageHeader.JSON_PROPERTY_MESSAGE_CATEGORY,
  MessageHeader.JSON_PROPERTY_MESSAGE_TYPE,
  MessageHeader.JSON_PROPERTY_SERVICE_I_D,
  MessageHeader.JSON_PROPERTY_DEVICE_I_D,
  MessageHeader.JSON_PROPERTY_SALE_I_D,
  MessageHeader.JSON_PROPERTY_P_O_I_I_D
})

public class MessageHeader {
  public static final String JSON_PROPERTY_PROTOCOL_VERSION = "ProtocolVersion";
  private String protocolVersion;

  public static final String JSON_PROPERTY_MESSAGE_CLASS = "MessageClass";
  private MessageClass messageClass;

  public static final String JSON_PROPERTY_MESSAGE_CATEGORY = "MessageCategory";
  private MessageCategory messageCategory;

  public static final String JSON_PROPERTY_MESSAGE_TYPE = "MessageType";
  private MessageType messageType;

  public static final String JSON_PROPERTY_SERVICE_I_D = "ServiceID";
  private String serviceID;

  public static final String JSON_PROPERTY_DEVICE_I_D = "DeviceID";
  private String deviceID;

  public static final String JSON_PROPERTY_SALE_I_D = "SaleID";
  private String saleID;

  public static final String JSON_PROPERTY_P_O_I_I_D = "POIID";
  private String POIID;

  public MessageHeader() { 
  }

  public MessageHeader protocolVersion(String protocolVersion) {
    this.protocolVersion = protocolVersion;
    return this;
  }

   /**
   * If MessageCategory is Login or Diagnosis.
   * @return protocolVersion
  **/
  @ApiModelProperty(value = "If MessageCategory is Login or Diagnosis.")
  @JsonProperty(JSON_PROPERTY_PROTOCOL_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProtocolVersion() {
    return protocolVersion;
  }


 /**
  * If MessageCategory is Login or Diagnosis.
  *
  * @param protocolVersion
  */ 
  @JsonProperty(JSON_PROPERTY_PROTOCOL_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocolVersion(String protocolVersion) {
    this.protocolVersion = protocolVersion;
  }


  public MessageHeader messageClass(MessageClass messageClass) {
    this.messageClass = messageClass;
    return this;
  }

   /**
   * Get messageClass
   * @return messageClass
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MESSAGE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MessageClass getMessageClass() {
    return messageClass;
  }


 /**
  * messageClass
  *
  * @param messageClass
  */ 
  @JsonProperty(JSON_PROPERTY_MESSAGE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageClass(MessageClass messageClass) {
    this.messageClass = messageClass;
  }


  public MessageHeader messageCategory(MessageCategory messageCategory) {
    this.messageCategory = messageCategory;
    return this;
  }

   /**
   * Get messageCategory
   * @return messageCategory
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MESSAGE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MessageCategory getMessageCategory() {
    return messageCategory;
  }


 /**
  * messageCategory
  *
  * @param messageCategory
  */ 
  @JsonProperty(JSON_PROPERTY_MESSAGE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageCategory(MessageCategory messageCategory) {
    this.messageCategory = messageCategory;
  }


  public MessageHeader messageType(MessageType messageType) {
    this.messageType = messageType;
    return this;
  }

   /**
   * Get messageType
   * @return messageType
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MESSAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MessageType getMessageType() {
    return messageType;
  }


 /**
  * messageType
  *
  * @param messageType
  */ 
  @JsonProperty(JSON_PROPERTY_MESSAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageType(MessageType messageType) {
    this.messageType = messageType;
  }


  public MessageHeader serviceID(String serviceID) {
    this.serviceID = serviceID;
    return this;
  }

   /**
   * Required if Service or Event MessageClass message or if Device MessageClass and request from POI or response from Sale.
   * @return serviceID
  **/
  @ApiModelProperty(value = "Required if Service or Event MessageClass message or if Device MessageClass and request from POI or response from Sale.")
  @JsonProperty(JSON_PROPERTY_SERVICE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceID() {
    return serviceID;
  }


 /**
  * Required if Service or Event MessageClass message or if Device MessageClass and request from POI or response from Sale.
  *
  * @param serviceID
  */ 
  @JsonProperty(JSON_PROPERTY_SERVICE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceID(String serviceID) {
    this.serviceID = serviceID;
  }


  public MessageHeader deviceID(String deviceID) {
    this.deviceID = deviceID;
    return this;
  }

   /**
   * If Device MessageClass.
   * @return deviceID
  **/
  @ApiModelProperty(value = "If Device MessageClass.")
  @JsonProperty(JSON_PROPERTY_DEVICE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceID() {
    return deviceID;
  }


 /**
  * If Device MessageClass.
  *
  * @param deviceID
  */ 
  @JsonProperty(JSON_PROPERTY_DEVICE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceID(String deviceID) {
    this.deviceID = deviceID;
  }


  public MessageHeader saleID(String saleID) {
    this.saleID = saleID;
    return this;
  }

   /**
   * Identification of a Sale System or a Sale Terminal for the Sale to POI protocol.
   * @return saleID
  **/
  @ApiModelProperty(required = true, value = "Identification of a Sale System or a Sale Terminal for the Sale to POI protocol.")
  @JsonProperty(JSON_PROPERTY_SALE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSaleID() {
    return saleID;
  }


 /**
  * Identification of a Sale System or a Sale Terminal for the Sale to POI protocol.
  *
  * @param saleID
  */ 
  @JsonProperty(JSON_PROPERTY_SALE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleID(String saleID) {
    this.saleID = saleID;
  }


  public MessageHeader POIID(String POIID) {
    this.POIID = POIID;
    return this;
  }

   /**
   * Identification of a POI System or a POI Terminal for the Sale to POI protocol.
   * @return POIID
  **/
  @ApiModelProperty(required = true, value = "Identification of a POI System or a POI Terminal for the Sale to POI protocol.")
  @JsonProperty(JSON_PROPERTY_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPOIID() {
    return POIID;
  }


 /**
  * Identification of a POI System or a POI Terminal for the Sale to POI protocol.
  *
  * @param POIID
  */ 
  @JsonProperty(JSON_PROPERTY_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPOIID(String POIID) {
    this.POIID = POIID;
  }


  /**
   * Return true if this MessageHeader object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageHeader messageHeader = (MessageHeader) o;
    return Objects.equals(this.protocolVersion, messageHeader.protocolVersion) &&
        Objects.equals(this.messageClass, messageHeader.messageClass) &&
        Objects.equals(this.messageCategory, messageHeader.messageCategory) &&
        Objects.equals(this.messageType, messageHeader.messageType) &&
        Objects.equals(this.serviceID, messageHeader.serviceID) &&
        Objects.equals(this.deviceID, messageHeader.deviceID) &&
        Objects.equals(this.saleID, messageHeader.saleID) &&
        Objects.equals(this.POIID, messageHeader.POIID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(protocolVersion, messageClass, messageCategory, messageType, serviceID, deviceID, saleID, POIID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageHeader {\n");
    sb.append("    protocolVersion: ").append(toIndentedString(protocolVersion)).append("\n");
    sb.append("    messageClass: ").append(toIndentedString(messageClass)).append("\n");
    sb.append("    messageCategory: ").append(toIndentedString(messageCategory)).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    serviceID: ").append(toIndentedString(serviceID)).append("\n");
    sb.append("    deviceID: ").append(toIndentedString(deviceID)).append("\n");
    sb.append("    saleID: ").append(toIndentedString(saleID)).append("\n");
    sb.append("    POIID: ").append(toIndentedString(POIID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of MessageHeader given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MessageHeader
   * @throws JsonProcessingException if the JSON string is invalid with respect to MessageHeader
   */
  public static MessageHeader fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, MessageHeader.class);
  }
/**
  * Convert an instance of MessageHeader to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

