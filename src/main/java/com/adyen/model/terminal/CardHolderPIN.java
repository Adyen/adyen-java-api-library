/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.PINFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * CardHolderPIN
 */
@JsonPropertyOrder({
  CardHolderPIN.JSON_PROPERTY_ENCR_P_I_N_BLOCK,
  CardHolderPIN.JSON_PROPERTY_PI_N_FORMAT,
  CardHolderPIN.JSON_PROPERTY_ADDITIONAL_INPUT
})

public class CardHolderPIN {
  public static final String JSON_PROPERTY_ENCR_P_I_N_BLOCK = "EncrPINBlock";
  private String encrPINBlock;

  public static final String JSON_PROPERTY_PI_N_FORMAT = "PINFormat";
  private PINFormat piNFormat;

  public static final String JSON_PROPERTY_ADDITIONAL_INPUT = "AdditionalInput";
  private String additionalInput;

  public CardHolderPIN() { 
  }

  public CardHolderPIN encrPINBlock(String encrPINBlock) {
    this.encrPINBlock = encrPINBlock;
    return this;
  }

   /**
   * Get encrPINBlock
   * @return encrPINBlock
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENCR_P_I_N_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncrPINBlock() {
    return encrPINBlock;
  }


 /**
  * encrPINBlock
  *
  * @param encrPINBlock
  */ 
  @JsonProperty(JSON_PROPERTY_ENCR_P_I_N_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncrPINBlock(String encrPINBlock) {
    this.encrPINBlock = encrPINBlock;
  }


  public CardHolderPIN piNFormat(PINFormat piNFormat) {
    this.piNFormat = piNFormat;
    return this;
  }

   /**
   * Get piNFormat
   * @return piNFormat
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PI_N_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PINFormat getPiNFormat() {
    return piNFormat;
  }


 /**
  * piNFormat
  *
  * @param piNFormat
  */ 
  @JsonProperty(JSON_PROPERTY_PI_N_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPiNFormat(PINFormat piNFormat) {
    this.piNFormat = piNFormat;
  }


  public CardHolderPIN additionalInput(String additionalInput) {
    this.additionalInput = additionalInput;
    return this;
  }

   /**
   * Get additionalInput
   * @return additionalInput
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalInput() {
    return additionalInput;
  }


 /**
  * additionalInput
  *
  * @param additionalInput
  */ 
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInput(String additionalInput) {
    this.additionalInput = additionalInput;
  }


  /**
   * Return true if this CardHolderPIN object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardHolderPIN cardHolderPIN = (CardHolderPIN) o;
    return Objects.equals(this.encrPINBlock, cardHolderPIN.encrPINBlock) &&
        Objects.equals(this.piNFormat, cardHolderPIN.piNFormat) &&
        Objects.equals(this.additionalInput, cardHolderPIN.additionalInput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(encrPINBlock, piNFormat, additionalInput);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardHolderPIN {\n");
    sb.append("    encrPINBlock: ").append(toIndentedString(encrPINBlock)).append("\n");
    sb.append("    piNFormat: ").append(toIndentedString(piNFormat)).append("\n");
    sb.append("    additionalInput: ").append(toIndentedString(additionalInput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of CardHolderPIN given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CardHolderPIN
   * @throws JsonProcessingException if the JSON string is invalid with respect to CardHolderPIN
   */
  public static CardHolderPIN fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, CardHolderPIN.class);
  }
/**
  * Convert an instance of CardHolderPIN to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

