/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.DisplayOutput;
import com.adyen.model.terminal.TransactionAction;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It conveys the services that will be enabled for the  POI Terminal without the request of the Sale System, and a possible invitation for the Customer to start the services. Content of the Enable Service Request message.
 */
@ApiModel(description = "It conveys the services that will be enabled for the  POI Terminal without the request of the Sale System, and a possible invitation for the Customer to start the services. Content of the Enable Service Request message.")
@JsonPropertyOrder({
  EnableServiceRequest.JSON_PROPERTY_TRANSACTION_ACTION,
  EnableServiceRequest.JSON_PROPERTY_SERVICES_ENABLED,
  EnableServiceRequest.JSON_PROPERTY_DISPLAY_OUTPUT
})

public class EnableServiceRequest {
  public static final String JSON_PROPERTY_TRANSACTION_ACTION = "TransactionAction";
  private TransactionAction transactionAction;

  /**
   * Gets or Sets servicesEnabled
   */
  public enum ServicesEnabledEnum {
    CARDACQUISITION("CardAcquisition"),
    
    LOYALTY("Loyalty"),
    
    PAYMENT("Payment");

    private String value;

    ServicesEnabledEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServicesEnabledEnum fromValue(String value) {
      for (ServicesEnabledEnum b : ServicesEnabledEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SERVICES_ENABLED = "ServicesEnabled";
  private List<ServicesEnabledEnum> servicesEnabled = null;

  public static final String JSON_PROPERTY_DISPLAY_OUTPUT = "DisplayOutput";
  private DisplayOutput displayOutput;

  public EnableServiceRequest() { 
  }

  public EnableServiceRequest transactionAction(TransactionAction transactionAction) {
    this.transactionAction = transactionAction;
    return this;
  }

   /**
   * Get transactionAction
   * @return transactionAction
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionAction getTransactionAction() {
    return transactionAction;
  }


 /**
  * transactionAction
  *
  * @param transactionAction
  */ 
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionAction(TransactionAction transactionAction) {
    this.transactionAction = transactionAction;
  }


  public EnableServiceRequest servicesEnabled(List<ServicesEnabledEnum> servicesEnabled) {
    this.servicesEnabled = servicesEnabled;
    return this;
  }

  public EnableServiceRequest addServicesEnabledItem(ServicesEnabledEnum servicesEnabledItem) {
    if (this.servicesEnabled == null) {
      this.servicesEnabled = new ArrayList<>();
    }
    this.servicesEnabled.add(servicesEnabledItem);
    return this;
  }

   /**
   * Get servicesEnabled
   * @return servicesEnabled
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICES_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ServicesEnabledEnum> getServicesEnabled() {
    return servicesEnabled;
  }


 /**
  * servicesEnabled
  *
  * @param servicesEnabled
  */ 
  @JsonProperty(JSON_PROPERTY_SERVICES_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServicesEnabled(List<ServicesEnabledEnum> servicesEnabled) {
    this.servicesEnabled = servicesEnabled;
  }


  public EnableServiceRequest displayOutput(DisplayOutput displayOutput) {
    this.displayOutput = displayOutput;
    return this;
  }

   /**
   * Get displayOutput
   * @return displayOutput
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DisplayOutput getDisplayOutput() {
    return displayOutput;
  }


 /**
  * displayOutput
  *
  * @param displayOutput
  */ 
  @JsonProperty(JSON_PROPERTY_DISPLAY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayOutput(DisplayOutput displayOutput) {
    this.displayOutput = displayOutput;
  }


  /**
   * Return true if this EnableServiceRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnableServiceRequest enableServiceRequest = (EnableServiceRequest) o;
    return Objects.equals(this.transactionAction, enableServiceRequest.transactionAction) &&
        Objects.equals(this.servicesEnabled, enableServiceRequest.servicesEnabled) &&
        Objects.equals(this.displayOutput, enableServiceRequest.displayOutput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionAction, servicesEnabled, displayOutput);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnableServiceRequest {\n");
    sb.append("    transactionAction: ").append(toIndentedString(transactionAction)).append("\n");
    sb.append("    servicesEnabled: ").append(toIndentedString(servicesEnabled)).append("\n");
    sb.append("    displayOutput: ").append(toIndentedString(displayOutput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of EnableServiceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnableServiceRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to EnableServiceRequest
   */
  public static EnableServiceRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, EnableServiceRequest.class);
  }
/**
  * Convert an instance of EnableServiceRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

