/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.LoyaltyTransactionType;
import com.adyen.model.terminal.OriginalPOITransaction;
import com.adyen.model.terminal.SaleItem;
import com.adyen.model.terminal.TransactionConditions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * LoyaltyTransaction
 */
@JsonPropertyOrder({
  LoyaltyTransaction.JSON_PROPERTY_LOYALTY_TRANSACTION_TYPE,
  LoyaltyTransaction.JSON_PROPERTY_CURRENCY,
  LoyaltyTransaction.JSON_PROPERTY_TOTAL_AMOUNT,
  LoyaltyTransaction.JSON_PROPERTY_ORIGINAL_P_O_I_TRANSACTION,
  LoyaltyTransaction.JSON_PROPERTY_TRANSACTION_CONDITIONS,
  LoyaltyTransaction.JSON_PROPERTY_SALE_ITEM
})

public class LoyaltyTransaction {
  public static final String JSON_PROPERTY_LOYALTY_TRANSACTION_TYPE = "LoyaltyTransactionType";
  private LoyaltyTransactionType loyaltyTransactionType;

  public static final String JSON_PROPERTY_CURRENCY = "Currency";
  private String currency;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "TotalAmount";
  private BigDecimal totalAmount;

  public static final String JSON_PROPERTY_ORIGINAL_P_O_I_TRANSACTION = "OriginalPOITransaction";
  private OriginalPOITransaction originalPOITransaction;

  public static final String JSON_PROPERTY_TRANSACTION_CONDITIONS = "TransactionConditions";
  private TransactionConditions transactionConditions;

  public static final String JSON_PROPERTY_SALE_ITEM = "SaleItem";
  private List<SaleItem> saleItem = null;

  public LoyaltyTransaction() { 
  }

  public LoyaltyTransaction loyaltyTransactionType(LoyaltyTransactionType loyaltyTransactionType) {
    this.loyaltyTransactionType = loyaltyTransactionType;
    return this;
  }

   /**
   * Get loyaltyTransactionType
   * @return loyaltyTransactionType
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOYALTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoyaltyTransactionType getLoyaltyTransactionType() {
    return loyaltyTransactionType;
  }


 /**
  * loyaltyTransactionType
  *
  * @param loyaltyTransactionType
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_TRANSACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyTransactionType(LoyaltyTransactionType loyaltyTransactionType) {
    this.loyaltyTransactionType = loyaltyTransactionType;
  }


  public LoyaltyTransaction currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


 /**
  * currency
  *
  * @param currency
  */ 
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public LoyaltyTransaction totalAmount(BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Get totalAmount
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return totalAmount
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalAmount() {
    return totalAmount;
  }


 /**
  * totalAmount
  *
  * @param totalAmount
  */ 
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAmount(BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
  }


  public LoyaltyTransaction originalPOITransaction(OriginalPOITransaction originalPOITransaction) {
    this.originalPOITransaction = originalPOITransaction;
    return this;
  }

   /**
   * Get originalPOITransaction
   * @return originalPOITransaction
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORIGINAL_P_O_I_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OriginalPOITransaction getOriginalPOITransaction() {
    return originalPOITransaction;
  }


 /**
  * originalPOITransaction
  *
  * @param originalPOITransaction
  */ 
  @JsonProperty(JSON_PROPERTY_ORIGINAL_P_O_I_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalPOITransaction(OriginalPOITransaction originalPOITransaction) {
    this.originalPOITransaction = originalPOITransaction;
  }


  public LoyaltyTransaction transactionConditions(TransactionConditions transactionConditions) {
    this.transactionConditions = transactionConditions;
    return this;
  }

   /**
   * Get transactionConditions
   * @return transactionConditions
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionConditions getTransactionConditions() {
    return transactionConditions;
  }


 /**
  * transactionConditions
  *
  * @param transactionConditions
  */ 
  @JsonProperty(JSON_PROPERTY_TRANSACTION_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionConditions(TransactionConditions transactionConditions) {
    this.transactionConditions = transactionConditions;
  }


  public LoyaltyTransaction saleItem(List<SaleItem> saleItem) {
    this.saleItem = saleItem;
    return this;
  }

  public LoyaltyTransaction addSaleItemItem(SaleItem saleItemItem) {
    if (this.saleItem == null) {
      this.saleItem = new ArrayList<>();
    }
    this.saleItem.add(saleItemItem);
    return this;
  }

   /**
   * Get saleItem
   * @return saleItem
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SALE_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SaleItem> getSaleItem() {
    return saleItem;
  }


 /**
  * saleItem
  *
  * @param saleItem
  */ 
  @JsonProperty(JSON_PROPERTY_SALE_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleItem(List<SaleItem> saleItem) {
    this.saleItem = saleItem;
  }


  /**
   * Return true if this LoyaltyTransaction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyTransaction loyaltyTransaction = (LoyaltyTransaction) o;
    return Objects.equals(this.loyaltyTransactionType, loyaltyTransaction.loyaltyTransactionType) &&
        Objects.equals(this.currency, loyaltyTransaction.currency) &&
        Objects.equals(this.totalAmount, loyaltyTransaction.totalAmount) &&
        Objects.equals(this.originalPOITransaction, loyaltyTransaction.originalPOITransaction) &&
        Objects.equals(this.transactionConditions, loyaltyTransaction.transactionConditions) &&
        Objects.equals(this.saleItem, loyaltyTransaction.saleItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loyaltyTransactionType, currency, totalAmount, originalPOITransaction, transactionConditions, saleItem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyTransaction {\n");
    sb.append("    loyaltyTransactionType: ").append(toIndentedString(loyaltyTransactionType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    originalPOITransaction: ").append(toIndentedString(originalPOITransaction)).append("\n");
    sb.append("    transactionConditions: ").append(toIndentedString(transactionConditions)).append("\n");
    sb.append("    saleItem: ").append(toIndentedString(saleItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of LoyaltyTransaction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyTransaction
   * @throws JsonProcessingException if the JSON string is invalid with respect to LoyaltyTransaction
   */
  public static LoyaltyTransaction fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, LoyaltyTransaction.class);
  }
/**
  * Convert an instance of LoyaltyTransaction to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

