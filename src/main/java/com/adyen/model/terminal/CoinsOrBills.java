/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Indicates the remaining number of coins or bills of a given value in a cash handling device. When the cash handling machine does not have any more coins or bills of a certain value, the number must be equal to 0. Number of coins or bills of a given value.
 */
@ApiModel(description = "Indicates the remaining number of coins or bills of a given value in a cash handling device. When the cash handling machine does not have any more coins or bills of a certain value, the number must be equal to 0. Number of coins or bills of a given value.")
@JsonPropertyOrder({
  CoinsOrBills.JSON_PROPERTY_UNIT_VALUE,
  CoinsOrBills.JSON_PROPERTY_NUMBER
})

public class CoinsOrBills {
  public static final String JSON_PROPERTY_UNIT_VALUE = "UnitValue";
  private BigDecimal unitValue;

  public static final String JSON_PROPERTY_NUMBER = "Number";
  private Integer number;

  public CoinsOrBills() { 
  }

  public CoinsOrBills unitValue(BigDecimal unitValue) {
    this.unitValue = unitValue;
    return this;
  }

   /**
   * Value of a coin or bill.
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return unitValue
  **/
  @ApiModelProperty(required = true, value = "Value of a coin or bill.")
  @JsonProperty(JSON_PROPERTY_UNIT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getUnitValue() {
    return unitValue;
  }


 /**
  * Value of a coin or bill.
  *
  * @param unitValue
  */ 
  @JsonProperty(JSON_PROPERTY_UNIT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitValue(BigDecimal unitValue) {
    this.unitValue = unitValue;
  }


  public CoinsOrBills number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Number of elements.
   * @return number
  **/
  @ApiModelProperty(required = true, value = "Number of elements.")
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumber() {
    return number;
  }


 /**
  * Number of elements.
  *
  * @param number
  */ 
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(Integer number) {
    this.number = number;
  }


  /**
   * Return true if this CoinsOrBills object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinsOrBills coinsOrBills = (CoinsOrBills) o;
    return Objects.equals(this.unitValue, coinsOrBills.unitValue) &&
        Objects.equals(this.number, coinsOrBills.number);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unitValue, number);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinsOrBills {\n");
    sb.append("    unitValue: ").append(toIndentedString(unitValue)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of CoinsOrBills given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CoinsOrBills
   * @throws JsonProcessingException if the JSON string is invalid with respect to CoinsOrBills
   */
  public static CoinsOrBills fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, CoinsOrBills.class);
  }
/**
  * Convert an instance of CoinsOrBills to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

