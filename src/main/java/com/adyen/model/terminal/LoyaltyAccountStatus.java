/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.LoyaltyAccount;
import com.adyen.model.terminal.LoyaltyUnit;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * LoyaltyAccountStatus
 */
@JsonPropertyOrder({
  LoyaltyAccountStatus.JSON_PROPERTY_LOYALTY_ACCOUNT,
  LoyaltyAccountStatus.JSON_PROPERTY_CURRENT_BALANCE,
  LoyaltyAccountStatus.JSON_PROPERTY_LOYALTY_UNIT,
  LoyaltyAccountStatus.JSON_PROPERTY_CURRENCY
})

public class LoyaltyAccountStatus {
  public static final String JSON_PROPERTY_LOYALTY_ACCOUNT = "LoyaltyAccount";
  private LoyaltyAccount loyaltyAccount;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "CurrentBalance";
  private BigDecimal currentBalance;

  public static final String JSON_PROPERTY_LOYALTY_UNIT = "LoyaltyUnit";
  private LoyaltyUnit loyaltyUnit;

  public static final String JSON_PROPERTY_CURRENCY = "Currency";
  private String currency;

  public LoyaltyAccountStatus() { 
  }

  public LoyaltyAccountStatus loyaltyAccount(LoyaltyAccount loyaltyAccount) {
    this.loyaltyAccount = loyaltyAccount;
    return this;
  }

   /**
   * Get loyaltyAccount
   * @return loyaltyAccount
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoyaltyAccount getLoyaltyAccount() {
    return loyaltyAccount;
  }


 /**
  * loyaltyAccount
  *
  * @param loyaltyAccount
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyAccount(LoyaltyAccount loyaltyAccount) {
    this.loyaltyAccount = loyaltyAccount;
  }


  public LoyaltyAccountStatus currentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Get currentBalance
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return currentBalance
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentBalance() {
    return currentBalance;
  }


 /**
  * currentBalance
  *
  * @param currentBalance
  */ 
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
  }


  public LoyaltyAccountStatus loyaltyUnit(LoyaltyUnit loyaltyUnit) {
    this.loyaltyUnit = loyaltyUnit;
    return this;
  }

   /**
   * Get loyaltyUnit
   * @return loyaltyUnit
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOYALTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoyaltyUnit getLoyaltyUnit() {
    return loyaltyUnit;
  }


 /**
  * loyaltyUnit
  *
  * @param loyaltyUnit
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyUnit(LoyaltyUnit loyaltyUnit) {
    this.loyaltyUnit = loyaltyUnit;
  }


  public LoyaltyAccountStatus currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


 /**
  * currency
  *
  * @param currency
  */ 
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  /**
   * Return true if this LoyaltyAccountStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyAccountStatus loyaltyAccountStatus = (LoyaltyAccountStatus) o;
    return Objects.equals(this.loyaltyAccount, loyaltyAccountStatus.loyaltyAccount) &&
        Objects.equals(this.currentBalance, loyaltyAccountStatus.currentBalance) &&
        Objects.equals(this.loyaltyUnit, loyaltyAccountStatus.loyaltyUnit) &&
        Objects.equals(this.currency, loyaltyAccountStatus.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loyaltyAccount, currentBalance, loyaltyUnit, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyAccountStatus {\n");
    sb.append("    loyaltyAccount: ").append(toIndentedString(loyaltyAccount)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    loyaltyUnit: ").append(toIndentedString(loyaltyUnit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of LoyaltyAccountStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyAccountStatus
   * @throws JsonProcessingException if the JSON string is invalid with respect to LoyaltyAccountStatus
   */
  public static LoyaltyAccountStatus fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, LoyaltyAccountStatus.class);
  }
/**
  * Convert an instance of LoyaltyAccountStatus to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

