/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.SaleSoftware;
import com.adyen.model.terminal.SaleTerminalData;
import com.adyen.model.terminal.TokenRequestedType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It conveys Information related to the session (period between a Login and the following Logout) to process. Content of the Login Request message.
 */
@ApiModel(description = "It conveys Information related to the session (period between a Login and the following Logout) to process. Content of the Login Request message.")
@JsonPropertyOrder({
  LoginRequest.JSON_PROPERTY_DATE_TIME,
  LoginRequest.JSON_PROPERTY_SALE_SOFTWARE,
  LoginRequest.JSON_PROPERTY_SALE_TERMINAL_DATA,
  LoginRequest.JSON_PROPERTY_TRAINING_MODE_FLAG,
  LoginRequest.JSON_PROPERTY_OPERATOR_LANGUAGE,
  LoginRequest.JSON_PROPERTY_OPERATOR_I_D,
  LoginRequest.JSON_PROPERTY_SHIFT_NUMBER,
  LoginRequest.JSON_PROPERTY_TOKEN_REQUESTED_TYPE,
  LoginRequest.JSON_PROPERTY_CUSTOMER_ORDER_REQ,
  LoginRequest.JSON_PROPERTY_PO_I_SERIAL_NUMBER
})

public class LoginRequest {
  public static final String JSON_PROPERTY_DATE_TIME = "DateTime";
  private OffsetDateTime dateTime;

  public static final String JSON_PROPERTY_SALE_SOFTWARE = "SaleSoftware";
  private SaleSoftware saleSoftware;

  public static final String JSON_PROPERTY_SALE_TERMINAL_DATA = "SaleTerminalData";
  private SaleTerminalData saleTerminalData;

  public static final String JSON_PROPERTY_TRAINING_MODE_FLAG = "TrainingModeFlag";
  private Boolean trainingModeFlag = false;

  public static final String JSON_PROPERTY_OPERATOR_LANGUAGE = "OperatorLanguage";
  private String operatorLanguage;

  public static final String JSON_PROPERTY_OPERATOR_I_D = "OperatorID";
  private String operatorID;

  public static final String JSON_PROPERTY_SHIFT_NUMBER = "ShiftNumber";
  private String shiftNumber;

  public static final String JSON_PROPERTY_TOKEN_REQUESTED_TYPE = "TokenRequestedType";
  private TokenRequestedType tokenRequestedType;

  /**
   * Gets or Sets customerOrderReq
   */
  public enum CustomerOrderReqEnum {
    BOTH("Both"),
    
    CLOSED("Closed"),
    
    OPEN("Open");

    private String value;

    CustomerOrderReqEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CustomerOrderReqEnum fromValue(String value) {
      for (CustomerOrderReqEnum b : CustomerOrderReqEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CUSTOMER_ORDER_REQ = "CustomerOrderReq";
  private List<CustomerOrderReqEnum> customerOrderReq = null;

  public static final String JSON_PROPERTY_PO_I_SERIAL_NUMBER = "POISerialNumber";
  private String poISerialNumber;

  public LoginRequest() { 
  }

  public LoginRequest dateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
    return this;
  }

   /**
   * Date and Time.
   * @return dateTime
  **/
  @ApiModelProperty(required = true, value = "Date and Time.")
  @JsonProperty(JSON_PROPERTY_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateTime() {
    return dateTime;
  }


 /**
  * Date and Time.
  *
  * @param dateTime
  */ 
  @JsonProperty(JSON_PROPERTY_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
  }


  public LoginRequest saleSoftware(SaleSoftware saleSoftware) {
    this.saleSoftware = saleSoftware;
    return this;
  }

   /**
   * Get saleSoftware
   * @return saleSoftware
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SALE_SOFTWARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SaleSoftware getSaleSoftware() {
    return saleSoftware;
  }


 /**
  * saleSoftware
  *
  * @param saleSoftware
  */ 
  @JsonProperty(JSON_PROPERTY_SALE_SOFTWARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleSoftware(SaleSoftware saleSoftware) {
    this.saleSoftware = saleSoftware;
  }


  public LoginRequest saleTerminalData(SaleTerminalData saleTerminalData) {
    this.saleTerminalData = saleTerminalData;
    return this;
  }

   /**
   * Get saleTerminalData
   * @return saleTerminalData
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SALE_TERMINAL_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SaleTerminalData getSaleTerminalData() {
    return saleTerminalData;
  }


 /**
  * saleTerminalData
  *
  * @param saleTerminalData
  */ 
  @JsonProperty(JSON_PROPERTY_SALE_TERMINAL_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleTerminalData(SaleTerminalData saleTerminalData) {
    this.saleTerminalData = saleTerminalData;
  }


  public LoginRequest trainingModeFlag(Boolean trainingModeFlag) {
    this.trainingModeFlag = trainingModeFlag;
    return this;
  }

   /**
   * The POI does not realise the transaction with the Acquirer.
   * @return trainingModeFlag
  **/
  @ApiModelProperty(value = "The POI does not realise the transaction with the Acquirer.")
  @JsonProperty(JSON_PROPERTY_TRAINING_MODE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrainingModeFlag() {
    return trainingModeFlag;
  }


 /**
  * The POI does not realise the transaction with the Acquirer.
  *
  * @param trainingModeFlag
  */ 
  @JsonProperty(JSON_PROPERTY_TRAINING_MODE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrainingModeFlag(Boolean trainingModeFlag) {
    this.trainingModeFlag = trainingModeFlag;
  }


  public LoginRequest operatorLanguage(String operatorLanguage) {
    this.operatorLanguage = operatorLanguage;
    return this;
  }

   /**
   * Default value for Device type displays.
   * @return operatorLanguage
  **/
  @ApiModelProperty(required = true, value = "Default value for Device type displays.")
  @JsonProperty(JSON_PROPERTY_OPERATOR_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperatorLanguage() {
    return operatorLanguage;
  }


 /**
  * Default value for Device type displays.
  *
  * @param operatorLanguage
  */ 
  @JsonProperty(JSON_PROPERTY_OPERATOR_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperatorLanguage(String operatorLanguage) {
    this.operatorLanguage = operatorLanguage;
  }


  public LoginRequest operatorID(String operatorID) {
    this.operatorID = operatorID;
    return this;
  }

   /**
   * 4 conditions to send it: a) the Sale System wants the POI log it in the transaction log b) because of reconciliation.
   * @return operatorID
  **/
  @ApiModelProperty(value = "4 conditions to send it: a) the Sale System wants the POI log it in the transaction log b) because of reconciliation.")
  @JsonProperty(JSON_PROPERTY_OPERATOR_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperatorID() {
    return operatorID;
  }


 /**
  * 4 conditions to send it: a) the Sale System wants the POI log it in the transaction log b) because of reconciliation.
  *
  * @param operatorID
  */ 
  @JsonProperty(JSON_PROPERTY_OPERATOR_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperatorID(String operatorID) {
    this.operatorID = operatorID;
  }


  public LoginRequest shiftNumber(String shiftNumber) {
    this.shiftNumber = shiftNumber;
    return this;
  }

   /**
   * Same as OperatorID.
   * @return shiftNumber
  **/
  @ApiModelProperty(value = "Same as OperatorID.")
  @JsonProperty(JSON_PROPERTY_SHIFT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShiftNumber() {
    return shiftNumber;
  }


 /**
  * Same as OperatorID.
  *
  * @param shiftNumber
  */ 
  @JsonProperty(JSON_PROPERTY_SHIFT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShiftNumber(String shiftNumber) {
    this.shiftNumber = shiftNumber;
  }


  public LoginRequest tokenRequestedType(TokenRequestedType tokenRequestedType) {
    this.tokenRequestedType = tokenRequestedType;
    return this;
  }

   /**
   * Get tokenRequestedType
   * @return tokenRequestedType
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN_REQUESTED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TokenRequestedType getTokenRequestedType() {
    return tokenRequestedType;
  }


 /**
  * tokenRequestedType
  *
  * @param tokenRequestedType
  */ 
  @JsonProperty(JSON_PROPERTY_TOKEN_REQUESTED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenRequestedType(TokenRequestedType tokenRequestedType) {
    this.tokenRequestedType = tokenRequestedType;
  }


  public LoginRequest customerOrderReq(List<CustomerOrderReqEnum> customerOrderReq) {
    this.customerOrderReq = customerOrderReq;
    return this;
  }

  public LoginRequest addCustomerOrderReqItem(CustomerOrderReqEnum customerOrderReqItem) {
    if (this.customerOrderReq == null) {
      this.customerOrderReq = new ArrayList<>();
    }
    this.customerOrderReq.add(customerOrderReqItem);
    return this;
  }

   /**
   * Get customerOrderReq
   * @return customerOrderReq
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ORDER_REQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CustomerOrderReqEnum> getCustomerOrderReq() {
    return customerOrderReq;
  }


 /**
  * customerOrderReq
  *
  * @param customerOrderReq
  */ 
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ORDER_REQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerOrderReq(List<CustomerOrderReqEnum> customerOrderReq) {
    this.customerOrderReq = customerOrderReq;
  }


  public LoginRequest poISerialNumber(String poISerialNumber) {
    this.poISerialNumber = poISerialNumber;
    return this;
  }

   /**
   * If the login involve a POI Terminal and not the first Login to the POI System.
   * @return poISerialNumber
  **/
  @ApiModelProperty(value = "If the login involve a POI Terminal and not the first Login to the POI System.")
  @JsonProperty(JSON_PROPERTY_PO_I_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPoISerialNumber() {
    return poISerialNumber;
  }


 /**
  * If the login involve a POI Terminal and not the first Login to the POI System.
  *
  * @param poISerialNumber
  */ 
  @JsonProperty(JSON_PROPERTY_PO_I_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPoISerialNumber(String poISerialNumber) {
    this.poISerialNumber = poISerialNumber;
  }


  /**
   * Return true if this LoginRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginRequest loginRequest = (LoginRequest) o;
    return Objects.equals(this.dateTime, loginRequest.dateTime) &&
        Objects.equals(this.saleSoftware, loginRequest.saleSoftware) &&
        Objects.equals(this.saleTerminalData, loginRequest.saleTerminalData) &&
        Objects.equals(this.trainingModeFlag, loginRequest.trainingModeFlag) &&
        Objects.equals(this.operatorLanguage, loginRequest.operatorLanguage) &&
        Objects.equals(this.operatorID, loginRequest.operatorID) &&
        Objects.equals(this.shiftNumber, loginRequest.shiftNumber) &&
        Objects.equals(this.tokenRequestedType, loginRequest.tokenRequestedType) &&
        Objects.equals(this.customerOrderReq, loginRequest.customerOrderReq) &&
        Objects.equals(this.poISerialNumber, loginRequest.poISerialNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateTime, saleSoftware, saleTerminalData, trainingModeFlag, operatorLanguage, operatorID, shiftNumber, tokenRequestedType, customerOrderReq, poISerialNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginRequest {\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    saleSoftware: ").append(toIndentedString(saleSoftware)).append("\n");
    sb.append("    saleTerminalData: ").append(toIndentedString(saleTerminalData)).append("\n");
    sb.append("    trainingModeFlag: ").append(toIndentedString(trainingModeFlag)).append("\n");
    sb.append("    operatorLanguage: ").append(toIndentedString(operatorLanguage)).append("\n");
    sb.append("    operatorID: ").append(toIndentedString(operatorID)).append("\n");
    sb.append("    shiftNumber: ").append(toIndentedString(shiftNumber)).append("\n");
    sb.append("    tokenRequestedType: ").append(toIndentedString(tokenRequestedType)).append("\n");
    sb.append("    customerOrderReq: ").append(toIndentedString(customerOrderReq)).append("\n");
    sb.append("    poISerialNumber: ").append(toIndentedString(poISerialNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of LoginRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoginRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to LoginRequest
   */
  public static LoginRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, LoginRequest.class);
  }
/**
  * Convert an instance of LoginRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

