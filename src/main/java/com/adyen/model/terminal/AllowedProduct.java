/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Product that is payable by the payment card. Product codes that are payable by the payment card.
 */
@ApiModel(description = "Product that is payable by the payment card. Product codes that are payable by the payment card.")
@JsonPropertyOrder({
  AllowedProduct.JSON_PROPERTY_PRODUCT_CODE,
  AllowedProduct.JSON_PROPERTY_EAN_UPC,
  AllowedProduct.JSON_PROPERTY_PRODUCT_LABEL,
  AllowedProduct.JSON_PROPERTY_ADDITIONAL_PRODUCT_INFO
})

public class AllowedProduct {
  public static final String JSON_PROPERTY_PRODUCT_CODE = "ProductCode";
  private Integer productCode;

  public static final String JSON_PROPERTY_EAN_UPC = "EanUpc";
  private Integer eanUpc;

  public static final String JSON_PROPERTY_PRODUCT_LABEL = "ProductLabel";
  private String productLabel;

  public static final String JSON_PROPERTY_ADDITIONAL_PRODUCT_INFO = "AdditionalProductInfo";
  private String additionalProductInfo;

  public AllowedProduct() { 
  }

  public AllowedProduct productCode(Integer productCode) {
    this.productCode = productCode;
    return this;
  }

   /**
   * Product code of item purchased with the transaction.
   * minimum: 1
   * maximum: 20
   * @return productCode
  **/
  @ApiModelProperty(required = true, value = "Product code of item purchased with the transaction.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getProductCode() {
    return productCode;
  }


 /**
  * Product code of item purchased with the transaction.
  *
  * @param productCode
  */ 
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductCode(Integer productCode) {
    this.productCode = productCode;
  }


  public AllowedProduct eanUpc(Integer eanUpc) {
    this.eanUpc = eanUpc;
    return this;
  }

   /**
   * Standard product code of item purchased with the transaction.
   * @return eanUpc
  **/
  @ApiModelProperty(value = "Standard product code of item purchased with the transaction.")
  @JsonProperty(JSON_PROPERTY_EAN_UPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEanUpc() {
    return eanUpc;
  }


 /**
  * Standard product code of item purchased with the transaction.
  *
  * @param eanUpc
  */ 
  @JsonProperty(JSON_PROPERTY_EAN_UPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEanUpc(Integer eanUpc) {
    this.eanUpc = eanUpc;
  }


  public AllowedProduct productLabel(String productLabel) {
    this.productLabel = productLabel;
    return this;
  }

   /**
   * Product name of an item purchased with the transaction.
   * @return productLabel
  **/
  @ApiModelProperty(value = "Product name of an item purchased with the transaction.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductLabel() {
    return productLabel;
  }


 /**
  * Product name of an item purchased with the transaction.
  *
  * @param productLabel
  */ 
  @JsonProperty(JSON_PROPERTY_PRODUCT_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductLabel(String productLabel) {
    this.productLabel = productLabel;
  }


  public AllowedProduct additionalProductInfo(String additionalProductInfo) {
    this.additionalProductInfo = additionalProductInfo;
    return this;
  }

   /**
   * Additionl information related to the line item.
   * @return additionalProductInfo
  **/
  @ApiModelProperty(value = "Additionl information related to the line item.")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PRODUCT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalProductInfo() {
    return additionalProductInfo;
  }


 /**
  * Additionl information related to the line item.
  *
  * @param additionalProductInfo
  */ 
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PRODUCT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalProductInfo(String additionalProductInfo) {
    this.additionalProductInfo = additionalProductInfo;
  }


  /**
   * Return true if this AllowedProduct object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllowedProduct allowedProduct = (AllowedProduct) o;
    return Objects.equals(this.productCode, allowedProduct.productCode) &&
        Objects.equals(this.eanUpc, allowedProduct.eanUpc) &&
        Objects.equals(this.productLabel, allowedProduct.productLabel) &&
        Objects.equals(this.additionalProductInfo, allowedProduct.additionalProductInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productCode, eanUpc, productLabel, additionalProductInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllowedProduct {\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    eanUpc: ").append(toIndentedString(eanUpc)).append("\n");
    sb.append("    productLabel: ").append(toIndentedString(productLabel)).append("\n");
    sb.append("    additionalProductInfo: ").append(toIndentedString(additionalProductInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of AllowedProduct given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AllowedProduct
   * @throws JsonProcessingException if the JSON string is invalid with respect to AllowedProduct
   */
  public static AllowedProduct fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, AllowedProduct.class);
  }
/**
  * Convert an instance of AllowedProduct to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

