/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.CustomerOrder;
import com.adyen.model.terminal.Instalment;
import com.adyen.model.terminal.PaymentInstrumentData;
import com.adyen.model.terminal.PaymentType;
import com.adyen.model.terminal.TransactionIDType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PaymentData
 */
@JsonPropertyOrder({
  PaymentData.JSON_PROPERTY_PAYMENT_TYPE,
  PaymentData.JSON_PROPERTY_SPLIT_PAYMENT_FLAG,
  PaymentData.JSON_PROPERTY_REQUESTED_VALIDITY_DATE,
  PaymentData.JSON_PROPERTY_CARD_ACQUISITION_REFERENCE,
  PaymentData.JSON_PROPERTY_INSTALMENT,
  PaymentData.JSON_PROPERTY_CUSTOMER_ORDER,
  PaymentData.JSON_PROPERTY_PAYMENT_INSTRUMENT_DATA
})

public class PaymentData {
  public static final String JSON_PROPERTY_PAYMENT_TYPE = "PaymentType";
  private PaymentType paymentType;

  public static final String JSON_PROPERTY_SPLIT_PAYMENT_FLAG = "SplitPaymentFlag";
  private Boolean splitPaymentFlag = false;

  public static final String JSON_PROPERTY_REQUESTED_VALIDITY_DATE = "RequestedValidityDate";
  private LocalDate requestedValidityDate;

  public static final String JSON_PROPERTY_CARD_ACQUISITION_REFERENCE = "CardAcquisitionReference";
  private TransactionIDType cardAcquisitionReference;

  public static final String JSON_PROPERTY_INSTALMENT = "Instalment";
  private Instalment instalment;

  public static final String JSON_PROPERTY_CUSTOMER_ORDER = "CustomerOrder";
  private CustomerOrder customerOrder;

  public static final String JSON_PROPERTY_PAYMENT_INSTRUMENT_DATA = "PaymentInstrumentData";
  private PaymentInstrumentData paymentInstrumentData;

  public PaymentData() { 
  }

  public PaymentData paymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Get paymentType
   * @return paymentType
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentType getPaymentType() {
    return paymentType;
  }


 /**
  * paymentType
  *
  * @param paymentType
  */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
  }


  public PaymentData splitPaymentFlag(Boolean splitPaymentFlag) {
    this.splitPaymentFlag = splitPaymentFlag;
    return this;
  }

   /**
   * Get splitPaymentFlag
   * @return splitPaymentFlag
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SPLIT_PAYMENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSplitPaymentFlag() {
    return splitPaymentFlag;
  }


 /**
  * splitPaymentFlag
  *
  * @param splitPaymentFlag
  */ 
  @JsonProperty(JSON_PROPERTY_SPLIT_PAYMENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSplitPaymentFlag(Boolean splitPaymentFlag) {
    this.splitPaymentFlag = splitPaymentFlag;
  }


  public PaymentData requestedValidityDate(LocalDate requestedValidityDate) {
    this.requestedValidityDate = requestedValidityDate;
    return this;
  }

   /**
   * Get requestedValidityDate
   * @return requestedValidityDate
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REQUESTED_VALIDITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getRequestedValidityDate() {
    return requestedValidityDate;
  }


 /**
  * requestedValidityDate
  *
  * @param requestedValidityDate
  */ 
  @JsonProperty(JSON_PROPERTY_REQUESTED_VALIDITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestedValidityDate(LocalDate requestedValidityDate) {
    this.requestedValidityDate = requestedValidityDate;
  }


  public PaymentData cardAcquisitionReference(TransactionIDType cardAcquisitionReference) {
    this.cardAcquisitionReference = cardAcquisitionReference;
    return this;
  }

   /**
   * Get cardAcquisitionReference
   * @return cardAcquisitionReference
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CARD_ACQUISITION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionIDType getCardAcquisitionReference() {
    return cardAcquisitionReference;
  }


 /**
  * cardAcquisitionReference
  *
  * @param cardAcquisitionReference
  */ 
  @JsonProperty(JSON_PROPERTY_CARD_ACQUISITION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardAcquisitionReference(TransactionIDType cardAcquisitionReference) {
    this.cardAcquisitionReference = cardAcquisitionReference;
  }


  public PaymentData instalment(Instalment instalment) {
    this.instalment = instalment;
    return this;
  }

   /**
   * Get instalment
   * @return instalment
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INSTALMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Instalment getInstalment() {
    return instalment;
  }


 /**
  * instalment
  *
  * @param instalment
  */ 
  @JsonProperty(JSON_PROPERTY_INSTALMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstalment(Instalment instalment) {
    this.instalment = instalment;
  }


  public PaymentData customerOrder(CustomerOrder customerOrder) {
    this.customerOrder = customerOrder;
    return this;
  }

   /**
   * Get customerOrder
   * @return customerOrder
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerOrder getCustomerOrder() {
    return customerOrder;
  }


 /**
  * customerOrder
  *
  * @param customerOrder
  */ 
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerOrder(CustomerOrder customerOrder) {
    this.customerOrder = customerOrder;
  }


  public PaymentData paymentInstrumentData(PaymentInstrumentData paymentInstrumentData) {
    this.paymentInstrumentData = paymentInstrumentData;
    return this;
  }

   /**
   * Get paymentInstrumentData
   * @return paymentInstrumentData
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentInstrumentData getPaymentInstrumentData() {
    return paymentInstrumentData;
  }


 /**
  * paymentInstrumentData
  *
  * @param paymentInstrumentData
  */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentInstrumentData(PaymentInstrumentData paymentInstrumentData) {
    this.paymentInstrumentData = paymentInstrumentData;
  }


  /**
   * Return true if this PaymentData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentData paymentData = (PaymentData) o;
    return Objects.equals(this.paymentType, paymentData.paymentType) &&
        Objects.equals(this.splitPaymentFlag, paymentData.splitPaymentFlag) &&
        Objects.equals(this.requestedValidityDate, paymentData.requestedValidityDate) &&
        Objects.equals(this.cardAcquisitionReference, paymentData.cardAcquisitionReference) &&
        Objects.equals(this.instalment, paymentData.instalment) &&
        Objects.equals(this.customerOrder, paymentData.customerOrder) &&
        Objects.equals(this.paymentInstrumentData, paymentData.paymentInstrumentData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentType, splitPaymentFlag, requestedValidityDate, cardAcquisitionReference, instalment, customerOrder, paymentInstrumentData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentData {\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    splitPaymentFlag: ").append(toIndentedString(splitPaymentFlag)).append("\n");
    sb.append("    requestedValidityDate: ").append(toIndentedString(requestedValidityDate)).append("\n");
    sb.append("    cardAcquisitionReference: ").append(toIndentedString(cardAcquisitionReference)).append("\n");
    sb.append("    instalment: ").append(toIndentedString(instalment)).append("\n");
    sb.append("    customerOrder: ").append(toIndentedString(customerOrder)).append("\n");
    sb.append("    paymentInstrumentData: ").append(toIndentedString(paymentInstrumentData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PaymentData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentData
   * @throws JsonProcessingException if the JSON string is invalid with respect to PaymentData
   */
  public static PaymentData fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PaymentData.class);
  }
/**
  * Convert an instance of PaymentData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

