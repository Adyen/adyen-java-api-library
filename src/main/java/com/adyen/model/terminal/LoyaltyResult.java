/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.LoyaltyAccount;
import com.adyen.model.terminal.LoyaltyAcquirerData;
import com.adyen.model.terminal.LoyaltyAmount;
import com.adyen.model.terminal.Rebates;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * In the Message Response, the result of each loyalty brand transaction. Data related to the result of a processed loyalty transaction.
 */
@ApiModel(description = "In the Message Response, the result of each loyalty brand transaction. Data related to the result of a processed loyalty transaction.")
@JsonPropertyOrder({
  LoyaltyResult.JSON_PROPERTY_LOYALTY_ACCOUNT,
  LoyaltyResult.JSON_PROPERTY_CURRENT_BALANCE,
  LoyaltyResult.JSON_PROPERTY_LOYALTY_AMOUNT,
  LoyaltyResult.JSON_PROPERTY_LOYALTY_ACQUIRER_DATA,
  LoyaltyResult.JSON_PROPERTY_REBATES
})

public class LoyaltyResult {
  public static final String JSON_PROPERTY_LOYALTY_ACCOUNT = "LoyaltyAccount";
  private LoyaltyAccount loyaltyAccount;

  public static final String JSON_PROPERTY_CURRENT_BALANCE = "CurrentBalance";
  private BigDecimal currentBalance;

  public static final String JSON_PROPERTY_LOYALTY_AMOUNT = "LoyaltyAmount";
  private LoyaltyAmount loyaltyAmount;

  public static final String JSON_PROPERTY_LOYALTY_ACQUIRER_DATA = "LoyaltyAcquirerData";
  private LoyaltyAcquirerData loyaltyAcquirerData;

  public static final String JSON_PROPERTY_REBATES = "Rebates";
  private Rebates rebates;

  public LoyaltyResult() { 
  }

  public LoyaltyResult loyaltyAccount(LoyaltyAccount loyaltyAccount) {
    this.loyaltyAccount = loyaltyAccount;
    return this;
  }

   /**
   * Get loyaltyAccount
   * @return loyaltyAccount
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoyaltyAccount getLoyaltyAccount() {
    return loyaltyAccount;
  }


 /**
  * loyaltyAccount
  *
  * @param loyaltyAccount
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyAccount(LoyaltyAccount loyaltyAccount) {
    this.loyaltyAccount = loyaltyAccount;
  }


  public LoyaltyResult currentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * if known (provided by the card or an external host).
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return currentBalance
  **/
  @ApiModelProperty(value = "if known (provided by the card or an external host).")
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCurrentBalance() {
    return currentBalance;
  }


 /**
  * if known (provided by the card or an external host).
  *
  * @param currentBalance
  */ 
  @JsonProperty(JSON_PROPERTY_CURRENT_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentBalance(BigDecimal currentBalance) {
    this.currentBalance = currentBalance;
  }


  public LoyaltyResult loyaltyAmount(LoyaltyAmount loyaltyAmount) {
    this.loyaltyAmount = loyaltyAmount;
    return this;
  }

   /**
   * Get loyaltyAmount
   * @return loyaltyAmount
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOYALTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoyaltyAmount getLoyaltyAmount() {
    return loyaltyAmount;
  }


 /**
  * loyaltyAmount
  *
  * @param loyaltyAmount
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyAmount(LoyaltyAmount loyaltyAmount) {
    this.loyaltyAmount = loyaltyAmount;
  }


  public LoyaltyResult loyaltyAcquirerData(LoyaltyAcquirerData loyaltyAcquirerData) {
    this.loyaltyAcquirerData = loyaltyAcquirerData;
    return this;
  }

   /**
   * Get loyaltyAcquirerData
   * @return loyaltyAcquirerData
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACQUIRER_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoyaltyAcquirerData getLoyaltyAcquirerData() {
    return loyaltyAcquirerData;
  }


 /**
  * loyaltyAcquirerData
  *
  * @param loyaltyAcquirerData
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACQUIRER_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyAcquirerData(LoyaltyAcquirerData loyaltyAcquirerData) {
    this.loyaltyAcquirerData = loyaltyAcquirerData;
  }


  public LoyaltyResult rebates(Rebates rebates) {
    this.rebates = rebates;
    return this;
  }

   /**
   * Get rebates
   * @return rebates
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REBATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Rebates getRebates() {
    return rebates;
  }


 /**
  * rebates
  *
  * @param rebates
  */ 
  @JsonProperty(JSON_PROPERTY_REBATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRebates(Rebates rebates) {
    this.rebates = rebates;
  }


  /**
   * Return true if this LoyaltyResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyResult loyaltyResult = (LoyaltyResult) o;
    return Objects.equals(this.loyaltyAccount, loyaltyResult.loyaltyAccount) &&
        Objects.equals(this.currentBalance, loyaltyResult.currentBalance) &&
        Objects.equals(this.loyaltyAmount, loyaltyResult.loyaltyAmount) &&
        Objects.equals(this.loyaltyAcquirerData, loyaltyResult.loyaltyAcquirerData) &&
        Objects.equals(this.rebates, loyaltyResult.rebates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loyaltyAccount, currentBalance, loyaltyAmount, loyaltyAcquirerData, rebates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyResult {\n");
    sb.append("    loyaltyAccount: ").append(toIndentedString(loyaltyAccount)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    loyaltyAmount: ").append(toIndentedString(loyaltyAmount)).append("\n");
    sb.append("    loyaltyAcquirerData: ").append(toIndentedString(loyaltyAcquirerData)).append("\n");
    sb.append("    rebates: ").append(toIndentedString(rebates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of LoyaltyResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyResult
   * @throws JsonProcessingException if the JSON string is invalid with respect to LoyaltyResult
   */
  public static LoyaltyResult fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, LoyaltyResult.class);
  }
/**
  * Convert an instance of LoyaltyResult to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

