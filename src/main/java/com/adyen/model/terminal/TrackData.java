/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.TrackFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * ISO 7813 - ISO 4909.  Generic data structure for a card track, used when the magstripe card reader is located on the Sale Terminal, or for magstripe Card Reader device request. The data structure is also used to store the line at the bottom of a bank check. Magnetic track or magnetic ink characters line.
 */
@ApiModel(description = "ISO 7813 - ISO 4909.  Generic data structure for a card track, used when the magstripe card reader is located on the Sale Terminal, or for magstripe Card Reader device request. The data structure is also used to store the line at the bottom of a bank check. Magnetic track or magnetic ink characters line.")
@JsonPropertyOrder({
  TrackData.JSON_PROPERTY_TRACK_NUMB,
  TrackData.JSON_PROPERTY_TRACK_FORMAT,
  TrackData.JSON_PROPERTY_TRACK_VALUE
})

public class TrackData {
  public static final String JSON_PROPERTY_TRACK_NUMB = "TrackNumb";
  private Integer trackNumb = 2;

  public static final String JSON_PROPERTY_TRACK_FORMAT = "TrackFormat";
  private TrackFormat trackFormat;

  public static final String JSON_PROPERTY_TRACK_VALUE = "TrackValue";
  private String trackValue;

  public TrackData() { 
  }

  public TrackData trackNumb(Integer trackNumb) {
    this.trackNumb = trackNumb;
    return this;
  }

   /**
   * Get trackNumb
   * minimum: 1
   * maximum: 3
   * @return trackNumb
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRACK_NUMB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTrackNumb() {
    return trackNumb;
  }


 /**
  * trackNumb
  *
  * @param trackNumb
  */ 
  @JsonProperty(JSON_PROPERTY_TRACK_NUMB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackNumb(Integer trackNumb) {
    this.trackNumb = trackNumb;
  }


  public TrackData trackFormat(TrackFormat trackFormat) {
    this.trackFormat = trackFormat;
    return this;
  }

   /**
   * Get trackFormat
   * @return trackFormat
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRACK_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TrackFormat getTrackFormat() {
    return trackFormat;
  }


 /**
  * trackFormat
  *
  * @param trackFormat
  */ 
  @JsonProperty(JSON_PROPERTY_TRACK_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackFormat(TrackFormat trackFormat) {
    this.trackFormat = trackFormat;
  }


  public TrackData trackValue(String trackValue) {
    this.trackValue = trackValue;
    return this;
  }

   /**
   * Get trackValue
   * @return trackValue
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRACK_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTrackValue() {
    return trackValue;
  }


 /**
  * trackValue
  *
  * @param trackValue
  */ 
  @JsonProperty(JSON_PROPERTY_TRACK_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackValue(String trackValue) {
    this.trackValue = trackValue;
  }


  /**
   * Return true if this TrackData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrackData trackData = (TrackData) o;
    return Objects.equals(this.trackNumb, trackData.trackNumb) &&
        Objects.equals(this.trackFormat, trackData.trackFormat) &&
        Objects.equals(this.trackValue, trackData.trackValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trackNumb, trackFormat, trackValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrackData {\n");
    sb.append("    trackNumb: ").append(toIndentedString(trackNumb)).append("\n");
    sb.append("    trackFormat: ").append(toIndentedString(trackFormat)).append("\n");
    sb.append("    trackValue: ").append(toIndentedString(trackValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of TrackData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TrackData
   * @throws JsonProcessingException if the JSON string is invalid with respect to TrackData
   */
  public static TrackData fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, TrackData.class);
  }
/**
  * Convert an instance of TrackData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

