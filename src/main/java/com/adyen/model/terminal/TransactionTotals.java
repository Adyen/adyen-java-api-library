/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.LoyaltyTotals;
import com.adyen.model.terminal.LoyaltyUnit;
import com.adyen.model.terminal.PaymentInstrumentType;
import com.adyen.model.terminal.PaymentTotals;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * If Result is Success, contains all the totals, classified as required by the Sale in the message request. At least, transaction totals are provided per Acquirer, Acquirer Settlement, and Card Brand. Result of the Sale to POI Reconciliation processing.
 */
@ApiModel(description = "If Result is Success, contains all the totals, classified as required by the Sale in the message request. At least, transaction totals are provided per Acquirer, Acquirer Settlement, and Card Brand. Result of the Sale to POI Reconciliation processing.")
@JsonPropertyOrder({
  TransactionTotals.JSON_PROPERTY_PAYMENT_INSTRUMENT_TYPE,
  TransactionTotals.JSON_PROPERTY_ACQUIRER_I_D,
  TransactionTotals.JSON_PROPERTY_HOST_RECONCILIATION_I_D,
  TransactionTotals.JSON_PROPERTY_CARD_BRAND,
  TransactionTotals.JSON_PROPERTY_P_O_I_I_D,
  TransactionTotals.JSON_PROPERTY_SALE_I_D,
  TransactionTotals.JSON_PROPERTY_OPERATOR_I_D,
  TransactionTotals.JSON_PROPERTY_SHIFT_NUMBER,
  TransactionTotals.JSON_PROPERTY_TOTALS_GROUP_I_D,
  TransactionTotals.JSON_PROPERTY_PAYMENT_CURRENCY,
  TransactionTotals.JSON_PROPERTY_PAYMENT_TOTALS,
  TransactionTotals.JSON_PROPERTY_LOYALTY_UNIT,
  TransactionTotals.JSON_PROPERTY_LOYALTY_CURRENCY,
  TransactionTotals.JSON_PROPERTY_LOYALTY_TOTALS
})

public class TransactionTotals {
  public static final String JSON_PROPERTY_PAYMENT_INSTRUMENT_TYPE = "PaymentInstrumentType";
  private PaymentInstrumentType paymentInstrumentType;

  public static final String JSON_PROPERTY_ACQUIRER_I_D = "AcquirerID";
  private Integer acquirerID;

  public static final String JSON_PROPERTY_HOST_RECONCILIATION_I_D = "HostReconciliationID";
  private String hostReconciliationID;

  public static final String JSON_PROPERTY_CARD_BRAND = "CardBrand";
  private String cardBrand;

  public static final String JSON_PROPERTY_P_O_I_I_D = "POIID";
  private String POIID;

  public static final String JSON_PROPERTY_SALE_I_D = "SaleID";
  private String saleID;

  public static final String JSON_PROPERTY_OPERATOR_I_D = "OperatorID";
  private String operatorID;

  public static final String JSON_PROPERTY_SHIFT_NUMBER = "ShiftNumber";
  private String shiftNumber;

  public static final String JSON_PROPERTY_TOTALS_GROUP_I_D = "TotalsGroupID";
  private String totalsGroupID;

  public static final String JSON_PROPERTY_PAYMENT_CURRENCY = "PaymentCurrency";
  private String paymentCurrency;

  public static final String JSON_PROPERTY_PAYMENT_TOTALS = "PaymentTotals";
  private List<PaymentTotals> paymentTotals = null;

  public static final String JSON_PROPERTY_LOYALTY_UNIT = "LoyaltyUnit";
  private LoyaltyUnit loyaltyUnit;

  public static final String JSON_PROPERTY_LOYALTY_CURRENCY = "LoyaltyCurrency";
  private String loyaltyCurrency;

  public static final String JSON_PROPERTY_LOYALTY_TOTALS = "LoyaltyTotals";
  private List<LoyaltyTotals> loyaltyTotals = null;

  public TransactionTotals() { 
  }

  public TransactionTotals paymentInstrumentType(PaymentInstrumentType paymentInstrumentType) {
    this.paymentInstrumentType = paymentInstrumentType;
    return this;
  }

   /**
   * Get paymentInstrumentType
   * @return paymentInstrumentType
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentInstrumentType getPaymentInstrumentType() {
    return paymentInstrumentType;
  }


 /**
  * paymentInstrumentType
  *
  * @param paymentInstrumentType
  */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentInstrumentType(PaymentInstrumentType paymentInstrumentType) {
    this.paymentInstrumentType = paymentInstrumentType;
  }


  public TransactionTotals acquirerID(Integer acquirerID) {
    this.acquirerID = acquirerID;
    return this;
  }

   /**
   * If available.
   * @return acquirerID
  **/
  @ApiModelProperty(value = "If available.")
  @JsonProperty(JSON_PROPERTY_ACQUIRER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAcquirerID() {
    return acquirerID;
  }


 /**
  * If available.
  *
  * @param acquirerID
  */ 
  @JsonProperty(JSON_PROPERTY_ACQUIRER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerID(Integer acquirerID) {
    this.acquirerID = acquirerID;
  }


  public TransactionTotals hostReconciliationID(String hostReconciliationID) {
    this.hostReconciliationID = hostReconciliationID;
    return this;
  }

   /**
   * If available.
   * @return hostReconciliationID
  **/
  @ApiModelProperty(value = "If available.")
  @JsonProperty(JSON_PROPERTY_HOST_RECONCILIATION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostReconciliationID() {
    return hostReconciliationID;
  }


 /**
  * If available.
  *
  * @param hostReconciliationID
  */ 
  @JsonProperty(JSON_PROPERTY_HOST_RECONCILIATION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostReconciliationID(String hostReconciliationID) {
    this.hostReconciliationID = hostReconciliationID;
  }


  public TransactionTotals cardBrand(String cardBrand) {
    this.cardBrand = cardBrand;
    return this;
  }

   /**
   * If configured to present totals per card brand, and Response.Result is Success.
   * @return cardBrand
  **/
  @ApiModelProperty(value = "If configured to present totals per card brand, and Response.Result is Success.")
  @JsonProperty(JSON_PROPERTY_CARD_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardBrand() {
    return cardBrand;
  }


 /**
  * If configured to present totals per card brand, and Response.Result is Success.
  *
  * @param cardBrand
  */ 
  @JsonProperty(JSON_PROPERTY_CARD_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardBrand(String cardBrand) {
    this.cardBrand = cardBrand;
  }


  public TransactionTotals POIID(String POIID) {
    this.POIID = POIID;
    return this;
  }

   /**
   * If requested in the message request.
   * @return POIID
  **/
  @ApiModelProperty(value = "If requested in the message request.")
  @JsonProperty(JSON_PROPERTY_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPOIID() {
    return POIID;
  }


 /**
  * If requested in the message request.
  *
  * @param POIID
  */ 
  @JsonProperty(JSON_PROPERTY_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPOIID(String POIID) {
    this.POIID = POIID;
  }


  public TransactionTotals saleID(String saleID) {
    this.saleID = saleID;
    return this;
  }

   /**
   * If requested in the message request.
   * @return saleID
  **/
  @ApiModelProperty(value = "If requested in the message request.")
  @JsonProperty(JSON_PROPERTY_SALE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSaleID() {
    return saleID;
  }


 /**
  * If requested in the message request.
  *
  * @param saleID
  */ 
  @JsonProperty(JSON_PROPERTY_SALE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleID(String saleID) {
    this.saleID = saleID;
  }


  public TransactionTotals operatorID(String operatorID) {
    this.operatorID = operatorID;
    return this;
  }

   /**
   * If requested in the message request.
   * @return operatorID
  **/
  @ApiModelProperty(value = "If requested in the message request.")
  @JsonProperty(JSON_PROPERTY_OPERATOR_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperatorID() {
    return operatorID;
  }


 /**
  * If requested in the message request.
  *
  * @param operatorID
  */ 
  @JsonProperty(JSON_PROPERTY_OPERATOR_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperatorID(String operatorID) {
    this.operatorID = operatorID;
  }


  public TransactionTotals shiftNumber(String shiftNumber) {
    this.shiftNumber = shiftNumber;
    return this;
  }

   /**
   * If requested in the message request.
   * @return shiftNumber
  **/
  @ApiModelProperty(value = "If requested in the message request.")
  @JsonProperty(JSON_PROPERTY_SHIFT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShiftNumber() {
    return shiftNumber;
  }


 /**
  * If requested in the message request.
  *
  * @param shiftNumber
  */ 
  @JsonProperty(JSON_PROPERTY_SHIFT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShiftNumber(String shiftNumber) {
    this.shiftNumber = shiftNumber;
  }


  public TransactionTotals totalsGroupID(String totalsGroupID) {
    this.totalsGroupID = totalsGroupID;
    return this;
  }

   /**
   * If requested in the message request.
   * @return totalsGroupID
  **/
  @ApiModelProperty(value = "If requested in the message request.")
  @JsonProperty(JSON_PROPERTY_TOTALS_GROUP_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTotalsGroupID() {
    return totalsGroupID;
  }


 /**
  * If requested in the message request.
  *
  * @param totalsGroupID
  */ 
  @JsonProperty(JSON_PROPERTY_TOTALS_GROUP_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalsGroupID(String totalsGroupID) {
    this.totalsGroupID = totalsGroupID;
  }


  public TransactionTotals paymentCurrency(String paymentCurrency) {
    this.paymentCurrency = paymentCurrency;
    return this;
  }

   /**
   * Currency of a monetary amount.
   * @return paymentCurrency
  **/
  @ApiModelProperty(value = "Currency of a monetary amount.")
  @JsonProperty(JSON_PROPERTY_PAYMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentCurrency() {
    return paymentCurrency;
  }


 /**
  * Currency of a monetary amount.
  *
  * @param paymentCurrency
  */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentCurrency(String paymentCurrency) {
    this.paymentCurrency = paymentCurrency;
  }


  public TransactionTotals paymentTotals(List<PaymentTotals> paymentTotals) {
    this.paymentTotals = paymentTotals;
    return this;
  }

  public TransactionTotals addPaymentTotalsItem(PaymentTotals paymentTotalsItem) {
    if (this.paymentTotals == null) {
      this.paymentTotals = new ArrayList<>();
    }
    this.paymentTotals.add(paymentTotalsItem);
    return this;
  }

   /**
   * Get paymentTotals
   * @return paymentTotals
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PaymentTotals> getPaymentTotals() {
    return paymentTotals;
  }


 /**
  * paymentTotals
  *
  * @param paymentTotals
  */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentTotals(List<PaymentTotals> paymentTotals) {
    this.paymentTotals = paymentTotals;
  }


  public TransactionTotals loyaltyUnit(LoyaltyUnit loyaltyUnit) {
    this.loyaltyUnit = loyaltyUnit;
    return this;
  }

   /**
   * Get loyaltyUnit
   * @return loyaltyUnit
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOYALTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoyaltyUnit getLoyaltyUnit() {
    return loyaltyUnit;
  }


 /**
  * loyaltyUnit
  *
  * @param loyaltyUnit
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyUnit(LoyaltyUnit loyaltyUnit) {
    this.loyaltyUnit = loyaltyUnit;
  }


  public TransactionTotals loyaltyCurrency(String loyaltyCurrency) {
    this.loyaltyCurrency = loyaltyCurrency;
    return this;
  }

   /**
   * If LoyaltyUnit is Monetary.
   * @return loyaltyCurrency
  **/
  @ApiModelProperty(value = "If LoyaltyUnit is Monetary.")
  @JsonProperty(JSON_PROPERTY_LOYALTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoyaltyCurrency() {
    return loyaltyCurrency;
  }


 /**
  * If LoyaltyUnit is Monetary.
  *
  * @param loyaltyCurrency
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyCurrency(String loyaltyCurrency) {
    this.loyaltyCurrency = loyaltyCurrency;
  }


  public TransactionTotals loyaltyTotals(List<LoyaltyTotals> loyaltyTotals) {
    this.loyaltyTotals = loyaltyTotals;
    return this;
  }

  public TransactionTotals addLoyaltyTotalsItem(LoyaltyTotals loyaltyTotalsItem) {
    if (this.loyaltyTotals == null) {
      this.loyaltyTotals = new ArrayList<>();
    }
    this.loyaltyTotals.add(loyaltyTotalsItem);
    return this;
  }

   /**
   * Get loyaltyTotals
   * @return loyaltyTotals
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOYALTY_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LoyaltyTotals> getLoyaltyTotals() {
    return loyaltyTotals;
  }


 /**
  * loyaltyTotals
  *
  * @param loyaltyTotals
  */ 
  @JsonProperty(JSON_PROPERTY_LOYALTY_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyTotals(List<LoyaltyTotals> loyaltyTotals) {
    this.loyaltyTotals = loyaltyTotals;
  }


  /**
   * Return true if this TransactionTotals object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionTotals transactionTotals = (TransactionTotals) o;
    return Objects.equals(this.paymentInstrumentType, transactionTotals.paymentInstrumentType) &&
        Objects.equals(this.acquirerID, transactionTotals.acquirerID) &&
        Objects.equals(this.hostReconciliationID, transactionTotals.hostReconciliationID) &&
        Objects.equals(this.cardBrand, transactionTotals.cardBrand) &&
        Objects.equals(this.POIID, transactionTotals.POIID) &&
        Objects.equals(this.saleID, transactionTotals.saleID) &&
        Objects.equals(this.operatorID, transactionTotals.operatorID) &&
        Objects.equals(this.shiftNumber, transactionTotals.shiftNumber) &&
        Objects.equals(this.totalsGroupID, transactionTotals.totalsGroupID) &&
        Objects.equals(this.paymentCurrency, transactionTotals.paymentCurrency) &&
        Objects.equals(this.paymentTotals, transactionTotals.paymentTotals) &&
        Objects.equals(this.loyaltyUnit, transactionTotals.loyaltyUnit) &&
        Objects.equals(this.loyaltyCurrency, transactionTotals.loyaltyCurrency) &&
        Objects.equals(this.loyaltyTotals, transactionTotals.loyaltyTotals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentInstrumentType, acquirerID, hostReconciliationID, cardBrand, POIID, saleID, operatorID, shiftNumber, totalsGroupID, paymentCurrency, paymentTotals, loyaltyUnit, loyaltyCurrency, loyaltyTotals);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionTotals {\n");
    sb.append("    paymentInstrumentType: ").append(toIndentedString(paymentInstrumentType)).append("\n");
    sb.append("    acquirerID: ").append(toIndentedString(acquirerID)).append("\n");
    sb.append("    hostReconciliationID: ").append(toIndentedString(hostReconciliationID)).append("\n");
    sb.append("    cardBrand: ").append(toIndentedString(cardBrand)).append("\n");
    sb.append("    POIID: ").append(toIndentedString(POIID)).append("\n");
    sb.append("    saleID: ").append(toIndentedString(saleID)).append("\n");
    sb.append("    operatorID: ").append(toIndentedString(operatorID)).append("\n");
    sb.append("    shiftNumber: ").append(toIndentedString(shiftNumber)).append("\n");
    sb.append("    totalsGroupID: ").append(toIndentedString(totalsGroupID)).append("\n");
    sb.append("    paymentCurrency: ").append(toIndentedString(paymentCurrency)).append("\n");
    sb.append("    paymentTotals: ").append(toIndentedString(paymentTotals)).append("\n");
    sb.append("    loyaltyUnit: ").append(toIndentedString(loyaltyUnit)).append("\n");
    sb.append("    loyaltyCurrency: ").append(toIndentedString(loyaltyCurrency)).append("\n");
    sb.append("    loyaltyTotals: ").append(toIndentedString(loyaltyTotals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of TransactionTotals given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TransactionTotals
   * @throws JsonProcessingException if the JSON string is invalid with respect to TransactionTotals
   */
  public static TransactionTotals fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, TransactionTotals.class);
  }
/**
  * Convert an instance of TransactionTotals to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

