/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.UnitOfMeasure;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * To be differentiated from the award which is the amount or quantity earned on the loyalty account. The awarded amount that is attached to an item as a rebate.
 */
@ApiModel(description = "To be differentiated from the award which is the amount or quantity earned on the loyalty account. The awarded amount that is attached to an item as a rebate.")
@JsonPropertyOrder({
  SaleItemRebate.JSON_PROPERTY_ITEM_I_D,
  SaleItemRebate.JSON_PROPERTY_PRODUCT_CODE,
  SaleItemRebate.JSON_PROPERTY_EAN_UPC,
  SaleItemRebate.JSON_PROPERTY_UNIT_OF_MEASURE,
  SaleItemRebate.JSON_PROPERTY_QUANTITY,
  SaleItemRebate.JSON_PROPERTY_ITEM_AMOUNT,
  SaleItemRebate.JSON_PROPERTY_REBATE_LABEL
})

public class SaleItemRebate {
  public static final String JSON_PROPERTY_ITEM_I_D = "ItemID";
  private Integer itemID;

  public static final String JSON_PROPERTY_PRODUCT_CODE = "ProductCode";
  private Integer productCode;

  public static final String JSON_PROPERTY_EAN_UPC = "EanUpc";
  private Integer eanUpc;

  public static final String JSON_PROPERTY_UNIT_OF_MEASURE = "UnitOfMeasure";
  private UnitOfMeasure unitOfMeasure;

  public static final String JSON_PROPERTY_QUANTITY = "Quantity";
  private String quantity;

  public static final String JSON_PROPERTY_ITEM_AMOUNT = "ItemAmount";
  private BigDecimal itemAmount;

  public static final String JSON_PROPERTY_REBATE_LABEL = "RebateLabel";
  private String rebateLabel;

  public SaleItemRebate() { 
  }

  public SaleItemRebate itemID(Integer itemID) {
    this.itemID = itemID;
    return this;
  }

   /**
   * Item identification inside a transaction (0 to n).
   * @return itemID
  **/
  @ApiModelProperty(required = true, value = "Item identification inside a transaction (0 to n).")
  @JsonProperty(JSON_PROPERTY_ITEM_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getItemID() {
    return itemID;
  }


 /**
  * Item identification inside a transaction (0 to n).
  *
  * @param itemID
  */ 
  @JsonProperty(JSON_PROPERTY_ITEM_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemID(Integer itemID) {
    this.itemID = itemID;
  }


  public SaleItemRebate productCode(Integer productCode) {
    this.productCode = productCode;
    return this;
  }

   /**
   * Product code of item purchased with the transaction.
   * minimum: 1
   * maximum: 20
   * @return productCode
  **/
  @ApiModelProperty(required = true, value = "Product code of item purchased with the transaction.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getProductCode() {
    return productCode;
  }


 /**
  * Product code of item purchased with the transaction.
  *
  * @param productCode
  */ 
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductCode(Integer productCode) {
    this.productCode = productCode;
  }


  public SaleItemRebate eanUpc(Integer eanUpc) {
    this.eanUpc = eanUpc;
    return this;
  }

   /**
   * Get eanUpc
   * @return eanUpc
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EAN_UPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEanUpc() {
    return eanUpc;
  }


 /**
  * eanUpc
  *
  * @param eanUpc
  */ 
  @JsonProperty(JSON_PROPERTY_EAN_UPC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEanUpc(Integer eanUpc) {
    this.eanUpc = eanUpc;
  }


  public SaleItemRebate unitOfMeasure(UnitOfMeasure unitOfMeasure) {
    this.unitOfMeasure = unitOfMeasure;
    return this;
  }

   /**
   * Get unitOfMeasure
   * @return unitOfMeasure
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UNIT_OF_MEASURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UnitOfMeasure getUnitOfMeasure() {
    return unitOfMeasure;
  }


 /**
  * unitOfMeasure
  *
  * @param unitOfMeasure
  */ 
  @JsonProperty(JSON_PROPERTY_UNIT_OF_MEASURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitOfMeasure(UnitOfMeasure unitOfMeasure) {
    this.unitOfMeasure = unitOfMeasure;
  }


  public SaleItemRebate quantity(String quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * if rebate is additional units.
   * @return quantity
  **/
  @ApiModelProperty(value = "if rebate is additional units.")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQuantity() {
    return quantity;
  }


 /**
  * if rebate is additional units.
  *
  * @param quantity
  */ 
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(String quantity) {
    this.quantity = quantity;
  }


  public SaleItemRebate itemAmount(BigDecimal itemAmount) {
    this.itemAmount = itemAmount;
    return this;
  }

   /**
   * if rebate on the line item amount.
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return itemAmount
  **/
  @ApiModelProperty(value = "if rebate on the line item amount.")
  @JsonProperty(JSON_PROPERTY_ITEM_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getItemAmount() {
    return itemAmount;
  }


 /**
  * if rebate on the line item amount.
  *
  * @param itemAmount
  */ 
  @JsonProperty(JSON_PROPERTY_ITEM_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemAmount(BigDecimal itemAmount) {
    this.itemAmount = itemAmount;
  }


  public SaleItemRebate rebateLabel(String rebateLabel) {
    this.rebateLabel = rebateLabel;
    return this;
  }

   /**
   * If provided by the Acquirer.
   * @return rebateLabel
  **/
  @ApiModelProperty(value = "If provided by the Acquirer.")
  @JsonProperty(JSON_PROPERTY_REBATE_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRebateLabel() {
    return rebateLabel;
  }


 /**
  * If provided by the Acquirer.
  *
  * @param rebateLabel
  */ 
  @JsonProperty(JSON_PROPERTY_REBATE_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRebateLabel(String rebateLabel) {
    this.rebateLabel = rebateLabel;
  }


  /**
   * Return true if this SaleItemRebate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleItemRebate saleItemRebate = (SaleItemRebate) o;
    return Objects.equals(this.itemID, saleItemRebate.itemID) &&
        Objects.equals(this.productCode, saleItemRebate.productCode) &&
        Objects.equals(this.eanUpc, saleItemRebate.eanUpc) &&
        Objects.equals(this.unitOfMeasure, saleItemRebate.unitOfMeasure) &&
        Objects.equals(this.quantity, saleItemRebate.quantity) &&
        Objects.equals(this.itemAmount, saleItemRebate.itemAmount) &&
        Objects.equals(this.rebateLabel, saleItemRebate.rebateLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemID, productCode, eanUpc, unitOfMeasure, quantity, itemAmount, rebateLabel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleItemRebate {\n");
    sb.append("    itemID: ").append(toIndentedString(itemID)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    eanUpc: ").append(toIndentedString(eanUpc)).append("\n");
    sb.append("    unitOfMeasure: ").append(toIndentedString(unitOfMeasure)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    itemAmount: ").append(toIndentedString(itemAmount)).append("\n");
    sb.append("    rebateLabel: ").append(toIndentedString(rebateLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of SaleItemRebate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SaleItemRebate
   * @throws JsonProcessingException if the JSON string is invalid with respect to SaleItemRebate
   */
  public static SaleItemRebate fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, SaleItemRebate.class);
  }
/**
  * Convert an instance of SaleItemRebate to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

