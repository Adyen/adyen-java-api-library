/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.terminal.DisplayOutput;
import com.adyen.model.terminal.InputData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It conveys data to display and the way to process the display, and contains the complete content to display. In addition to the display on the Input Device, it might contain an operation (the DisplayOutput element) per Display Device type. Content of the Input Request message.
 */
@ApiModel(description = "It conveys data to display and the way to process the display, and contains the complete content to display. In addition to the display on the Input Device, it might contain an operation (the DisplayOutput element) per Display Device type. Content of the Input Request message.")
@JsonPropertyOrder({
  InputRequest.JSON_PROPERTY_DISPLAY_OUTPUT,
  InputRequest.JSON_PROPERTY_INPUT_DATA
})

public class InputRequest {
  public static final String JSON_PROPERTY_DISPLAY_OUTPUT = "DisplayOutput";
  private DisplayOutput displayOutput;

  public static final String JSON_PROPERTY_INPUT_DATA = "InputData";
  private InputData inputData;

  public InputRequest() { 
  }

  public InputRequest displayOutput(DisplayOutput displayOutput) {
    this.displayOutput = displayOutput;
    return this;
  }

   /**
   * Get displayOutput
   * @return displayOutput
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DisplayOutput getDisplayOutput() {
    return displayOutput;
  }


 /**
  * displayOutput
  *
  * @param displayOutput
  */ 
  @JsonProperty(JSON_PROPERTY_DISPLAY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayOutput(DisplayOutput displayOutput) {
    this.displayOutput = displayOutput;
  }


  public InputRequest inputData(InputData inputData) {
    this.inputData = inputData;
    return this;
  }

   /**
   * Get inputData
   * @return inputData
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INPUT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InputData getInputData() {
    return inputData;
  }


 /**
  * inputData
  *
  * @param inputData
  */ 
  @JsonProperty(JSON_PROPERTY_INPUT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputData(InputData inputData) {
    this.inputData = inputData;
  }


  /**
   * Return true if this InputRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputRequest inputRequest = (InputRequest) o;
    return Objects.equals(this.displayOutput, inputRequest.displayOutput) &&
        Objects.equals(this.inputData, inputRequest.inputData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayOutput, inputData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputRequest {\n");
    sb.append("    displayOutput: ").append(toIndentedString(displayOutput)).append("\n");
    sb.append("    inputData: ").append(toIndentedString(inputData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of InputRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InputRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to InputRequest
   */
  public static InputRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, InputRequest.class);
  }
/**
  * Convert an instance of InputRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

