/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminal;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Amounts of a payment
 */
@ApiModel(description = "Amounts of a payment")
@JsonPropertyOrder({
  AmountsReq.JSON_PROPERTY_CURRENCY,
  AmountsReq.JSON_PROPERTY_REQUESTED_AMOUNT,
  AmountsReq.JSON_PROPERTY_CASH_BACK_AMOUNT,
  AmountsReq.JSON_PROPERTY_TIP_AMOUNT,
  AmountsReq.JSON_PROPERTY_PAID_AMOUNT,
  AmountsReq.JSON_PROPERTY_MINIMUM_AMOUNT_TO_DELIVER,
  AmountsReq.JSON_PROPERTY_MAXIMUM_CASH_BACK_AMOUNT,
  AmountsReq.JSON_PROPERTY_MINIMUM_SPLIT_AMOUNT
})

public class AmountsReq {
  public static final String JSON_PROPERTY_CURRENCY = "Currency";
  private String currency;

  public static final String JSON_PROPERTY_REQUESTED_AMOUNT = "RequestedAmount";
  private BigDecimal requestedAmount;

  public static final String JSON_PROPERTY_CASH_BACK_AMOUNT = "CashBackAmount";
  private BigDecimal cashBackAmount;

  public static final String JSON_PROPERTY_TIP_AMOUNT = "TipAmount";
  private BigDecimal tipAmount;

  public static final String JSON_PROPERTY_PAID_AMOUNT = "PaidAmount";
  private BigDecimal paidAmount;

  public static final String JSON_PROPERTY_MINIMUM_AMOUNT_TO_DELIVER = "MinimumAmountToDeliver";
  private BigDecimal minimumAmountToDeliver;

  public static final String JSON_PROPERTY_MAXIMUM_CASH_BACK_AMOUNT = "MaximumCashBackAmount";
  private BigDecimal maximumCashBackAmount;

  public static final String JSON_PROPERTY_MINIMUM_SPLIT_AMOUNT = "MinimumSplitAmount";
  private BigDecimal minimumSplitAmount;

  public AmountsReq() { 
  }

  public AmountsReq currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


 /**
  * currency
  *
  * @param currency
  */ 
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public AmountsReq requestedAmount(BigDecimal requestedAmount) {
    this.requestedAmount = requestedAmount;
    return this;
  }

   /**
   * Get requestedAmount
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return requestedAmount
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REQUESTED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRequestedAmount() {
    return requestedAmount;
  }


 /**
  * requestedAmount
  *
  * @param requestedAmount
  */ 
  @JsonProperty(JSON_PROPERTY_REQUESTED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestedAmount(BigDecimal requestedAmount) {
    this.requestedAmount = requestedAmount;
  }


  public AmountsReq cashBackAmount(BigDecimal cashBackAmount) {
    this.cashBackAmount = cashBackAmount;
    return this;
  }

   /**
   * Get cashBackAmount
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return cashBackAmount
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CASH_BACK_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCashBackAmount() {
    return cashBackAmount;
  }


 /**
  * cashBackAmount
  *
  * @param cashBackAmount
  */ 
  @JsonProperty(JSON_PROPERTY_CASH_BACK_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashBackAmount(BigDecimal cashBackAmount) {
    this.cashBackAmount = cashBackAmount;
  }


  public AmountsReq tipAmount(BigDecimal tipAmount) {
    this.tipAmount = tipAmount;
    return this;
  }

   /**
   * Get tipAmount
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return tipAmount
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIP_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTipAmount() {
    return tipAmount;
  }


 /**
  * tipAmount
  *
  * @param tipAmount
  */ 
  @JsonProperty(JSON_PROPERTY_TIP_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTipAmount(BigDecimal tipAmount) {
    this.tipAmount = tipAmount;
  }


  public AmountsReq paidAmount(BigDecimal paidAmount) {
    this.paidAmount = paidAmount;
    return this;
  }

   /**
   * Get paidAmount
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return paidAmount
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAID_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPaidAmount() {
    return paidAmount;
  }


 /**
  * paidAmount
  *
  * @param paidAmount
  */ 
  @JsonProperty(JSON_PROPERTY_PAID_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaidAmount(BigDecimal paidAmount) {
    this.paidAmount = paidAmount;
  }


  public AmountsReq minimumAmountToDeliver(BigDecimal minimumAmountToDeliver) {
    this.minimumAmountToDeliver = minimumAmountToDeliver;
    return this;
  }

   /**
   * Get minimumAmountToDeliver
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return minimumAmountToDeliver
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MINIMUM_AMOUNT_TO_DELIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinimumAmountToDeliver() {
    return minimumAmountToDeliver;
  }


 /**
  * minimumAmountToDeliver
  *
  * @param minimumAmountToDeliver
  */ 
  @JsonProperty(JSON_PROPERTY_MINIMUM_AMOUNT_TO_DELIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinimumAmountToDeliver(BigDecimal minimumAmountToDeliver) {
    this.minimumAmountToDeliver = minimumAmountToDeliver;
  }


  public AmountsReq maximumCashBackAmount(BigDecimal maximumCashBackAmount) {
    this.maximumCashBackAmount = maximumCashBackAmount;
    return this;
  }

   /**
   * Get maximumCashBackAmount
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return maximumCashBackAmount
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_CASH_BACK_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaximumCashBackAmount() {
    return maximumCashBackAmount;
  }


 /**
  * maximumCashBackAmount
  *
  * @param maximumCashBackAmount
  */ 
  @JsonProperty(JSON_PROPERTY_MAXIMUM_CASH_BACK_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumCashBackAmount(BigDecimal maximumCashBackAmount) {
    this.maximumCashBackAmount = maximumCashBackAmount;
  }


  public AmountsReq minimumSplitAmount(BigDecimal minimumSplitAmount) {
    this.minimumSplitAmount = minimumSplitAmount;
    return this;
  }

   /**
   * Get minimumSplitAmount
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return minimumSplitAmount
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MINIMUM_SPLIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinimumSplitAmount() {
    return minimumSplitAmount;
  }


 /**
  * minimumSplitAmount
  *
  * @param minimumSplitAmount
  */ 
  @JsonProperty(JSON_PROPERTY_MINIMUM_SPLIT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinimumSplitAmount(BigDecimal minimumSplitAmount) {
    this.minimumSplitAmount = minimumSplitAmount;
  }


  /**
   * Return true if this AmountsReq object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AmountsReq amountsReq = (AmountsReq) o;
    return Objects.equals(this.currency, amountsReq.currency) &&
        Objects.equals(this.requestedAmount, amountsReq.requestedAmount) &&
        Objects.equals(this.cashBackAmount, amountsReq.cashBackAmount) &&
        Objects.equals(this.tipAmount, amountsReq.tipAmount) &&
        Objects.equals(this.paidAmount, amountsReq.paidAmount) &&
        Objects.equals(this.minimumAmountToDeliver, amountsReq.minimumAmountToDeliver) &&
        Objects.equals(this.maximumCashBackAmount, amountsReq.maximumCashBackAmount) &&
        Objects.equals(this.minimumSplitAmount, amountsReq.minimumSplitAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, requestedAmount, cashBackAmount, tipAmount, paidAmount, minimumAmountToDeliver, maximumCashBackAmount, minimumSplitAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AmountsReq {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    requestedAmount: ").append(toIndentedString(requestedAmount)).append("\n");
    sb.append("    cashBackAmount: ").append(toIndentedString(cashBackAmount)).append("\n");
    sb.append("    tipAmount: ").append(toIndentedString(tipAmount)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("    minimumAmountToDeliver: ").append(toIndentedString(minimumAmountToDeliver)).append("\n");
    sb.append("    maximumCashBackAmount: ").append(toIndentedString(maximumCashBackAmount)).append("\n");
    sb.append("    minimumSplitAmount: ").append(toIndentedString(minimumSplitAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of AmountsReq given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AmountsReq
   * @throws JsonProcessingException if the JSON string is invalid with respect to AmountsReq
   */
  public static AmountsReq fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, AmountsReq.class);
  }
/**
  * Convert an instance of AmountsReq to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

