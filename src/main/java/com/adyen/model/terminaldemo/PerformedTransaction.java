/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.LoyaltyResult;
import com.adyen.model.terminaldemo.POIData;
import com.adyen.model.terminaldemo.PaymentResult;
import com.adyen.model.terminaldemo.Response;
import com.adyen.model.terminaldemo.SaleData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PerformedTransaction
 */
@JsonPropertyOrder({
  PerformedTransaction.JSON_PROPERTY_RESPONSE,
  PerformedTransaction.JSON_PROPERTY_SALE_DATA,
  PerformedTransaction.JSON_PROPERTY_PO_I_DATA,
  PerformedTransaction.JSON_PROPERTY_PAYMENT_RESULT,
  PerformedTransaction.JSON_PROPERTY_LOYALTY_RESULT,
  PerformedTransaction.JSON_PROPERTY_REVERSED_AMOUNT
})

public class PerformedTransaction {
  public static final String JSON_PROPERTY_RESPONSE = "Response";
  private Response response;

  public static final String JSON_PROPERTY_SALE_DATA = "SaleData";
  private SaleData saleData;

  public static final String JSON_PROPERTY_PO_I_DATA = "POIData";
  private POIData poIData;

  public static final String JSON_PROPERTY_PAYMENT_RESULT = "PaymentResult";
  private PaymentResult paymentResult;

  public static final String JSON_PROPERTY_LOYALTY_RESULT = "LoyaltyResult";
  private List<LoyaltyResult> loyaltyResult;

  public static final String JSON_PROPERTY_REVERSED_AMOUNT = "ReversedAmount";
  private BigDecimal reversedAmount;

  public PerformedTransaction() { 
  }

  /**
   * response
   *
   * @param response 
   * @return the current {@code PerformedTransaction} instance, allowing for method chaining
   */
  public PerformedTransaction response(Response response) {
    this.response = response;
    return this;
  }

  /**
   * Get response
   * @return response 
   */
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Response getResponse() {
    return response;
  }

  /**
   * response
   *
   * @param response 
   */
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponse(Response response) {
    this.response = response;
  }

  /**
   * saleData
   *
   * @param saleData 
   * @return the current {@code PerformedTransaction} instance, allowing for method chaining
   */
  public PerformedTransaction saleData(SaleData saleData) {
    this.saleData = saleData;
    return this;
  }

  /**
   * Get saleData
   * @return saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SaleData getSaleData() {
    return saleData;
  }

  /**
   * saleData
   *
   * @param saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleData(SaleData saleData) {
    this.saleData = saleData;
  }

  /**
   * poIData
   *
   * @param poIData 
   * @return the current {@code PerformedTransaction} instance, allowing for method chaining
   */
  public PerformedTransaction poIData(POIData poIData) {
    this.poIData = poIData;
    return this;
  }

  /**
   * Get poIData
   * @return poIData 
   */
  @JsonProperty(JSON_PROPERTY_PO_I_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public POIData getPoIData() {
    return poIData;
  }

  /**
   * poIData
   *
   * @param poIData 
   */
  @JsonProperty(JSON_PROPERTY_PO_I_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPoIData(POIData poIData) {
    this.poIData = poIData;
  }

  /**
   * paymentResult
   *
   * @param paymentResult 
   * @return the current {@code PerformedTransaction} instance, allowing for method chaining
   */
  public PerformedTransaction paymentResult(PaymentResult paymentResult) {
    this.paymentResult = paymentResult;
    return this;
  }

  /**
   * Get paymentResult
   * @return paymentResult 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentResult getPaymentResult() {
    return paymentResult;
  }

  /**
   * paymentResult
   *
   * @param paymentResult 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentResult(PaymentResult paymentResult) {
    this.paymentResult = paymentResult;
  }

  /**
   * loyaltyResult
   *
   * @param loyaltyResult 
   * @return the current {@code PerformedTransaction} instance, allowing for method chaining
   */
  public PerformedTransaction loyaltyResult(List<LoyaltyResult> loyaltyResult) {
    this.loyaltyResult = loyaltyResult;
    return this;
  }

  public PerformedTransaction addLoyaltyResultItem(LoyaltyResult loyaltyResultItem) {
    if (this.loyaltyResult == null) {
      this.loyaltyResult = new ArrayList<>();
    }
    this.loyaltyResult.add(loyaltyResultItem);
    return this;
  }

  /**
   * Get loyaltyResult
   * @return loyaltyResult 
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<LoyaltyResult> getLoyaltyResult() {
    return loyaltyResult;
  }

  /**
   * loyaltyResult
   *
   * @param loyaltyResult 
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyResult(List<LoyaltyResult> loyaltyResult) {
    this.loyaltyResult = loyaltyResult;
  }

  /**
   * reversedAmount
   *
   * @param reversedAmount 
   * @return the current {@code PerformedTransaction} instance, allowing for method chaining
   */
  public PerformedTransaction reversedAmount(BigDecimal reversedAmount) {
    this.reversedAmount = reversedAmount;
    return this;
  }

  /**
   * Get reversedAmount
   * minimum: 0.0
   * maximum: 99999999.999999
   * @return reversedAmount 
   */
  @JsonProperty(JSON_PROPERTY_REVERSED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getReversedAmount() {
    return reversedAmount;
  }

  /**
   * reversedAmount
   *
   * @param reversedAmount 
   */
  @JsonProperty(JSON_PROPERTY_REVERSED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReversedAmount(BigDecimal reversedAmount) {
    this.reversedAmount = reversedAmount;
  }

  /**
   * Return true if this PerformedTransaction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformedTransaction performedTransaction = (PerformedTransaction) o;
    return Objects.equals(this.response, performedTransaction.response) &&
        Objects.equals(this.saleData, performedTransaction.saleData) &&
        Objects.equals(this.poIData, performedTransaction.poIData) &&
        Objects.equals(this.paymentResult, performedTransaction.paymentResult) &&
        Objects.equals(this.loyaltyResult, performedTransaction.loyaltyResult) &&
        Objects.equals(this.reversedAmount, performedTransaction.reversedAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(response, saleData, poIData, paymentResult, loyaltyResult, reversedAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformedTransaction {\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    saleData: ").append(toIndentedString(saleData)).append("\n");
    sb.append("    poIData: ").append(toIndentedString(poIData)).append("\n");
    sb.append("    paymentResult: ").append(toIndentedString(paymentResult)).append("\n");
    sb.append("    loyaltyResult: ").append(toIndentedString(loyaltyResult)).append("\n");
    sb.append("    reversedAmount: ").append(toIndentedString(reversedAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PerformedTransaction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PerformedTransaction
   * @throws JsonProcessingException if the JSON string is invalid with respect to PerformedTransaction
   */
  public static PerformedTransaction fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PerformedTransaction.class);
  }
/**
  * Convert an instance of PerformedTransaction to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
