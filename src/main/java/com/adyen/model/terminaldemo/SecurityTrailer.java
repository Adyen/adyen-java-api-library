/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It contains information related to the security of the message. SecurityTrailer as used by Adyen.
 */
@JsonPropertyOrder({
  SecurityTrailer.JSON_PROPERTY_ADYEN_CRYPTO_VERSION,
  SecurityTrailer.JSON_PROPERTY_KEY_IDENTIFIER,
  SecurityTrailer.JSON_PROPERTY_KEY_VERSION,
  SecurityTrailer.JSON_PROPERTY_NONCE,
  SecurityTrailer.JSON_PROPERTY_HMAC
})

public class SecurityTrailer {
  public static final String JSON_PROPERTY_ADYEN_CRYPTO_VERSION = "AdyenCryptoVersion";
  private Integer adyenCryptoVersion;

  public static final String JSON_PROPERTY_KEY_IDENTIFIER = "KeyIdentifier";
  private String keyIdentifier;

  public static final String JSON_PROPERTY_KEY_VERSION = "KeyVersion";
  private Integer keyVersion;

  public static final String JSON_PROPERTY_NONCE = "Nonce";
  private byte[] nonce;

  public static final String JSON_PROPERTY_HMAC = "Hmac";
  private byte[] hmac;

  public SecurityTrailer() { 
  }

  /**
   * adyenCryptoVersion
   *
   * @param adyenCryptoVersion 
   * @return the current {@code SecurityTrailer} instance, allowing for method chaining
   */
  public SecurityTrailer adyenCryptoVersion(Integer adyenCryptoVersion) {
    this.adyenCryptoVersion = adyenCryptoVersion;
    return this;
  }

  /**
   * Get adyenCryptoVersion
   * @return adyenCryptoVersion 
   */
  @JsonProperty(JSON_PROPERTY_ADYEN_CRYPTO_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getAdyenCryptoVersion() {
    return adyenCryptoVersion;
  }

  /**
   * adyenCryptoVersion
   *
   * @param adyenCryptoVersion 
   */
  @JsonProperty(JSON_PROPERTY_ADYEN_CRYPTO_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdyenCryptoVersion(Integer adyenCryptoVersion) {
    this.adyenCryptoVersion = adyenCryptoVersion;
  }

  /**
   * keyIdentifier
   *
   * @param keyIdentifier 
   * @return the current {@code SecurityTrailer} instance, allowing for method chaining
   */
  public SecurityTrailer keyIdentifier(String keyIdentifier) {
    this.keyIdentifier = keyIdentifier;
    return this;
  }

  /**
   * Get keyIdentifier
   * @return keyIdentifier 
   */
  @JsonProperty(JSON_PROPERTY_KEY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getKeyIdentifier() {
    return keyIdentifier;
  }

  /**
   * keyIdentifier
   *
   * @param keyIdentifier 
   */
  @JsonProperty(JSON_PROPERTY_KEY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyIdentifier(String keyIdentifier) {
    this.keyIdentifier = keyIdentifier;
  }

  /**
   * keyVersion
   *
   * @param keyVersion 
   * @return the current {@code SecurityTrailer} instance, allowing for method chaining
   */
  public SecurityTrailer keyVersion(Integer keyVersion) {
    this.keyVersion = keyVersion;
    return this;
  }

  /**
   * Get keyVersion
   * @return keyVersion 
   */
  @JsonProperty(JSON_PROPERTY_KEY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getKeyVersion() {
    return keyVersion;
  }

  /**
   * keyVersion
   *
   * @param keyVersion 
   */
  @JsonProperty(JSON_PROPERTY_KEY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyVersion(Integer keyVersion) {
    this.keyVersion = keyVersion;
  }

  /**
   * nonce
   *
   * @param nonce 
   * @return the current {@code SecurityTrailer} instance, allowing for method chaining
   */
  public SecurityTrailer nonce(byte[] nonce) {
    this.nonce = nonce;
    return this;
  }

  /**
   * Get nonce
   * @return nonce 
   */
  @JsonProperty(JSON_PROPERTY_NONCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public byte[] getNonce() {
    return nonce;
  }

  /**
   * nonce
   *
   * @param nonce 
   */
  @JsonProperty(JSON_PROPERTY_NONCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonce(byte[] nonce) {
    this.nonce = nonce;
  }

  /**
   * hmac
   *
   * @param hmac 
   * @return the current {@code SecurityTrailer} instance, allowing for method chaining
   */
  public SecurityTrailer hmac(byte[] hmac) {
    this.hmac = hmac;
    return this;
  }

  /**
   * Get hmac
   * @return hmac 
   */
  @JsonProperty(JSON_PROPERTY_HMAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public byte[] getHmac() {
    return hmac;
  }

  /**
   * hmac
   *
   * @param hmac 
   */
  @JsonProperty(JSON_PROPERTY_HMAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHmac(byte[] hmac) {
    this.hmac = hmac;
  }

  /**
   * Return true if this SecurityTrailer object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityTrailer securityTrailer = (SecurityTrailer) o;
    return Objects.equals(this.adyenCryptoVersion, securityTrailer.adyenCryptoVersion) &&
        Objects.equals(this.keyIdentifier, securityTrailer.keyIdentifier) &&
        Objects.equals(this.keyVersion, securityTrailer.keyVersion) &&
        Arrays.equals(this.nonce, securityTrailer.nonce) &&
        Arrays.equals(this.hmac, securityTrailer.hmac);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adyenCryptoVersion, keyIdentifier, keyVersion, Arrays.hashCode(nonce), Arrays.hashCode(hmac));
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityTrailer {\n");
    sb.append("    adyenCryptoVersion: ").append(toIndentedString(adyenCryptoVersion)).append("\n");
    sb.append("    keyIdentifier: ").append(toIndentedString(keyIdentifier)).append("\n");
    sb.append("    keyVersion: ").append(toIndentedString(keyVersion)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    hmac: ").append(toIndentedString(hmac)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of SecurityTrailer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SecurityTrailer
   * @throws JsonProcessingException if the JSON string is invalid with respect to SecurityTrailer
   */
  public static SecurityTrailer fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, SecurityTrailer.class);
  }
/**
  * Convert an instance of SecurityTrailer to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
