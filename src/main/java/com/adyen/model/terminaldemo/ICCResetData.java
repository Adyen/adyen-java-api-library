/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * ICCResetData
 */
@JsonPropertyOrder({
  ICCResetData.JSON_PROPERTY_AT_R_VALUE,
  ICCResetData.JSON_PROPERTY_CARD_STATUS_WORDS
})

public class ICCResetData {
  public static final String JSON_PROPERTY_AT_R_VALUE = "ATRValue";
  private byte[] atRValue;

  public static final String JSON_PROPERTY_CARD_STATUS_WORDS = "CardStatusWords";
  private byte[] cardStatusWords;

  public ICCResetData() { 
  }

  /**
   * atRValue
   *
   * @param atRValue 
   * @return the current {@code ICCResetData} instance, allowing for method chaining
   */
  public ICCResetData atRValue(byte[] atRValue) {
    this.atRValue = atRValue;
    return this;
  }

  /**
   * Get atRValue
   * @return atRValue 
   */
  @JsonProperty(JSON_PROPERTY_AT_R_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public byte[] getAtRValue() {
    return atRValue;
  }

  /**
   * atRValue
   *
   * @param atRValue 
   */
  @JsonProperty(JSON_PROPERTY_AT_R_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtRValue(byte[] atRValue) {
    this.atRValue = atRValue;
  }

  /**
   * cardStatusWords
   *
   * @param cardStatusWords 
   * @return the current {@code ICCResetData} instance, allowing for method chaining
   */
  public ICCResetData cardStatusWords(byte[] cardStatusWords) {
    this.cardStatusWords = cardStatusWords;
    return this;
  }

  /**
   * Get cardStatusWords
   * @return cardStatusWords 
   */
  @JsonProperty(JSON_PROPERTY_CARD_STATUS_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public byte[] getCardStatusWords() {
    return cardStatusWords;
  }

  /**
   * cardStatusWords
   *
   * @param cardStatusWords 
   */
  @JsonProperty(JSON_PROPERTY_CARD_STATUS_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardStatusWords(byte[] cardStatusWords) {
    this.cardStatusWords = cardStatusWords;
  }

  /**
   * Return true if this ICCResetData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ICCResetData icCResetData = (ICCResetData) o;
    return Arrays.equals(this.atRValue, icCResetData.atRValue) &&
        Arrays.equals(this.cardStatusWords, icCResetData.cardStatusWords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Arrays.hashCode(atRValue), Arrays.hashCode(cardStatusWords));
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ICCResetData {\n");
    sb.append("    atRValue: ").append(toIndentedString(atRValue)).append("\n");
    sb.append("    cardStatusWords: ").append(toIndentedString(cardStatusWords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of ICCResetData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ICCResetData
   * @throws JsonProcessingException if the JSON string is invalid with respect to ICCResetData
   */
  public static ICCResetData fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, ICCResetData.class);
  }
/**
  * Convert an instance of ICCResetData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
