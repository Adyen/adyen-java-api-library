/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.AmountsReq;
import com.adyen.model.terminaldemo.OriginalPOITransaction;
import com.adyen.model.terminaldemo.TransactionConditions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PaymentTransaction
 */
@JsonPropertyOrder({
  PaymentTransaction.JSON_PROPERTY_AMOUNTS_REQ,
  PaymentTransaction.JSON_PROPERTY_ORIGINAL_P_O_I_TRANSACTION,
  PaymentTransaction.JSON_PROPERTY_TRANSACTION_CONDITIONS
})

public class PaymentTransaction {
  public static final String JSON_PROPERTY_AMOUNTS_REQ = "AmountsReq";
  private AmountsReq amountsReq;

  public static final String JSON_PROPERTY_ORIGINAL_P_O_I_TRANSACTION = "OriginalPOITransaction";
  private OriginalPOITransaction originalPOITransaction;

  public static final String JSON_PROPERTY_TRANSACTION_CONDITIONS = "TransactionConditions";
  private TransactionConditions transactionConditions;

  public PaymentTransaction() { 
  }

  /**
   * amountsReq
   *
   * @param amountsReq 
   * @return the current {@code PaymentTransaction} instance, allowing for method chaining
   */
  public PaymentTransaction amountsReq(AmountsReq amountsReq) {
    this.amountsReq = amountsReq;
    return this;
  }

  /**
   * Get amountsReq
   * @return amountsReq 
   */
  @JsonProperty(JSON_PROPERTY_AMOUNTS_REQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AmountsReq getAmountsReq() {
    return amountsReq;
  }

  /**
   * amountsReq
   *
   * @param amountsReq 
   */
  @JsonProperty(JSON_PROPERTY_AMOUNTS_REQ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountsReq(AmountsReq amountsReq) {
    this.amountsReq = amountsReq;
  }

  /**
   * originalPOITransaction
   *
   * @param originalPOITransaction 
   * @return the current {@code PaymentTransaction} instance, allowing for method chaining
   */
  public PaymentTransaction originalPOITransaction(OriginalPOITransaction originalPOITransaction) {
    this.originalPOITransaction = originalPOITransaction;
    return this;
  }

  /**
   * Get originalPOITransaction
   * @return originalPOITransaction 
   */
  @JsonProperty(JSON_PROPERTY_ORIGINAL_P_O_I_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OriginalPOITransaction getOriginalPOITransaction() {
    return originalPOITransaction;
  }

  /**
   * originalPOITransaction
   *
   * @param originalPOITransaction 
   */
  @JsonProperty(JSON_PROPERTY_ORIGINAL_P_O_I_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalPOITransaction(OriginalPOITransaction originalPOITransaction) {
    this.originalPOITransaction = originalPOITransaction;
  }

  /**
   * transactionConditions
   *
   * @param transactionConditions 
   * @return the current {@code PaymentTransaction} instance, allowing for method chaining
   */
  public PaymentTransaction transactionConditions(TransactionConditions transactionConditions) {
    this.transactionConditions = transactionConditions;
    return this;
  }

  /**
   * Get transactionConditions
   * @return transactionConditions 
   */
  @JsonProperty(JSON_PROPERTY_TRANSACTION_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TransactionConditions getTransactionConditions() {
    return transactionConditions;
  }

  /**
   * transactionConditions
   *
   * @param transactionConditions 
   */
  @JsonProperty(JSON_PROPERTY_TRANSACTION_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionConditions(TransactionConditions transactionConditions) {
    this.transactionConditions = transactionConditions;
  }

  /**
   * Return true if this PaymentTransaction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentTransaction paymentTransaction = (PaymentTransaction) o;
    return Objects.equals(this.amountsReq, paymentTransaction.amountsReq) &&
        Objects.equals(this.originalPOITransaction, paymentTransaction.originalPOITransaction) &&
        Objects.equals(this.transactionConditions, paymentTransaction.transactionConditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountsReq, originalPOITransaction, transactionConditions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentTransaction {\n");
    sb.append("    amountsReq: ").append(toIndentedString(amountsReq)).append("\n");
    sb.append("    originalPOITransaction: ").append(toIndentedString(originalPOITransaction)).append("\n");
    sb.append("    transactionConditions: ").append(toIndentedString(transactionConditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PaymentTransaction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentTransaction
   * @throws JsonProcessingException if the JSON string is invalid with respect to PaymentTransaction
   */
  public static PaymentTransaction fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PaymentTransaction.class);
  }
/**
  * Convert an instance of PaymentTransaction to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
