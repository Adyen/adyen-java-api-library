/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.MessageReference;
import com.adyen.model.terminaldemo.RepeatedMessageResponse;
import com.adyen.model.terminaldemo.Response;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Content of the TransactionStatus Response message. It conveys Information related to the status of the last or current Payment, Loyalty or Reversal transaction.
 */
@JsonPropertyOrder({
  TransactionStatusResponse.JSON_PROPERTY_RESPONSE,
  TransactionStatusResponse.JSON_PROPERTY_MESSAGE_REFERENCE,
  TransactionStatusResponse.JSON_PROPERTY_REPEATED_MESSAGE_RESPONSE
})

public class TransactionStatusResponse {
  public static final String JSON_PROPERTY_RESPONSE = "Response";
  private Response response;

  public static final String JSON_PROPERTY_MESSAGE_REFERENCE = "MessageReference";
  private MessageReference messageReference;

  public static final String JSON_PROPERTY_REPEATED_MESSAGE_RESPONSE = "RepeatedMessageResponse";
  private RepeatedMessageResponse repeatedMessageResponse;

  public TransactionStatusResponse() { 
  }

  /**
   * response
   *
   * @param response 
   * @return the current {@code TransactionStatusResponse} instance, allowing for method chaining
   */
  public TransactionStatusResponse response(Response response) {
    this.response = response;
    return this;
  }

  /**
   * Get response
   * @return response 
   */
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Response getResponse() {
    return response;
  }

  /**
   * response
   *
   * @param response 
   */
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponse(Response response) {
    this.response = response;
  }

  /**
   * messageReference
   *
   * @param messageReference 
   * @return the current {@code TransactionStatusResponse} instance, allowing for method chaining
   */
  public TransactionStatusResponse messageReference(MessageReference messageReference) {
    this.messageReference = messageReference;
    return this;
  }

  /**
   * Get messageReference
   * @return messageReference 
   */
  @JsonProperty(JSON_PROPERTY_MESSAGE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MessageReference getMessageReference() {
    return messageReference;
  }

  /**
   * messageReference
   *
   * @param messageReference 
   */
  @JsonProperty(JSON_PROPERTY_MESSAGE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageReference(MessageReference messageReference) {
    this.messageReference = messageReference;
  }

  /**
   * repeatedMessageResponse
   *
   * @param repeatedMessageResponse 
   * @return the current {@code TransactionStatusResponse} instance, allowing for method chaining
   */
  public TransactionStatusResponse repeatedMessageResponse(RepeatedMessageResponse repeatedMessageResponse) {
    this.repeatedMessageResponse = repeatedMessageResponse;
    return this;
  }

  /**
   * Get repeatedMessageResponse
   * @return repeatedMessageResponse 
   */
  @JsonProperty(JSON_PROPERTY_REPEATED_MESSAGE_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public RepeatedMessageResponse getRepeatedMessageResponse() {
    return repeatedMessageResponse;
  }

  /**
   * repeatedMessageResponse
   *
   * @param repeatedMessageResponse 
   */
  @JsonProperty(JSON_PROPERTY_REPEATED_MESSAGE_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepeatedMessageResponse(RepeatedMessageResponse repeatedMessageResponse) {
    this.repeatedMessageResponse = repeatedMessageResponse;
  }

  /**
   * Return true if this TransactionStatusResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionStatusResponse transactionStatusResponse = (TransactionStatusResponse) o;
    return Objects.equals(this.response, transactionStatusResponse.response) &&
        Objects.equals(this.messageReference, transactionStatusResponse.messageReference) &&
        Objects.equals(this.repeatedMessageResponse, transactionStatusResponse.repeatedMessageResponse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(response, messageReference, repeatedMessageResponse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionStatusResponse {\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    messageReference: ").append(toIndentedString(messageReference)).append("\n");
    sb.append("    repeatedMessageResponse: ").append(toIndentedString(repeatedMessageResponse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of TransactionStatusResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TransactionStatusResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to TransactionStatusResponse
   */
  public static TransactionStatusResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, TransactionStatusResponse.class);
  }
/**
  * Convert an instance of TransactionStatusResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
