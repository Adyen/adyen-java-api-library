/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.GlobalStatus;
import com.adyen.model.terminaldemo.PrinterStatus;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Indicate the availability of the POI Terminal components. The data element is absent if the component is not part of the POI Terminal. State of a POI Terminal.
 */
@JsonPropertyOrder({
  POIStatus.JSON_PROPERTY_GLOBAL_STATUS,
  POIStatus.JSON_PROPERTY_SECURITY_O_K_FLAG,
  POIStatus.JSON_PROPERTY_PE_D_O_K_FLAG,
  POIStatus.JSON_PROPERTY_CARD_READER_O_K_FLAG,
  POIStatus.JSON_PROPERTY_PRINTER_STATUS,
  POIStatus.JSON_PROPERTY_COMMUNICATION_O_K_FLAG,
  POIStatus.JSON_PROPERTY_FRAUD_PREVENTION_FLAG
})

public class POIStatus {
  public static final String JSON_PROPERTY_GLOBAL_STATUS = "GlobalStatus";
  private GlobalStatus globalStatus;

  public static final String JSON_PROPERTY_SECURITY_O_K_FLAG = "SecurityOKFlag";
  private Boolean securityOKFlag;

  public static final String JSON_PROPERTY_PE_D_O_K_FLAG = "PEDOKFlag";
  private Boolean peDOKFlag;

  public static final String JSON_PROPERTY_CARD_READER_O_K_FLAG = "CardReaderOKFlag";
  private Boolean cardReaderOKFlag;

  public static final String JSON_PROPERTY_PRINTER_STATUS = "PrinterStatus";
  private PrinterStatus printerStatus;

  public static final String JSON_PROPERTY_COMMUNICATION_O_K_FLAG = "CommunicationOKFlag";
  private Boolean communicationOKFlag;

  public static final String JSON_PROPERTY_FRAUD_PREVENTION_FLAG = "FraudPreventionFlag";
  private Boolean fraudPreventionFlag;

  public POIStatus() { 
  }

  /**
   * globalStatus
   *
   * @param globalStatus 
   * @return the current {@code POIStatus} instance, allowing for method chaining
   */
  public POIStatus globalStatus(GlobalStatus globalStatus) {
    this.globalStatus = globalStatus;
    return this;
  }

  /**
   * Get globalStatus
   * @return globalStatus 
   */
  @JsonProperty(JSON_PROPERTY_GLOBAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public GlobalStatus getGlobalStatus() {
    return globalStatus;
  }

  /**
   * globalStatus
   *
   * @param globalStatus 
   */
  @JsonProperty(JSON_PROPERTY_GLOBAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalStatus(GlobalStatus globalStatus) {
    this.globalStatus = globalStatus;
  }

  /**
   * Indicates if the security module of the POI is working and usable. If security module present.
   *
   * @param securityOKFlag Indicates if the security module of the POI is working and usable. If security module present.
   * @return the current {@code POIStatus} instance, allowing for method chaining
   */
  public POIStatus securityOKFlag(Boolean securityOKFlag) {
    this.securityOKFlag = securityOKFlag;
    return this;
  }

  /**
   * Indicates if the security module of the POI is working and usable. If security module present.
   * @return securityOKFlag Indicates if the security module of the POI is working and usable. If security module present.
   */
  @JsonProperty(JSON_PROPERTY_SECURITY_O_K_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSecurityOKFlag() {
    return securityOKFlag;
  }

  /**
   * Indicates if the security module of the POI is working and usable. If security module present.
   *
   * @param securityOKFlag Indicates if the security module of the POI is working and usable. If security module present.
   */
  @JsonProperty(JSON_PROPERTY_SECURITY_O_K_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityOKFlag(Boolean securityOKFlag) {
    this.securityOKFlag = securityOKFlag;
  }

  /**
   * Indicates if the PED is working and usable. If PED present.
   *
   * @param peDOKFlag Indicates if the PED is working and usable. If PED present.
   * @return the current {@code POIStatus} instance, allowing for method chaining
   */
  public POIStatus peDOKFlag(Boolean peDOKFlag) {
    this.peDOKFlag = peDOKFlag;
    return this;
  }

  /**
   * Indicates if the PED is working and usable. If PED present.
   * @return peDOKFlag Indicates if the PED is working and usable. If PED present.
   */
  @JsonProperty(JSON_PROPERTY_PE_D_O_K_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getPeDOKFlag() {
    return peDOKFlag;
  }

  /**
   * Indicates if the PED is working and usable. If PED present.
   *
   * @param peDOKFlag Indicates if the PED is working and usable. If PED present.
   */
  @JsonProperty(JSON_PROPERTY_PE_D_O_K_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeDOKFlag(Boolean peDOKFlag) {
    this.peDOKFlag = peDOKFlag;
  }

  /**
   * Indicates if the card readers are working and usable. If card reader device present.
   *
   * @param cardReaderOKFlag Indicates if the card readers are working and usable. If card reader device present.
   * @return the current {@code POIStatus} instance, allowing for method chaining
   */
  public POIStatus cardReaderOKFlag(Boolean cardReaderOKFlag) {
    this.cardReaderOKFlag = cardReaderOKFlag;
    return this;
  }

  /**
   * Indicates if the card readers are working and usable. If card reader device present.
   * @return cardReaderOKFlag Indicates if the card readers are working and usable. If card reader device present.
   */
  @JsonProperty(JSON_PROPERTY_CARD_READER_O_K_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCardReaderOKFlag() {
    return cardReaderOKFlag;
  }

  /**
   * Indicates if the card readers are working and usable. If card reader device present.
   *
   * @param cardReaderOKFlag Indicates if the card readers are working and usable. If card reader device present.
   */
  @JsonProperty(JSON_PROPERTY_CARD_READER_O_K_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardReaderOKFlag(Boolean cardReaderOKFlag) {
    this.cardReaderOKFlag = cardReaderOKFlag;
  }

  /**
   * printerStatus
   *
   * @param printerStatus 
   * @return the current {@code POIStatus} instance, allowing for method chaining
   */
  public POIStatus printerStatus(PrinterStatus printerStatus) {
    this.printerStatus = printerStatus;
    return this;
  }

  /**
   * Get printerStatus
   * @return printerStatus 
   */
  @JsonProperty(JSON_PROPERTY_PRINTER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PrinterStatus getPrinterStatus() {
    return printerStatus;
  }

  /**
   * printerStatus
   *
   * @param printerStatus 
   */
  @JsonProperty(JSON_PROPERTY_PRINTER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrinterStatus(PrinterStatus printerStatus) {
    this.printerStatus = printerStatus;
  }

  /**
   * Indicates if the communication infrastructure is working and usable. If communication infrastructure present.
   *
   * @param communicationOKFlag Indicates if the communication infrastructure is working and usable. If communication infrastructure present.
   * @return the current {@code POIStatus} instance, allowing for method chaining
   */
  public POIStatus communicationOKFlag(Boolean communicationOKFlag) {
    this.communicationOKFlag = communicationOKFlag;
    return this;
  }

  /**
   * Indicates if the communication infrastructure is working and usable. If communication infrastructure present.
   * @return communicationOKFlag Indicates if the communication infrastructure is working and usable. If communication infrastructure present.
   */
  @JsonProperty(JSON_PROPERTY_COMMUNICATION_O_K_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCommunicationOKFlag() {
    return communicationOKFlag;
  }

  /**
   * Indicates if the communication infrastructure is working and usable. If communication infrastructure present.
   *
   * @param communicationOKFlag Indicates if the communication infrastructure is working and usable. If communication infrastructure present.
   */
  @JsonProperty(JSON_PROPERTY_COMMUNICATION_O_K_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommunicationOKFlag(Boolean communicationOKFlag) {
    this.communicationOKFlag = communicationOKFlag;
  }

  /**
   * Indicates a suspicion of fraud by the POI System. Could be set to True by the POI system to notify to the Sale system and the Cashier that a suspicion of fraud had been detected on the POI as an unexpected reboot of the POI.
   *
   * @param fraudPreventionFlag Indicates a suspicion of fraud by the POI System. Could be set to True by the POI system to notify to the Sale system and the Cashier that a suspicion of fraud had been detected on the POI as an unexpected reboot of the POI.
   * @return the current {@code POIStatus} instance, allowing for method chaining
   */
  public POIStatus fraudPreventionFlag(Boolean fraudPreventionFlag) {
    this.fraudPreventionFlag = fraudPreventionFlag;
    return this;
  }

  /**
   * Indicates a suspicion of fraud by the POI System. Could be set to True by the POI system to notify to the Sale system and the Cashier that a suspicion of fraud had been detected on the POI as an unexpected reboot of the POI.
   * @return fraudPreventionFlag Indicates a suspicion of fraud by the POI System. Could be set to True by the POI system to notify to the Sale system and the Cashier that a suspicion of fraud had been detected on the POI as an unexpected reboot of the POI.
   */
  @JsonProperty(JSON_PROPERTY_FRAUD_PREVENTION_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getFraudPreventionFlag() {
    return fraudPreventionFlag;
  }

  /**
   * Indicates a suspicion of fraud by the POI System. Could be set to True by the POI system to notify to the Sale system and the Cashier that a suspicion of fraud had been detected on the POI as an unexpected reboot of the POI.
   *
   * @param fraudPreventionFlag Indicates a suspicion of fraud by the POI System. Could be set to True by the POI system to notify to the Sale system and the Cashier that a suspicion of fraud had been detected on the POI as an unexpected reboot of the POI.
   */
  @JsonProperty(JSON_PROPERTY_FRAUD_PREVENTION_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFraudPreventionFlag(Boolean fraudPreventionFlag) {
    this.fraudPreventionFlag = fraudPreventionFlag;
  }

  /**
   * Return true if this POIStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    POIStatus poIStatus = (POIStatus) o;
    return Objects.equals(this.globalStatus, poIStatus.globalStatus) &&
        Objects.equals(this.securityOKFlag, poIStatus.securityOKFlag) &&
        Objects.equals(this.peDOKFlag, poIStatus.peDOKFlag) &&
        Objects.equals(this.cardReaderOKFlag, poIStatus.cardReaderOKFlag) &&
        Objects.equals(this.printerStatus, poIStatus.printerStatus) &&
        Objects.equals(this.communicationOKFlag, poIStatus.communicationOKFlag) &&
        Objects.equals(this.fraudPreventionFlag, poIStatus.fraudPreventionFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(globalStatus, securityOKFlag, peDOKFlag, cardReaderOKFlag, printerStatus, communicationOKFlag, fraudPreventionFlag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class POIStatus {\n");
    sb.append("    globalStatus: ").append(toIndentedString(globalStatus)).append("\n");
    sb.append("    securityOKFlag: ").append(toIndentedString(securityOKFlag)).append("\n");
    sb.append("    peDOKFlag: ").append(toIndentedString(peDOKFlag)).append("\n");
    sb.append("    cardReaderOKFlag: ").append(toIndentedString(cardReaderOKFlag)).append("\n");
    sb.append("    printerStatus: ").append(toIndentedString(printerStatus)).append("\n");
    sb.append("    communicationOKFlag: ").append(toIndentedString(communicationOKFlag)).append("\n");
    sb.append("    fraudPreventionFlag: ").append(toIndentedString(fraudPreventionFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of POIStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of POIStatus
   * @throws JsonProcessingException if the JSON string is invalid with respect to POIStatus
   */
  public static POIStatus fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, POIStatus.class);
  }
/**
  * Convert an instance of POIStatus to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
