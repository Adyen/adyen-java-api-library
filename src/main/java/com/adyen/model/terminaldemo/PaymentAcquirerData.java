/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.TransactionIDType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Data related to the response from the payment Acquirer.
 */
@JsonPropertyOrder({
  PaymentAcquirerData.JSON_PROPERTY_ACQUIRER_I_D,
  PaymentAcquirerData.JSON_PROPERTY_MERCHANT_I_D,
  PaymentAcquirerData.JSON_PROPERTY_ACQUIRER_P_O_I_I_D,
  PaymentAcquirerData.JSON_PROPERTY_ACQUIRER_TRANSACTION_I_D,
  PaymentAcquirerData.JSON_PROPERTY_APPROVAL_CODE,
  PaymentAcquirerData.JSON_PROPERTY_HOST_RECONCILIATION_I_D
})

public class PaymentAcquirerData {
  public static final String JSON_PROPERTY_ACQUIRER_I_D = "AcquirerID";
  private Integer acquirerID;

  public static final String JSON_PROPERTY_MERCHANT_I_D = "MerchantID";
  private String merchantID;

  public static final String JSON_PROPERTY_ACQUIRER_P_O_I_I_D = "AcquirerPOIID";
  private String acquirerPOIID;

  public static final String JSON_PROPERTY_ACQUIRER_TRANSACTION_I_D = "AcquirerTransactionID";
  private TransactionIDType acquirerTransactionID;

  public static final String JSON_PROPERTY_APPROVAL_CODE = "ApprovalCode";
  private String approvalCode;

  public static final String JSON_PROPERTY_HOST_RECONCILIATION_I_D = "HostReconciliationID";
  private String hostReconciliationID;

  public PaymentAcquirerData() { 
  }

  /**
   * Identification of the Acquirer. Identification of the Acquirer when the POI System is multi-acquirer.
   *
   * @param acquirerID Identification of the Acquirer. Identification of the Acquirer when the POI System is multi-acquirer.
   * @return the current {@code PaymentAcquirerData} instance, allowing for method chaining
   */
  public PaymentAcquirerData acquirerID(Integer acquirerID) {
    this.acquirerID = acquirerID;
    return this;
  }

  /**
   * Identification of the Acquirer. Identification of the Acquirer when the POI System is multi-acquirer.
   * @return acquirerID Identification of the Acquirer. Identification of the Acquirer when the POI System is multi-acquirer.
   */
  @JsonProperty(JSON_PROPERTY_ACQUIRER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getAcquirerID() {
    return acquirerID;
  }

  /**
   * Identification of the Acquirer. Identification of the Acquirer when the POI System is multi-acquirer.
   *
   * @param acquirerID Identification of the Acquirer. Identification of the Acquirer when the POI System is multi-acquirer.
   */
  @JsonProperty(JSON_PROPERTY_ACQUIRER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerID(Integer acquirerID) {
    this.acquirerID = acquirerID;
  }

  /**
   * Identification of the Merchant for the Acquirer.
   *
   * @param merchantID Identification of the Merchant for the Acquirer.
   * @return the current {@code PaymentAcquirerData} instance, allowing for method chaining
   */
  public PaymentAcquirerData merchantID(String merchantID) {
    this.merchantID = merchantID;
    return this;
  }

  /**
   * Identification of the Merchant for the Acquirer.
   * @return merchantID Identification of the Merchant for the Acquirer.
   */
  @JsonProperty(JSON_PROPERTY_MERCHANT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMerchantID() {
    return merchantID;
  }

  /**
   * Identification of the Merchant for the Acquirer.
   *
   * @param merchantID Identification of the Merchant for the Acquirer.
   */
  @JsonProperty(JSON_PROPERTY_MERCHANT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantID(String merchantID) {
    this.merchantID = merchantID;
  }

  /**
   * Identification of the POI for the payment Acquirer.
   *
   * @param acquirerPOIID Identification of the POI for the payment Acquirer.
   * @return the current {@code PaymentAcquirerData} instance, allowing for method chaining
   */
  public PaymentAcquirerData acquirerPOIID(String acquirerPOIID) {
    this.acquirerPOIID = acquirerPOIID;
    return this;
  }

  /**
   * Identification of the POI for the payment Acquirer.
   * @return acquirerPOIID Identification of the POI for the payment Acquirer.
   */
  @JsonProperty(JSON_PROPERTY_ACQUIRER_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAcquirerPOIID() {
    return acquirerPOIID;
  }

  /**
   * Identification of the POI for the payment Acquirer.
   *
   * @param acquirerPOIID Identification of the POI for the payment Acquirer.
   */
  @JsonProperty(JSON_PROPERTY_ACQUIRER_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerPOIID(String acquirerPOIID) {
    this.acquirerPOIID = acquirerPOIID;
  }

  /**
   * acquirerTransactionID
   *
   * @param acquirerTransactionID 
   * @return the current {@code PaymentAcquirerData} instance, allowing for method chaining
   */
  public PaymentAcquirerData acquirerTransactionID(TransactionIDType acquirerTransactionID) {
    this.acquirerTransactionID = acquirerTransactionID;
    return this;
  }

  /**
   * Get acquirerTransactionID
   * @return acquirerTransactionID 
   */
  @JsonProperty(JSON_PROPERTY_ACQUIRER_TRANSACTION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TransactionIDType getAcquirerTransactionID() {
    return acquirerTransactionID;
  }

  /**
   * acquirerTransactionID
   *
   * @param acquirerTransactionID 
   */
  @JsonProperty(JSON_PROPERTY_ACQUIRER_TRANSACTION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerTransactionID(TransactionIDType acquirerTransactionID) {
    this.acquirerTransactionID = acquirerTransactionID;
  }

  /**
   * Code assigned to a transaction approval by the Acquirer. If available.
   *
   * @param approvalCode Code assigned to a transaction approval by the Acquirer. If available.
   * @return the current {@code PaymentAcquirerData} instance, allowing for method chaining
   */
  public PaymentAcquirerData approvalCode(String approvalCode) {
    this.approvalCode = approvalCode;
    return this;
  }

  /**
   * Code assigned to a transaction approval by the Acquirer. If available.
   * @return approvalCode Code assigned to a transaction approval by the Acquirer. If available.
   */
  @JsonProperty(JSON_PROPERTY_APPROVAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getApprovalCode() {
    return approvalCode;
  }

  /**
   * Code assigned to a transaction approval by the Acquirer. If available.
   *
   * @param approvalCode Code assigned to a transaction approval by the Acquirer. If available.
   */
  @JsonProperty(JSON_PROPERTY_APPROVAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApprovalCode(String approvalCode) {
    this.approvalCode = approvalCode;
  }

  /**
   * Identifier of a reconciliation period with a payment or loyalty host. Allows the assignment of a transaction to the Acquirer reconciliation (or batch).
   *
   * @param hostReconciliationID Identifier of a reconciliation period with a payment or loyalty host. Allows the assignment of a transaction to the Acquirer reconciliation (or batch).
   * @return the current {@code PaymentAcquirerData} instance, allowing for method chaining
   */
  public PaymentAcquirerData hostReconciliationID(String hostReconciliationID) {
    this.hostReconciliationID = hostReconciliationID;
    return this;
  }

  /**
   * Identifier of a reconciliation period with a payment or loyalty host. Allows the assignment of a transaction to the Acquirer reconciliation (or batch).
   * @return hostReconciliationID Identifier of a reconciliation period with a payment or loyalty host. Allows the assignment of a transaction to the Acquirer reconciliation (or batch).
   */
  @JsonProperty(JSON_PROPERTY_HOST_RECONCILIATION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHostReconciliationID() {
    return hostReconciliationID;
  }

  /**
   * Identifier of a reconciliation period with a payment or loyalty host. Allows the assignment of a transaction to the Acquirer reconciliation (or batch).
   *
   * @param hostReconciliationID Identifier of a reconciliation period with a payment or loyalty host. Allows the assignment of a transaction to the Acquirer reconciliation (or batch).
   */
  @JsonProperty(JSON_PROPERTY_HOST_RECONCILIATION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostReconciliationID(String hostReconciliationID) {
    this.hostReconciliationID = hostReconciliationID;
  }

  /**
   * Return true if this PaymentAcquirerData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentAcquirerData paymentAcquirerData = (PaymentAcquirerData) o;
    return Objects.equals(this.acquirerID, paymentAcquirerData.acquirerID) &&
        Objects.equals(this.merchantID, paymentAcquirerData.merchantID) &&
        Objects.equals(this.acquirerPOIID, paymentAcquirerData.acquirerPOIID) &&
        Objects.equals(this.acquirerTransactionID, paymentAcquirerData.acquirerTransactionID) &&
        Objects.equals(this.approvalCode, paymentAcquirerData.approvalCode) &&
        Objects.equals(this.hostReconciliationID, paymentAcquirerData.hostReconciliationID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acquirerID, merchantID, acquirerPOIID, acquirerTransactionID, approvalCode, hostReconciliationID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentAcquirerData {\n");
    sb.append("    acquirerID: ").append(toIndentedString(acquirerID)).append("\n");
    sb.append("    merchantID: ").append(toIndentedString(merchantID)).append("\n");
    sb.append("    acquirerPOIID: ").append(toIndentedString(acquirerPOIID)).append("\n");
    sb.append("    acquirerTransactionID: ").append(toIndentedString(acquirerTransactionID)).append("\n");
    sb.append("    approvalCode: ").append(toIndentedString(approvalCode)).append("\n");
    sb.append("    hostReconciliationID: ").append(toIndentedString(hostReconciliationID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PaymentAcquirerData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentAcquirerData
   * @throws JsonProcessingException if the JSON string is invalid with respect to PaymentAcquirerData
   */
  public static PaymentAcquirerData fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PaymentAcquirerData.class);
  }
/**
  * Convert an instance of PaymentAcquirerData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
