/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Reference of a predefined message to display or print. It conveys information related to the predefined message.
 */
@JsonPropertyOrder({
  PredefinedContent.JSON_PROPERTY_REFERENCE_I_D,
  PredefinedContent.JSON_PROPERTY_LANGUAGE
})

public class PredefinedContent {
  public static final String JSON_PROPERTY_REFERENCE_I_D = "ReferenceID";
  private String referenceID;

  public static final String JSON_PROPERTY_LANGUAGE = "Language";
  private String language;

  public PredefinedContent() { 
  }

  /**
   * Identification of a predefined message to display or print.
   *
   * @param referenceID Identification of a predefined message to display or print.
   * @return the current {@code PredefinedContent} instance, allowing for method chaining
   */
  public PredefinedContent referenceID(String referenceID) {
    this.referenceID = referenceID;
    return this;
  }

  /**
   * Identification of a predefined message to display or print.
   * @return referenceID Identification of a predefined message to display or print.
   */
  @JsonProperty(JSON_PROPERTY_REFERENCE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getReferenceID() {
    return referenceID;
  }

  /**
   * Identification of a predefined message to display or print.
   *
   * @param referenceID Identification of a predefined message to display or print.
   */
  @JsonProperty(JSON_PROPERTY_REFERENCE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceID(String referenceID) {
    this.referenceID = referenceID;
  }

  /**
   * Identification of a language.
   *
   * @param language Identification of a language.
   * @return the current {@code PredefinedContent} instance, allowing for method chaining
   */
  public PredefinedContent language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Identification of a language.
   * @return language Identification of a language.
   */
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLanguage() {
    return language;
  }

  /**
   * Identification of a language.
   *
   * @param language Identification of a language.
   */
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(String language) {
    this.language = language;
  }

  /**
   * Return true if this PredefinedContent object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PredefinedContent predefinedContent = (PredefinedContent) o;
    return Objects.equals(this.referenceID, predefinedContent.referenceID) &&
        Objects.equals(this.language, predefinedContent.language);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceID, language);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PredefinedContent {\n");
    sb.append("    referenceID: ").append(toIndentedString(referenceID)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PredefinedContent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PredefinedContent
   * @throws JsonProcessingException if the JSON string is invalid with respect to PredefinedContent
   */
  public static PredefinedContent fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PredefinedContent.class);
  }
/**
  * Convert an instance of PredefinedContent to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
