/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.LoyaltyAccountID;
import com.adyen.model.terminaldemo.TransactionIDType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * In the Payment, Loyalty or Balance Inquiry Request message, it allows the Sale Terminal to send the identification of the loyalty account or an awarded amount or an amount to redeem to the loyalty account. Data related to a Loyalty program or account.
 */
@JsonPropertyOrder({
  LoyaltyData.JSON_PROPERTY_CARD_ACQUISITION_REFERENCE,
  LoyaltyData.JSON_PROPERTY_LOYALTY_ACCOUNT_I_D
})

public class LoyaltyData {
  public static final String JSON_PROPERTY_CARD_ACQUISITION_REFERENCE = "CardAcquisitionReference";
  private TransactionIDType cardAcquisitionReference;

  public static final String JSON_PROPERTY_LOYALTY_ACCOUNT_I_D = "LoyaltyAccountID";
  private LoyaltyAccountID loyaltyAccountID;

  public LoyaltyData() { 
  }

  /**
   * cardAcquisitionReference
   *
   * @param cardAcquisitionReference 
   * @return the current {@code LoyaltyData} instance, allowing for method chaining
   */
  public LoyaltyData cardAcquisitionReference(TransactionIDType cardAcquisitionReference) {
    this.cardAcquisitionReference = cardAcquisitionReference;
    return this;
  }

  /**
   * Get cardAcquisitionReference
   * @return cardAcquisitionReference 
   */
  @JsonProperty(JSON_PROPERTY_CARD_ACQUISITION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TransactionIDType getCardAcquisitionReference() {
    return cardAcquisitionReference;
  }

  /**
   * cardAcquisitionReference
   *
   * @param cardAcquisitionReference 
   */
  @JsonProperty(JSON_PROPERTY_CARD_ACQUISITION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardAcquisitionReference(TransactionIDType cardAcquisitionReference) {
    this.cardAcquisitionReference = cardAcquisitionReference;
  }

  /**
   * loyaltyAccountID
   *
   * @param loyaltyAccountID 
   * @return the current {@code LoyaltyData} instance, allowing for method chaining
   */
  public LoyaltyData loyaltyAccountID(LoyaltyAccountID loyaltyAccountID) {
    this.loyaltyAccountID = loyaltyAccountID;
    return this;
  }

  /**
   * Get loyaltyAccountID
   * @return loyaltyAccountID 
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LoyaltyAccountID getLoyaltyAccountID() {
    return loyaltyAccountID;
  }

  /**
   * loyaltyAccountID
   *
   * @param loyaltyAccountID 
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyAccountID(LoyaltyAccountID loyaltyAccountID) {
    this.loyaltyAccountID = loyaltyAccountID;
  }

  /**
   * Return true if this LoyaltyData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyData loyaltyData = (LoyaltyData) o;
    return Objects.equals(this.cardAcquisitionReference, loyaltyData.cardAcquisitionReference) &&
        Objects.equals(this.loyaltyAccountID, loyaltyData.loyaltyAccountID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardAcquisitionReference, loyaltyAccountID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyData {\n");
    sb.append("    cardAcquisitionReference: ").append(toIndentedString(cardAcquisitionReference)).append("\n");
    sb.append("    loyaltyAccountID: ").append(toIndentedString(loyaltyAccountID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of LoyaltyData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyData
   * @throws JsonProcessingException if the JSON string is invalid with respect to LoyaltyData
   */
  public static LoyaltyData fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, LoyaltyData.class);
  }
/**
  * Convert an instance of LoyaltyData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
