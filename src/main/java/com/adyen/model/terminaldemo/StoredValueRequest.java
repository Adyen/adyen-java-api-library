/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.SaleData;
import com.adyen.model.terminaldemo.StoredValueData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It conveys Information related to the Stored Value transaction to process. Content of the Stored Value Request message.
 */
@JsonPropertyOrder({
  StoredValueRequest.JSON_PROPERTY_SALE_DATA,
  StoredValueRequest.JSON_PROPERTY_STORED_VALUE_DATA
})

public class StoredValueRequest {
  public static final String JSON_PROPERTY_SALE_DATA = "SaleData";
  private SaleData saleData;

  public static final String JSON_PROPERTY_STORED_VALUE_DATA = "StoredValueData";
  private List<StoredValueData> storedValueData;

  public StoredValueRequest() { 
  }

  /**
   * saleData
   *
   * @param saleData 
   * @return the current {@code StoredValueRequest} instance, allowing for method chaining
   */
  public StoredValueRequest saleData(SaleData saleData) {
    this.saleData = saleData;
    return this;
  }

  /**
   * Get saleData
   * @return saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SaleData getSaleData() {
    return saleData;
  }

  /**
   * saleData
   *
   * @param saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleData(SaleData saleData) {
    this.saleData = saleData;
  }

  /**
   * Data related to the stored value card.
   *
   * @param storedValueData Data related to the stored value card.
   * @return the current {@code StoredValueRequest} instance, allowing for method chaining
   */
  public StoredValueRequest storedValueData(List<StoredValueData> storedValueData) {
    this.storedValueData = storedValueData;
    return this;
  }

  public StoredValueRequest addStoredValueDataItem(StoredValueData storedValueDataItem) {
    if (this.storedValueData == null) {
      this.storedValueData = new ArrayList<>();
    }
    this.storedValueData.add(storedValueDataItem);
    return this;
  }

  /**
   * Data related to the stored value card.
   * @return storedValueData Data related to the stored value card.
   */
  @JsonProperty(JSON_PROPERTY_STORED_VALUE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<StoredValueData> getStoredValueData() {
    return storedValueData;
  }

  /**
   * Data related to the stored value card.
   *
   * @param storedValueData Data related to the stored value card.
   */
  @JsonProperty(JSON_PROPERTY_STORED_VALUE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoredValueData(List<StoredValueData> storedValueData) {
    this.storedValueData = storedValueData;
  }

  /**
   * Return true if this StoredValueRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoredValueRequest storedValueRequest = (StoredValueRequest) o;
    return Objects.equals(this.saleData, storedValueRequest.saleData) &&
        Objects.equals(this.storedValueData, storedValueRequest.storedValueData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(saleData, storedValueData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoredValueRequest {\n");
    sb.append("    saleData: ").append(toIndentedString(saleData)).append("\n");
    sb.append("    storedValueData: ").append(toIndentedString(storedValueData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of StoredValueRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StoredValueRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to StoredValueRequest
   */
  public static StoredValueRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, StoredValueRequest.class);
  }
/**
  * Convert an instance of StoredValueRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
