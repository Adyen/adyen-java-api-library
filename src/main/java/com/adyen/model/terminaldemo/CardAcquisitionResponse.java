/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.LoyaltyAccount;
import com.adyen.model.terminaldemo.POIData;
import com.adyen.model.terminaldemo.PaymentInstrumentData;
import com.adyen.model.terminaldemo.Response;
import com.adyen.model.terminaldemo.SaleData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It conveys Information related to the payment and loyalty cards read and processed by the POI System and entered by the Customer. Content of the Card Acquisition Response message.
 */
@JsonPropertyOrder({
  CardAcquisitionResponse.JSON_PROPERTY_RESPONSE,
  CardAcquisitionResponse.JSON_PROPERTY_SALE_DATA,
  CardAcquisitionResponse.JSON_PROPERTY_PO_I_DATA,
  CardAcquisitionResponse.JSON_PROPERTY_PAYMENT_BRAND,
  CardAcquisitionResponse.JSON_PROPERTY_PAYMENT_INSTRUMENT_DATA,
  CardAcquisitionResponse.JSON_PROPERTY_LOYALTY_ACCOUNT
})

public class CardAcquisitionResponse {
  public static final String JSON_PROPERTY_RESPONSE = "Response";
  private Response response;

  public static final String JSON_PROPERTY_SALE_DATA = "SaleData";
  private SaleData saleData;

  public static final String JSON_PROPERTY_PO_I_DATA = "POIData";
  private POIData poIData;

  public static final String JSON_PROPERTY_PAYMENT_BRAND = "PaymentBrand";
  private List<String> paymentBrand;

  public static final String JSON_PROPERTY_PAYMENT_INSTRUMENT_DATA = "PaymentInstrumentData";
  private PaymentInstrumentData paymentInstrumentData;

  public static final String JSON_PROPERTY_LOYALTY_ACCOUNT = "LoyaltyAccount";
  private List<LoyaltyAccount> loyaltyAccount;

  public CardAcquisitionResponse() { 
  }

  /**
   * response
   *
   * @param response 
   * @return the current {@code CardAcquisitionResponse} instance, allowing for method chaining
   */
  public CardAcquisitionResponse response(Response response) {
    this.response = response;
    return this;
  }

  /**
   * Get response
   * @return response 
   */
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Response getResponse() {
    return response;
  }

  /**
   * response
   *
   * @param response 
   */
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponse(Response response) {
    this.response = response;
  }

  /**
   * saleData
   *
   * @param saleData 
   * @return the current {@code CardAcquisitionResponse} instance, allowing for method chaining
   */
  public CardAcquisitionResponse saleData(SaleData saleData) {
    this.saleData = saleData;
    return this;
  }

  /**
   * Get saleData
   * @return saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SaleData getSaleData() {
    return saleData;
  }

  /**
   * saleData
   *
   * @param saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleData(SaleData saleData) {
    this.saleData = saleData;
  }

  /**
   * poIData
   *
   * @param poIData 
   * @return the current {@code CardAcquisitionResponse} instance, allowing for method chaining
   */
  public CardAcquisitionResponse poIData(POIData poIData) {
    this.poIData = poIData;
    return this;
  }

  /**
   * Get poIData
   * @return poIData 
   */
  @JsonProperty(JSON_PROPERTY_PO_I_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public POIData getPoIData() {
    return poIData;
  }

  /**
   * poIData
   *
   * @param poIData 
   */
  @JsonProperty(JSON_PROPERTY_PO_I_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPoIData(POIData poIData) {
    this.poIData = poIData;
  }

  /**
   * Type of payment card. Brands available for payment by the card and not chosen by the Customer.
   *
   * @param paymentBrand Type of payment card. Brands available for payment by the card and not chosen by the Customer.
   * @return the current {@code CardAcquisitionResponse} instance, allowing for method chaining
   */
  public CardAcquisitionResponse paymentBrand(List<String> paymentBrand) {
    this.paymentBrand = paymentBrand;
    return this;
  }

  public CardAcquisitionResponse addPaymentBrandItem(String paymentBrandItem) {
    if (this.paymentBrand == null) {
      this.paymentBrand = new ArrayList<>();
    }
    this.paymentBrand.add(paymentBrandItem);
    return this;
  }

  /**
   * Type of payment card. Brands available for payment by the card and not chosen by the Customer.
   * @return paymentBrand Type of payment card. Brands available for payment by the card and not chosen by the Customer.
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getPaymentBrand() {
    return paymentBrand;
  }

  /**
   * Type of payment card. Brands available for payment by the card and not chosen by the Customer.
   *
   * @param paymentBrand Type of payment card. Brands available for payment by the card and not chosen by the Customer.
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentBrand(List<String> paymentBrand) {
    this.paymentBrand = paymentBrand;
  }

  /**
   * paymentInstrumentData
   *
   * @param paymentInstrumentData 
   * @return the current {@code CardAcquisitionResponse} instance, allowing for method chaining
   */
  public CardAcquisitionResponse paymentInstrumentData(PaymentInstrumentData paymentInstrumentData) {
    this.paymentInstrumentData = paymentInstrumentData;
    return this;
  }

  /**
   * Get paymentInstrumentData
   * @return paymentInstrumentData 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentInstrumentData getPaymentInstrumentData() {
    return paymentInstrumentData;
  }

  /**
   * paymentInstrumentData
   *
   * @param paymentInstrumentData 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentInstrumentData(PaymentInstrumentData paymentInstrumentData) {
    this.paymentInstrumentData = paymentInstrumentData;
  }

  /**
   * Data related to the loyalty System.
   *
   * @param loyaltyAccount Data related to the loyalty System.
   * @return the current {@code CardAcquisitionResponse} instance, allowing for method chaining
   */
  public CardAcquisitionResponse loyaltyAccount(List<LoyaltyAccount> loyaltyAccount) {
    this.loyaltyAccount = loyaltyAccount;
    return this;
  }

  public CardAcquisitionResponse addLoyaltyAccountItem(LoyaltyAccount loyaltyAccountItem) {
    if (this.loyaltyAccount == null) {
      this.loyaltyAccount = new ArrayList<>();
    }
    this.loyaltyAccount.add(loyaltyAccountItem);
    return this;
  }

  /**
   * Data related to the loyalty System.
   * @return loyaltyAccount Data related to the loyalty System.
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<LoyaltyAccount> getLoyaltyAccount() {
    return loyaltyAccount;
  }

  /**
   * Data related to the loyalty System.
   *
   * @param loyaltyAccount Data related to the loyalty System.
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyAccount(List<LoyaltyAccount> loyaltyAccount) {
    this.loyaltyAccount = loyaltyAccount;
  }

  /**
   * Return true if this CardAcquisitionResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardAcquisitionResponse cardAcquisitionResponse = (CardAcquisitionResponse) o;
    return Objects.equals(this.response, cardAcquisitionResponse.response) &&
        Objects.equals(this.saleData, cardAcquisitionResponse.saleData) &&
        Objects.equals(this.poIData, cardAcquisitionResponse.poIData) &&
        Objects.equals(this.paymentBrand, cardAcquisitionResponse.paymentBrand) &&
        Objects.equals(this.paymentInstrumentData, cardAcquisitionResponse.paymentInstrumentData) &&
        Objects.equals(this.loyaltyAccount, cardAcquisitionResponse.loyaltyAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(response, saleData, poIData, paymentBrand, paymentInstrumentData, loyaltyAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardAcquisitionResponse {\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    saleData: ").append(toIndentedString(saleData)).append("\n");
    sb.append("    poIData: ").append(toIndentedString(poIData)).append("\n");
    sb.append("    paymentBrand: ").append(toIndentedString(paymentBrand)).append("\n");
    sb.append("    paymentInstrumentData: ").append(toIndentedString(paymentInstrumentData)).append("\n");
    sb.append("    loyaltyAccount: ").append(toIndentedString(loyaltyAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of CardAcquisitionResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CardAcquisitionResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to CardAcquisitionResponse
   */
  public static CardAcquisitionResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, CardAcquisitionResponse.class);
  }
/**
  * Convert an instance of CardAcquisitionResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
