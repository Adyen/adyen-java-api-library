/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.PaymentInstrumentType;
import com.adyen.model.terminaldemo.PaymentTotals;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * If Result is Success, contains all the totals, classified as required by the Sale in the message request. At least, transaction totals are provided per Acquirer, Acquirer Settlement, and Card Brand. Result of the Sale to POI Reconciliation processing.
 */
@JsonPropertyOrder({
  TransactionTotals.JSON_PROPERTY_PAYMENT_INSTRUMENT_TYPE,
  TransactionTotals.JSON_PROPERTY_ACQUIRER_I_D,
  TransactionTotals.JSON_PROPERTY_HOST_RECONCILIATION_I_D,
  TransactionTotals.JSON_PROPERTY_CARD_BRAND,
  TransactionTotals.JSON_PROPERTY_P_O_I_I_D,
  TransactionTotals.JSON_PROPERTY_SALE_I_D,
  TransactionTotals.JSON_PROPERTY_OPERATOR_I_D,
  TransactionTotals.JSON_PROPERTY_SHIFT_NUMBER,
  TransactionTotals.JSON_PROPERTY_TOTALS_GROUP_I_D,
  TransactionTotals.JSON_PROPERTY_PAYMENT_CURRENCY,
  TransactionTotals.JSON_PROPERTY_PAYMENT_TOTALS
})

public class TransactionTotals {
  public static final String JSON_PROPERTY_PAYMENT_INSTRUMENT_TYPE = "PaymentInstrumentType";
  private PaymentInstrumentType paymentInstrumentType;

  public static final String JSON_PROPERTY_ACQUIRER_I_D = "AcquirerID";
  private Integer acquirerID;

  public static final String JSON_PROPERTY_HOST_RECONCILIATION_I_D = "HostReconciliationID";
  private String hostReconciliationID;

  public static final String JSON_PROPERTY_CARD_BRAND = "CardBrand";
  private String cardBrand;

  public static final String JSON_PROPERTY_P_O_I_I_D = "POIID";
  private String POIID;

  public static final String JSON_PROPERTY_SALE_I_D = "SaleID";
  private String saleID;

  public static final String JSON_PROPERTY_OPERATOR_I_D = "OperatorID";
  private String operatorID;

  public static final String JSON_PROPERTY_SHIFT_NUMBER = "ShiftNumber";
  private String shiftNumber;

  public static final String JSON_PROPERTY_TOTALS_GROUP_I_D = "TotalsGroupID";
  private String totalsGroupID;

  public static final String JSON_PROPERTY_PAYMENT_CURRENCY = "PaymentCurrency";
  private String paymentCurrency;

  public static final String JSON_PROPERTY_PAYMENT_TOTALS = "PaymentTotals";
  private List<PaymentTotals> paymentTotals;

  public TransactionTotals() { 
  }

  /**
   * paymentInstrumentType
   *
   * @param paymentInstrumentType 
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals paymentInstrumentType(PaymentInstrumentType paymentInstrumentType) {
    this.paymentInstrumentType = paymentInstrumentType;
    return this;
  }

  /**
   * Get paymentInstrumentType
   * @return paymentInstrumentType 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentInstrumentType getPaymentInstrumentType() {
    return paymentInstrumentType;
  }

  /**
   * paymentInstrumentType
   *
   * @param paymentInstrumentType 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentInstrumentType(PaymentInstrumentType paymentInstrumentType) {
    this.paymentInstrumentType = paymentInstrumentType;
  }

  /**
   * Identification of the Acquirer.
   *
   * @param acquirerID Identification of the Acquirer.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals acquirerID(Integer acquirerID) {
    this.acquirerID = acquirerID;
    return this;
  }

  /**
   * Identification of the Acquirer.
   * @return acquirerID Identification of the Acquirer.
   */
  @JsonProperty(JSON_PROPERTY_ACQUIRER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getAcquirerID() {
    return acquirerID;
  }

  /**
   * Identification of the Acquirer.
   *
   * @param acquirerID Identification of the Acquirer.
   */
  @JsonProperty(JSON_PROPERTY_ACQUIRER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerID(Integer acquirerID) {
    this.acquirerID = acquirerID;
  }

  /**
   * Identifier of a reconciliation period with a payment or loyalty host.
   *
   * @param hostReconciliationID Identifier of a reconciliation period with a payment or loyalty host.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals hostReconciliationID(String hostReconciliationID) {
    this.hostReconciliationID = hostReconciliationID;
    return this;
  }

  /**
   * Identifier of a reconciliation period with a payment or loyalty host.
   * @return hostReconciliationID Identifier of a reconciliation period with a payment or loyalty host.
   */
  @JsonProperty(JSON_PROPERTY_HOST_RECONCILIATION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHostReconciliationID() {
    return hostReconciliationID;
  }

  /**
   * Identifier of a reconciliation period with a payment or loyalty host.
   *
   * @param hostReconciliationID Identifier of a reconciliation period with a payment or loyalty host.
   */
  @JsonProperty(JSON_PROPERTY_HOST_RECONCILIATION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostReconciliationID(String hostReconciliationID) {
    this.hostReconciliationID = hostReconciliationID;
  }

  /**
   * Type of payment or loyalty card. If configured to present totals per card brand, and Response.Result is Success.
   *
   * @param cardBrand Type of payment or loyalty card. If configured to present totals per card brand, and Response.Result is Success.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals cardBrand(String cardBrand) {
    this.cardBrand = cardBrand;
    return this;
  }

  /**
   * Type of payment or loyalty card. If configured to present totals per card brand, and Response.Result is Success.
   * @return cardBrand Type of payment or loyalty card. If configured to present totals per card brand, and Response.Result is Success.
   */
  @JsonProperty(JSON_PROPERTY_CARD_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCardBrand() {
    return cardBrand;
  }

  /**
   * Type of payment or loyalty card. If configured to present totals per card brand, and Response.Result is Success.
   *
   * @param cardBrand Type of payment or loyalty card. If configured to present totals per card brand, and Response.Result is Success.
   */
  @JsonProperty(JSON_PROPERTY_CARD_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardBrand(String cardBrand) {
    this.cardBrand = cardBrand;
  }

  /**
   * Identification of a POI System or a POI Terminal for the Sale to POI protocol. Sent if requested in the message request.
   *
   * @param POIID Identification of a POI System or a POI Terminal for the Sale to POI protocol. Sent if requested in the message request.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals POIID(String POIID) {
    this.POIID = POIID;
    return this;
  }

  /**
   * Identification of a POI System or a POI Terminal for the Sale to POI protocol. Sent if requested in the message request.
   * @return POIID Identification of a POI System or a POI Terminal for the Sale to POI protocol. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPOIID() {
    return POIID;
  }

  /**
   * Identification of a POI System or a POI Terminal for the Sale to POI protocol. Sent if requested in the message request.
   *
   * @param POIID Identification of a POI System or a POI Terminal for the Sale to POI protocol. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPOIID(String POIID) {
    this.POIID = POIID;
  }

  /**
   * Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. Sent if requested in the message request.
   *
   * @param saleID Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. Sent if requested in the message request.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals saleID(String saleID) {
    this.saleID = saleID;
    return this;
  }

  /**
   * Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. Sent if requested in the message request.
   * @return saleID Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_SALE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSaleID() {
    return saleID;
  }

  /**
   * Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. Sent if requested in the message request.
   *
   * @param saleID Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_SALE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleID(String saleID) {
    this.saleID = saleID;
  }

  /**
   * Identification of the Cashier or Operator. Sent if requested in the message request.
   *
   * @param operatorID Identification of the Cashier or Operator. Sent if requested in the message request.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals operatorID(String operatorID) {
    this.operatorID = operatorID;
    return this;
  }

  /**
   * Identification of the Cashier or Operator. Sent if requested in the message request.
   * @return operatorID Identification of the Cashier or Operator. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_OPERATOR_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOperatorID() {
    return operatorID;
  }

  /**
   * Identification of the Cashier or Operator. Sent if requested in the message request.
   *
   * @param operatorID Identification of the Cashier or Operator. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_OPERATOR_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperatorID(String operatorID) {
    this.operatorID = operatorID;
  }

  /**
   * Shift number. Sent if requested in the message request.
   *
   * @param shiftNumber Shift number. Sent if requested in the message request.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals shiftNumber(String shiftNumber) {
    this.shiftNumber = shiftNumber;
    return this;
  }

  /**
   * Shift number. Sent if requested in the message request.
   * @return shiftNumber Shift number. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_SHIFT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getShiftNumber() {
    return shiftNumber;
  }

  /**
   * Shift number. Sent if requested in the message request.
   *
   * @param shiftNumber Shift number. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_SHIFT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShiftNumber(String shiftNumber) {
    this.shiftNumber = shiftNumber;
  }

  /**
   * Identification of a group of transaction on a POI Terminal, having the same Sale features. Sent if requested in the message request.
   *
   * @param totalsGroupID Identification of a group of transaction on a POI Terminal, having the same Sale features. Sent if requested in the message request.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals totalsGroupID(String totalsGroupID) {
    this.totalsGroupID = totalsGroupID;
    return this;
  }

  /**
   * Identification of a group of transaction on a POI Terminal, having the same Sale features. Sent if requested in the message request.
   * @return totalsGroupID Identification of a group of transaction on a POI Terminal, having the same Sale features. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_TOTALS_GROUP_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTotalsGroupID() {
    return totalsGroupID;
  }

  /**
   * Identification of a group of transaction on a POI Terminal, having the same Sale features. Sent if requested in the message request.
   *
   * @param totalsGroupID Identification of a group of transaction on a POI Terminal, having the same Sale features. Sent if requested in the message request.
   */
  @JsonProperty(JSON_PROPERTY_TOTALS_GROUP_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalsGroupID(String totalsGroupID) {
    this.totalsGroupID = totalsGroupID;
  }

  /**
   * Currency of a monetary amount.
   *
   * @param paymentCurrency Currency of a monetary amount.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals paymentCurrency(String paymentCurrency) {
    this.paymentCurrency = paymentCurrency;
    return this;
  }

  /**
   * Currency of a monetary amount.
   * @return paymentCurrency Currency of a monetary amount.
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentCurrency() {
    return paymentCurrency;
  }

  /**
   * Currency of a monetary amount.
   *
   * @param paymentCurrency Currency of a monetary amount.
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentCurrency(String paymentCurrency) {
    this.paymentCurrency = paymentCurrency;
  }

  /**
   * Totals of the payment transaction during the reconciliation period. If both &#x60;TransactionCount&#x60; and &#x60;TransactionAmount&#x60; are not equal to zero.
   *
   * @param paymentTotals Totals of the payment transaction during the reconciliation period. If both &#x60;TransactionCount&#x60; and &#x60;TransactionAmount&#x60; are not equal to zero.
   * @return the current {@code TransactionTotals} instance, allowing for method chaining
   */
  public TransactionTotals paymentTotals(List<PaymentTotals> paymentTotals) {
    this.paymentTotals = paymentTotals;
    return this;
  }

  public TransactionTotals addPaymentTotalsItem(PaymentTotals paymentTotalsItem) {
    if (this.paymentTotals == null) {
      this.paymentTotals = new ArrayList<>();
    }
    this.paymentTotals.add(paymentTotalsItem);
    return this;
  }

  /**
   * Totals of the payment transaction during the reconciliation period. If both &#x60;TransactionCount&#x60; and &#x60;TransactionAmount&#x60; are not equal to zero.
   * @return paymentTotals Totals of the payment transaction during the reconciliation period. If both &#x60;TransactionCount&#x60; and &#x60;TransactionAmount&#x60; are not equal to zero.
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<PaymentTotals> getPaymentTotals() {
    return paymentTotals;
  }

  /**
   * Totals of the payment transaction during the reconciliation period. If both &#x60;TransactionCount&#x60; and &#x60;TransactionAmount&#x60; are not equal to zero.
   *
   * @param paymentTotals Totals of the payment transaction during the reconciliation period. If both &#x60;TransactionCount&#x60; and &#x60;TransactionAmount&#x60; are not equal to zero.
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_TOTALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentTotals(List<PaymentTotals> paymentTotals) {
    this.paymentTotals = paymentTotals;
  }

  /**
   * Return true if this TransactionTotals object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionTotals transactionTotals = (TransactionTotals) o;
    return Objects.equals(this.paymentInstrumentType, transactionTotals.paymentInstrumentType) &&
        Objects.equals(this.acquirerID, transactionTotals.acquirerID) &&
        Objects.equals(this.hostReconciliationID, transactionTotals.hostReconciliationID) &&
        Objects.equals(this.cardBrand, transactionTotals.cardBrand) &&
        Objects.equals(this.POIID, transactionTotals.POIID) &&
        Objects.equals(this.saleID, transactionTotals.saleID) &&
        Objects.equals(this.operatorID, transactionTotals.operatorID) &&
        Objects.equals(this.shiftNumber, transactionTotals.shiftNumber) &&
        Objects.equals(this.totalsGroupID, transactionTotals.totalsGroupID) &&
        Objects.equals(this.paymentCurrency, transactionTotals.paymentCurrency) &&
        Objects.equals(this.paymentTotals, transactionTotals.paymentTotals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentInstrumentType, acquirerID, hostReconciliationID, cardBrand, POIID, saleID, operatorID, shiftNumber, totalsGroupID, paymentCurrency, paymentTotals);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionTotals {\n");
    sb.append("    paymentInstrumentType: ").append(toIndentedString(paymentInstrumentType)).append("\n");
    sb.append("    acquirerID: ").append(toIndentedString(acquirerID)).append("\n");
    sb.append("    hostReconciliationID: ").append(toIndentedString(hostReconciliationID)).append("\n");
    sb.append("    cardBrand: ").append(toIndentedString(cardBrand)).append("\n");
    sb.append("    POIID: ").append(toIndentedString(POIID)).append("\n");
    sb.append("    saleID: ").append(toIndentedString(saleID)).append("\n");
    sb.append("    operatorID: ").append(toIndentedString(operatorID)).append("\n");
    sb.append("    shiftNumber: ").append(toIndentedString(shiftNumber)).append("\n");
    sb.append("    totalsGroupID: ").append(toIndentedString(totalsGroupID)).append("\n");
    sb.append("    paymentCurrency: ").append(toIndentedString(paymentCurrency)).append("\n");
    sb.append("    paymentTotals: ").append(toIndentedString(paymentTotals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of TransactionTotals given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TransactionTotals
   * @throws JsonProcessingException if the JSON string is invalid with respect to TransactionTotals
   */
  public static TransactionTotals fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, TransactionTotals.class);
  }
/**
  * Convert an instance of TransactionTotals to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
