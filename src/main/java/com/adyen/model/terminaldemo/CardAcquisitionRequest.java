/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.CardAcquisitionTransaction;
import com.adyen.model.terminaldemo.SaleData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It conveys Information related to the payment and loyalty cards to read and analyse. This message pair is usually followed by a message pair (e.g. payment or loyalty) which refers to this Card Acquisition message pair. Content of the Card Acquisition Request message.
 */
@JsonPropertyOrder({
  CardAcquisitionRequest.JSON_PROPERTY_SALE_DATA,
  CardAcquisitionRequest.JSON_PROPERTY_CARD_ACQUISITION_TRANSACTION
})

public class CardAcquisitionRequest {
  public static final String JSON_PROPERTY_SALE_DATA = "SaleData";
  private SaleData saleData;

  public static final String JSON_PROPERTY_CARD_ACQUISITION_TRANSACTION = "CardAcquisitionTransaction";
  private CardAcquisitionTransaction cardAcquisitionTransaction;

  public CardAcquisitionRequest() { 
  }

  /**
   * saleData
   *
   * @param saleData 
   * @return the current {@code CardAcquisitionRequest} instance, allowing for method chaining
   */
  public CardAcquisitionRequest saleData(SaleData saleData) {
    this.saleData = saleData;
    return this;
  }

  /**
   * Get saleData
   * @return saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SaleData getSaleData() {
    return saleData;
  }

  /**
   * saleData
   *
   * @param saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleData(SaleData saleData) {
    this.saleData = saleData;
  }

  /**
   * cardAcquisitionTransaction
   *
   * @param cardAcquisitionTransaction 
   * @return the current {@code CardAcquisitionRequest} instance, allowing for method chaining
   */
  public CardAcquisitionRequest cardAcquisitionTransaction(CardAcquisitionTransaction cardAcquisitionTransaction) {
    this.cardAcquisitionTransaction = cardAcquisitionTransaction;
    return this;
  }

  /**
   * Get cardAcquisitionTransaction
   * @return cardAcquisitionTransaction 
   */
  @JsonProperty(JSON_PROPERTY_CARD_ACQUISITION_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CardAcquisitionTransaction getCardAcquisitionTransaction() {
    return cardAcquisitionTransaction;
  }

  /**
   * cardAcquisitionTransaction
   *
   * @param cardAcquisitionTransaction 
   */
  @JsonProperty(JSON_PROPERTY_CARD_ACQUISITION_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardAcquisitionTransaction(CardAcquisitionTransaction cardAcquisitionTransaction) {
    this.cardAcquisitionTransaction = cardAcquisitionTransaction;
  }

  /**
   * Return true if this CardAcquisitionRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardAcquisitionRequest cardAcquisitionRequest = (CardAcquisitionRequest) o;
    return Objects.equals(this.saleData, cardAcquisitionRequest.saleData) &&
        Objects.equals(this.cardAcquisitionTransaction, cardAcquisitionRequest.cardAcquisitionTransaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(saleData, cardAcquisitionTransaction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardAcquisitionRequest {\n");
    sb.append("    saleData: ").append(toIndentedString(saleData)).append("\n");
    sb.append("    cardAcquisitionTransaction: ").append(toIndentedString(cardAcquisitionTransaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of CardAcquisitionRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CardAcquisitionRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to CardAcquisitionRequest
   */
  public static CardAcquisitionRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, CardAcquisitionRequest.class);
  }
/**
  * Convert an instance of CardAcquisitionRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
