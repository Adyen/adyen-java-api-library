/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.LoyaltyAccountID;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * This data structure conveys the identification of the account and the associated loyalty brand. Data related to a loyalty account processed in the transaction.
 */
@JsonPropertyOrder({
  LoyaltyAccount.JSON_PROPERTY_LOYALTY_ACCOUNT_I_D,
  LoyaltyAccount.JSON_PROPERTY_LOYALTY_BRAND
})

public class LoyaltyAccount {
  public static final String JSON_PROPERTY_LOYALTY_ACCOUNT_I_D = "LoyaltyAccountID";
  private LoyaltyAccountID loyaltyAccountID;

  public static final String JSON_PROPERTY_LOYALTY_BRAND = "LoyaltyBrand";
  private String loyaltyBrand;

  public LoyaltyAccount() { 
  }

  /**
   * loyaltyAccountID
   *
   * @param loyaltyAccountID 
   * @return the current {@code LoyaltyAccount} instance, allowing for method chaining
   */
  public LoyaltyAccount loyaltyAccountID(LoyaltyAccountID loyaltyAccountID) {
    this.loyaltyAccountID = loyaltyAccountID;
    return this;
  }

  /**
   * Get loyaltyAccountID
   * @return loyaltyAccountID 
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LoyaltyAccountID getLoyaltyAccountID() {
    return loyaltyAccountID;
  }

  /**
   * loyaltyAccountID
   *
   * @param loyaltyAccountID 
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_ACCOUNT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyAccountID(LoyaltyAccountID loyaltyAccountID) {
    this.loyaltyAccountID = loyaltyAccountID;
  }

  /**
   * Identification of a Loyalty brand. If a card is analysed.
   *
   * @param loyaltyBrand Identification of a Loyalty brand. If a card is analysed.
   * @return the current {@code LoyaltyAccount} instance, allowing for method chaining
   */
  public LoyaltyAccount loyaltyBrand(String loyaltyBrand) {
    this.loyaltyBrand = loyaltyBrand;
    return this;
  }

  /**
   * Identification of a Loyalty brand. If a card is analysed.
   * @return loyaltyBrand Identification of a Loyalty brand. If a card is analysed.
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLoyaltyBrand() {
    return loyaltyBrand;
  }

  /**
   * Identification of a Loyalty brand. If a card is analysed.
   *
   * @param loyaltyBrand Identification of a Loyalty brand. If a card is analysed.
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyBrand(String loyaltyBrand) {
    this.loyaltyBrand = loyaltyBrand;
  }

  /**
   * Return true if this LoyaltyAccount object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyAccount loyaltyAccount = (LoyaltyAccount) o;
    return Objects.equals(this.loyaltyAccountID, loyaltyAccount.loyaltyAccountID) &&
        Objects.equals(this.loyaltyBrand, loyaltyAccount.loyaltyBrand);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loyaltyAccountID, loyaltyBrand);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyAccount {\n");
    sb.append("    loyaltyAccountID: ").append(toIndentedString(loyaltyAccountID)).append("\n");
    sb.append("    loyaltyBrand: ").append(toIndentedString(loyaltyBrand)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of LoyaltyAccount given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyAccount
   * @throws JsonProcessingException if the JSON string is invalid with respect to LoyaltyAccount
   */
  public static LoyaltyAccount fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, LoyaltyAccount.class);
  }
/**
  * Convert an instance of LoyaltyAccount to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
