/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.LoyaltyResult;
import com.adyen.model.terminaldemo.POIData;
import com.adyen.model.terminaldemo.PaymentReceipt;
import com.adyen.model.terminaldemo.PaymentResult;
import com.adyen.model.terminaldemo.Response;
import com.adyen.model.terminaldemo.SaleData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * It conveys Information related to the Payment transaction processed by the POI System. Content of the Payment Response message.
 */
@JsonPropertyOrder({
  PaymentResponse.JSON_PROPERTY_RESPONSE,
  PaymentResponse.JSON_PROPERTY_SALE_DATA,
  PaymentResponse.JSON_PROPERTY_PO_I_DATA,
  PaymentResponse.JSON_PROPERTY_PAYMENT_RESULT,
  PaymentResponse.JSON_PROPERTY_LOYALTY_RESULT,
  PaymentResponse.JSON_PROPERTY_PAYMENT_RECEIPT
})

public class PaymentResponse {
  public static final String JSON_PROPERTY_RESPONSE = "Response";
  private Response response;

  public static final String JSON_PROPERTY_SALE_DATA = "SaleData";
  private SaleData saleData;

  public static final String JSON_PROPERTY_PO_I_DATA = "POIData";
  private POIData poIData;

  public static final String JSON_PROPERTY_PAYMENT_RESULT = "PaymentResult";
  private PaymentResult paymentResult;

  public static final String JSON_PROPERTY_LOYALTY_RESULT = "LoyaltyResult";
  private List<LoyaltyResult> loyaltyResult;

  public static final String JSON_PROPERTY_PAYMENT_RECEIPT = "PaymentReceipt";
  private List<PaymentReceipt> paymentReceipt;

  public PaymentResponse() { 
  }

  /**
   * response
   *
   * @param response 
   * @return the current {@code PaymentResponse} instance, allowing for method chaining
   */
  public PaymentResponse response(Response response) {
    this.response = response;
    return this;
  }

  /**
   * Get response
   * @return response 
   */
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Response getResponse() {
    return response;
  }

  /**
   * response
   *
   * @param response 
   */
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponse(Response response) {
    this.response = response;
  }

  /**
   * saleData
   *
   * @param saleData 
   * @return the current {@code PaymentResponse} instance, allowing for method chaining
   */
  public PaymentResponse saleData(SaleData saleData) {
    this.saleData = saleData;
    return this;
  }

  /**
   * Get saleData
   * @return saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SaleData getSaleData() {
    return saleData;
  }

  /**
   * saleData
   *
   * @param saleData 
   */
  @JsonProperty(JSON_PROPERTY_SALE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleData(SaleData saleData) {
    this.saleData = saleData;
  }

  /**
   * poIData
   *
   * @param poIData 
   * @return the current {@code PaymentResponse} instance, allowing for method chaining
   */
  public PaymentResponse poIData(POIData poIData) {
    this.poIData = poIData;
    return this;
  }

  /**
   * Get poIData
   * @return poIData 
   */
  @JsonProperty(JSON_PROPERTY_PO_I_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public POIData getPoIData() {
    return poIData;
  }

  /**
   * poIData
   *
   * @param poIData 
   */
  @JsonProperty(JSON_PROPERTY_PO_I_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPoIData(POIData poIData) {
    this.poIData = poIData;
  }

  /**
   * paymentResult
   *
   * @param paymentResult 
   * @return the current {@code PaymentResponse} instance, allowing for method chaining
   */
  public PaymentResponse paymentResult(PaymentResult paymentResult) {
    this.paymentResult = paymentResult;
    return this;
  }

  /**
   * Get paymentResult
   * @return paymentResult 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentResult getPaymentResult() {
    return paymentResult;
  }

  /**
   * paymentResult
   *
   * @param paymentResult 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentResult(PaymentResult paymentResult) {
    this.paymentResult = paymentResult;
  }

  /**
   * Data related to the result of a processed loyalty transaction. Loyalty cards used with the payment transaction.
   *
   * @param loyaltyResult Data related to the result of a processed loyalty transaction. Loyalty cards used with the payment transaction.
   * @return the current {@code PaymentResponse} instance, allowing for method chaining
   */
  public PaymentResponse loyaltyResult(List<LoyaltyResult> loyaltyResult) {
    this.loyaltyResult = loyaltyResult;
    return this;
  }

  public PaymentResponse addLoyaltyResultItem(LoyaltyResult loyaltyResultItem) {
    if (this.loyaltyResult == null) {
      this.loyaltyResult = new ArrayList<>();
    }
    this.loyaltyResult.add(loyaltyResultItem);
    return this;
  }

  /**
   * Data related to the result of a processed loyalty transaction. Loyalty cards used with the payment transaction.
   * @return loyaltyResult Data related to the result of a processed loyalty transaction. Loyalty cards used with the payment transaction.
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<LoyaltyResult> getLoyaltyResult() {
    return loyaltyResult;
  }

  /**
   * Data related to the result of a processed loyalty transaction. Loyalty cards used with the payment transaction.
   *
   * @param loyaltyResult Data related to the result of a processed loyalty transaction. Loyalty cards used with the payment transaction.
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyResult(List<LoyaltyResult> loyaltyResult) {
    this.loyaltyResult = loyaltyResult;
  }

  /**
   * Customer or Merchant payment receipt. If the payment receipts are printed by the Sale system and the POI or the Sale does not implement the Print exchange (Basic profile).
   *
   * @param paymentReceipt Customer or Merchant payment receipt. If the payment receipts are printed by the Sale system and the POI or the Sale does not implement the Print exchange (Basic profile).
   * @return the current {@code PaymentResponse} instance, allowing for method chaining
   */
  public PaymentResponse paymentReceipt(List<PaymentReceipt> paymentReceipt) {
    this.paymentReceipt = paymentReceipt;
    return this;
  }

  public PaymentResponse addPaymentReceiptItem(PaymentReceipt paymentReceiptItem) {
    if (this.paymentReceipt == null) {
      this.paymentReceipt = new ArrayList<>();
    }
    this.paymentReceipt.add(paymentReceiptItem);
    return this;
  }

  /**
   * Customer or Merchant payment receipt. If the payment receipts are printed by the Sale system and the POI or the Sale does not implement the Print exchange (Basic profile).
   * @return paymentReceipt Customer or Merchant payment receipt. If the payment receipts are printed by the Sale system and the POI or the Sale does not implement the Print exchange (Basic profile).
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_RECEIPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<PaymentReceipt> getPaymentReceipt() {
    return paymentReceipt;
  }

  /**
   * Customer or Merchant payment receipt. If the payment receipts are printed by the Sale system and the POI or the Sale does not implement the Print exchange (Basic profile).
   *
   * @param paymentReceipt Customer or Merchant payment receipt. If the payment receipts are printed by the Sale system and the POI or the Sale does not implement the Print exchange (Basic profile).
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_RECEIPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentReceipt(List<PaymentReceipt> paymentReceipt) {
    this.paymentReceipt = paymentReceipt;
  }

  /**
   * Return true if this PaymentResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentResponse paymentResponse = (PaymentResponse) o;
    return Objects.equals(this.response, paymentResponse.response) &&
        Objects.equals(this.saleData, paymentResponse.saleData) &&
        Objects.equals(this.poIData, paymentResponse.poIData) &&
        Objects.equals(this.paymentResult, paymentResponse.paymentResult) &&
        Objects.equals(this.loyaltyResult, paymentResponse.loyaltyResult) &&
        Objects.equals(this.paymentReceipt, paymentResponse.paymentReceipt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(response, saleData, poIData, paymentResult, loyaltyResult, paymentReceipt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentResponse {\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    saleData: ").append(toIndentedString(saleData)).append("\n");
    sb.append("    poIData: ").append(toIndentedString(poIData)).append("\n");
    sb.append("    paymentResult: ").append(toIndentedString(paymentResult)).append("\n");
    sb.append("    loyaltyResult: ").append(toIndentedString(loyaltyResult)).append("\n");
    sb.append("    paymentReceipt: ").append(toIndentedString(paymentReceipt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PaymentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to PaymentResponse
   */
  public static PaymentResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PaymentResponse.class);
  }
/**
  * Convert an instance of PaymentResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
