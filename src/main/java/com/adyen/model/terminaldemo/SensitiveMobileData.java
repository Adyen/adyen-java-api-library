/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * SensitiveMobileData
 */
@JsonPropertyOrder({
  SensitiveMobileData.JSON_PROPERTY_M_S_I_S_D_N,
  SensitiveMobileData.JSON_PROPERTY_I_M_S_I,
  SensitiveMobileData.JSON_PROPERTY_I_M_E_I
})

public class SensitiveMobileData {
  public static final String JSON_PROPERTY_M_S_I_S_D_N = "MSISDN";
  private Integer MSISDN;

  public static final String JSON_PROPERTY_I_M_S_I = "IMSI";
  private Integer IMSI;

  public static final String JSON_PROPERTY_I_M_E_I = "IMEI";
  private Integer IMEI;

  public SensitiveMobileData() { 
  }

  /**
   * Mobile Subscriber Integrated Service Digital Network (i.e. mobile phone number of the SIM card). Country, National Destination Code, and Subscriber Number.
   *
   * @param MSISDN Mobile Subscriber Integrated Service Digital Network (i.e. mobile phone number of the SIM card). Country, National Destination Code, and Subscriber Number.
   * @return the current {@code SensitiveMobileData} instance, allowing for method chaining
   */
  public SensitiveMobileData MSISDN(Integer MSISDN) {
    this.MSISDN = MSISDN;
    return this;
  }

  /**
   * Mobile Subscriber Integrated Service Digital Network (i.e. mobile phone number of the SIM card). Country, National Destination Code, and Subscriber Number.
   * @return MSISDN Mobile Subscriber Integrated Service Digital Network (i.e. mobile phone number of the SIM card). Country, National Destination Code, and Subscriber Number.
   */
  @JsonProperty(JSON_PROPERTY_M_S_I_S_D_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getMSISDN() {
    return MSISDN;
  }

  /**
   * Mobile Subscriber Integrated Service Digital Network (i.e. mobile phone number of the SIM card). Country, National Destination Code, and Subscriber Number.
   *
   * @param MSISDN Mobile Subscriber Integrated Service Digital Network (i.e. mobile phone number of the SIM card). Country, National Destination Code, and Subscriber Number.
   */
  @JsonProperty(JSON_PROPERTY_M_S_I_S_D_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMSISDN(Integer MSISDN) {
    this.MSISDN = MSISDN;
  }

  /**
   * International Mobile Subscriber Identity. Unique number associated with the mobile phone user, containing the Mobile Country Code (MCC), the Mobile Network Code (MNC), and the Mobile Identification Number (MSIN)
   *
   * @param IMSI International Mobile Subscriber Identity. Unique number associated with the mobile phone user, containing the Mobile Country Code (MCC), the Mobile Network Code (MNC), and the Mobile Identification Number (MSIN)
   * @return the current {@code SensitiveMobileData} instance, allowing for method chaining
   */
  public SensitiveMobileData IMSI(Integer IMSI) {
    this.IMSI = IMSI;
    return this;
  }

  /**
   * International Mobile Subscriber Identity. Unique number associated with the mobile phone user, containing the Mobile Country Code (MCC), the Mobile Network Code (MNC), and the Mobile Identification Number (MSIN)
   * @return IMSI International Mobile Subscriber Identity. Unique number associated with the mobile phone user, containing the Mobile Country Code (MCC), the Mobile Network Code (MNC), and the Mobile Identification Number (MSIN)
   */
  @JsonProperty(JSON_PROPERTY_I_M_S_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getIMSI() {
    return IMSI;
  }

  /**
   * International Mobile Subscriber Identity. Unique number associated with the mobile phone user, containing the Mobile Country Code (MCC), the Mobile Network Code (MNC), and the Mobile Identification Number (MSIN)
   *
   * @param IMSI International Mobile Subscriber Identity. Unique number associated with the mobile phone user, containing the Mobile Country Code (MCC), the Mobile Network Code (MNC), and the Mobile Identification Number (MSIN)
   */
  @JsonProperty(JSON_PROPERTY_I_M_S_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIMSI(Integer IMSI) {
    this.IMSI = IMSI;
  }

  /**
   * International Mobile Equipment Identity. Unique number associated with the mobile phone device.
   *
   * @param IMEI International Mobile Equipment Identity. Unique number associated with the mobile phone device.
   * @return the current {@code SensitiveMobileData} instance, allowing for method chaining
   */
  public SensitiveMobileData IMEI(Integer IMEI) {
    this.IMEI = IMEI;
    return this;
  }

  /**
   * International Mobile Equipment Identity. Unique number associated with the mobile phone device.
   * @return IMEI International Mobile Equipment Identity. Unique number associated with the mobile phone device.
   */
  @JsonProperty(JSON_PROPERTY_I_M_E_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getIMEI() {
    return IMEI;
  }

  /**
   * International Mobile Equipment Identity. Unique number associated with the mobile phone device.
   *
   * @param IMEI International Mobile Equipment Identity. Unique number associated with the mobile phone device.
   */
  @JsonProperty(JSON_PROPERTY_I_M_E_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIMEI(Integer IMEI) {
    this.IMEI = IMEI;
  }

  /**
   * Return true if this SensitiveMobileData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SensitiveMobileData sensitiveMobileData = (SensitiveMobileData) o;
    return Objects.equals(this.MSISDN, sensitiveMobileData.MSISDN) &&
        Objects.equals(this.IMSI, sensitiveMobileData.IMSI) &&
        Objects.equals(this.IMEI, sensitiveMobileData.IMEI);
  }

  @Override
  public int hashCode() {
    return Objects.hash(MSISDN, IMSI, IMEI);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SensitiveMobileData {\n");
    sb.append("    MSISDN: ").append(toIndentedString(MSISDN)).append("\n");
    sb.append("    IMSI: ").append(toIndentedString(IMSI)).append("\n");
    sb.append("    IMEI: ").append(toIndentedString(IMEI)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of SensitiveMobileData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SensitiveMobileData
   * @throws JsonProcessingException if the JSON string is invalid with respect to SensitiveMobileData
   */
  public static SensitiveMobileData fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, SensitiveMobileData.class);
  }
/**
  * Convert an instance of SensitiveMobileData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
