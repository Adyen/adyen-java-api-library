/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.MessageCategory;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Identification of a previous POI transaction. To abort a transaction in progress or to request the status of a transaction from which no response has been received. It identifies the message header of the message request to abort or request the status.
 */
@JsonPropertyOrder({
  MessageReference.JSON_PROPERTY_MESSAGE_CATEGORY,
  MessageReference.JSON_PROPERTY_SERVICE_I_D,
  MessageReference.JSON_PROPERTY_DEVICE_I_D,
  MessageReference.JSON_PROPERTY_SALE_I_D,
  MessageReference.JSON_PROPERTY_P_O_I_I_D
})

public class MessageReference {
  public static final String JSON_PROPERTY_MESSAGE_CATEGORY = "MessageCategory";
  private MessageCategory messageCategory;

  public static final String JSON_PROPERTY_SERVICE_I_D = "ServiceID";
  private String serviceID;

  public static final String JSON_PROPERTY_DEVICE_I_D = "DeviceID";
  private String deviceID;

  public static final String JSON_PROPERTY_SALE_I_D = "SaleID";
  private String saleID;

  public static final String JSON_PROPERTY_P_O_I_I_D = "POIID";
  private String POIID;

  public MessageReference() { 
  }

  /**
   * messageCategory
   *
   * @param messageCategory 
   * @return the current {@code MessageReference} instance, allowing for method chaining
   */
  public MessageReference messageCategory(MessageCategory messageCategory) {
    this.messageCategory = messageCategory;
    return this;
  }

  /**
   * Get messageCategory
   * @return messageCategory 
   */
  @JsonProperty(JSON_PROPERTY_MESSAGE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MessageCategory getMessageCategory() {
    return messageCategory;
  }

  /**
   * messageCategory
   *
   * @param messageCategory 
   */
  @JsonProperty(JSON_PROPERTY_MESSAGE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageCategory(MessageCategory messageCategory) {
    this.messageCategory = messageCategory;
  }

  /**
   * Identification of a message pair, which processes a transaction.
   *
   * @param serviceID Identification of a message pair, which processes a transaction.
   * @return the current {@code MessageReference} instance, allowing for method chaining
   */
  public MessageReference serviceID(String serviceID) {
    this.serviceID = serviceID;
    return this;
  }

  /**
   * Identification of a message pair, which processes a transaction.
   * @return serviceID Identification of a message pair, which processes a transaction.
   */
  @JsonProperty(JSON_PROPERTY_SERVICE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getServiceID() {
    return serviceID;
  }

  /**
   * Identification of a message pair, which processes a transaction.
   *
   * @param serviceID Identification of a message pair, which processes a transaction.
   */
  @JsonProperty(JSON_PROPERTY_SERVICE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceID(String serviceID) {
    this.serviceID = serviceID;
  }

  /**
   * Identification of a device message pair.
   *
   * @param deviceID Identification of a device message pair.
   * @return the current {@code MessageReference} instance, allowing for method chaining
   */
  public MessageReference deviceID(String deviceID) {
    this.deviceID = deviceID;
    return this;
  }

  /**
   * Identification of a device message pair.
   * @return deviceID Identification of a device message pair.
   */
  @JsonProperty(JSON_PROPERTY_DEVICE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDeviceID() {
    return deviceID;
  }

  /**
   * Identification of a device message pair.
   *
   * @param deviceID Identification of a device message pair.
   */
  @JsonProperty(JSON_PROPERTY_DEVICE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceID(String deviceID) {
    this.deviceID = deviceID;
  }

  /**
   * Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. default MessageHeader.SaleID.
   *
   * @param saleID Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. default MessageHeader.SaleID.
   * @return the current {@code MessageReference} instance, allowing for method chaining
   */
  public MessageReference saleID(String saleID) {
    this.saleID = saleID;
    return this;
  }

  /**
   * Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. default MessageHeader.SaleID.
   * @return saleID Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. default MessageHeader.SaleID.
   */
  @JsonProperty(JSON_PROPERTY_SALE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSaleID() {
    return saleID;
  }

  /**
   * Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. default MessageHeader.SaleID.
   *
   * @param saleID Identification of a Sale System or a Sale Terminal for the Sale to POI protocol. default MessageHeader.SaleID.
   */
  @JsonProperty(JSON_PROPERTY_SALE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleID(String saleID) {
    this.saleID = saleID;
  }

  /**
   * Identification of a POI System or a POI Terminal for the Sale to POI protocol. Default &#x60;MessageHeader.POIID&#x60;.
   *
   * @param POIID Identification of a POI System or a POI Terminal for the Sale to POI protocol. Default &#x60;MessageHeader.POIID&#x60;.
   * @return the current {@code MessageReference} instance, allowing for method chaining
   */
  public MessageReference POIID(String POIID) {
    this.POIID = POIID;
    return this;
  }

  /**
   * Identification of a POI System or a POI Terminal for the Sale to POI protocol. Default &#x60;MessageHeader.POIID&#x60;.
   * @return POIID Identification of a POI System or a POI Terminal for the Sale to POI protocol. Default &#x60;MessageHeader.POIID&#x60;.
   */
  @JsonProperty(JSON_PROPERTY_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPOIID() {
    return POIID;
  }

  /**
   * Identification of a POI System or a POI Terminal for the Sale to POI protocol. Default &#x60;MessageHeader.POIID&#x60;.
   *
   * @param POIID Identification of a POI System or a POI Terminal for the Sale to POI protocol. Default &#x60;MessageHeader.POIID&#x60;.
   */
  @JsonProperty(JSON_PROPERTY_P_O_I_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPOIID(String POIID) {
    this.POIID = POIID;
  }

  /**
   * Return true if this MessageReference object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageReference messageReference = (MessageReference) o;
    return Objects.equals(this.messageCategory, messageReference.messageCategory) &&
        Objects.equals(this.serviceID, messageReference.serviceID) &&
        Objects.equals(this.deviceID, messageReference.deviceID) &&
        Objects.equals(this.saleID, messageReference.saleID) &&
        Objects.equals(this.POIID, messageReference.POIID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageCategory, serviceID, deviceID, saleID, POIID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageReference {\n");
    sb.append("    messageCategory: ").append(toIndentedString(messageCategory)).append("\n");
    sb.append("    serviceID: ").append(toIndentedString(serviceID)).append("\n");
    sb.append("    deviceID: ").append(toIndentedString(deviceID)).append("\n");
    sb.append("    saleID: ").append(toIndentedString(saleID)).append("\n");
    sb.append("    POIID: ").append(toIndentedString(POIID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of MessageReference given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MessageReference
   * @throws JsonProcessingException if the JSON string is invalid with respect to MessageReference
   */
  public static MessageReference fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, MessageReference.class);
  }
/**
  * Convert an instance of MessageReference to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
