/*
 * Adyen Terminal API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.terminaldemo;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.terminaldemo.IdentificationSupport;
import com.adyen.model.terminaldemo.IdentificationType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Identification of a Loyalty account. In the Payment Request message, it allows identifying the loyalty account by the Sale Terminal instead of the POI Terminal (for example, because the account identification is a bar-code read by the Cashier on a scanner device).
 */
@JsonPropertyOrder({
  LoyaltyAccountID.JSON_PROPERTY_ENTRY_MODE,
  LoyaltyAccountID.JSON_PROPERTY_IDENTIFICATION_TYPE,
  LoyaltyAccountID.JSON_PROPERTY_IDENTIFICATION_SUPPORT,
  LoyaltyAccountID.JSON_PROPERTY_LOYALTY_I_D
})

public class LoyaltyAccountID {
  /**
   * Gets or Sets entryMode
   */
  public enum EntryModeEnum {

    CONTACTLESS(String.valueOf("Contactless")),

    FILE(String.valueOf("File")),

    ICC(String.valueOf("ICC")),

    KEYED(String.valueOf("Keyed")),

    MAGSTRIPE(String.valueOf("MagStripe")),

    MANUAL(String.valueOf("Manual")),

    MOBILE(String.valueOf("Mobile")),

    RFID(String.valueOf("RFID")),

    SCANNED(String.valueOf("Scanned")),

    SYNCHRONOUSICC(String.valueOf("SynchronousICC")),

    TAPPED(String.valueOf("Tapped"));

    private static final Logger LOG = Logger.getLogger(EntryModeEnum.class.getName());

    private String value;

    EntryModeEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EntryModeEnum fromValue(String value) {
      for (EntryModeEnum b : EntryModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      // handling unexpected value
      LOG.warning("EntryModeEnum: unexpected enum value '" + value + "' - Supported values are "+ Arrays.toString(EntryModeEnum.values()));
      return null;
    }
  }

  public static final String JSON_PROPERTY_ENTRY_MODE = "EntryMode";
  private List<EntryModeEnum> entryMode;

  public static final String JSON_PROPERTY_IDENTIFICATION_TYPE = "IdentificationType";
  private IdentificationType identificationType;

  public static final String JSON_PROPERTY_IDENTIFICATION_SUPPORT = "IdentificationSupport";
  private IdentificationSupport identificationSupport;

  public static final String JSON_PROPERTY_LOYALTY_I_D = "LoyaltyID";
  private String loyaltyID;

  public LoyaltyAccountID() { 
  }

  /**
   * entryMode
   *
   * @param entryMode 
   * @return the current {@code LoyaltyAccountID} instance, allowing for method chaining
   */
  public LoyaltyAccountID entryMode(List<EntryModeEnum> entryMode) {
    this.entryMode = entryMode;
    return this;
  }

  public LoyaltyAccountID addEntryModeItem(EntryModeEnum entryModeItem) {
    if (this.entryMode == null) {
      this.entryMode = new ArrayList<>();
    }
    this.entryMode.add(entryModeItem);
    return this;
  }

  /**
   * Get entryMode
   * @return entryMode 
   */
  @JsonProperty(JSON_PROPERTY_ENTRY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EntryModeEnum> getEntryMode() {
    return entryMode;
  }

  /**
   * entryMode
   *
   * @param entryMode 
   */
  @JsonProperty(JSON_PROPERTY_ENTRY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntryMode(List<EntryModeEnum> entryMode) {
    this.entryMode = entryMode;
  }

  /**
   * identificationType
   *
   * @param identificationType 
   * @return the current {@code LoyaltyAccountID} instance, allowing for method chaining
   */
  public LoyaltyAccountID identificationType(IdentificationType identificationType) {
    this.identificationType = identificationType;
    return this;
  }

  /**
   * Get identificationType
   * @return identificationType 
   */
  @JsonProperty(JSON_PROPERTY_IDENTIFICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public IdentificationType getIdentificationType() {
    return identificationType;
  }

  /**
   * identificationType
   *
   * @param identificationType 
   */
  @JsonProperty(JSON_PROPERTY_IDENTIFICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentificationType(IdentificationType identificationType) {
    this.identificationType = identificationType;
  }

  /**
   * identificationSupport
   *
   * @param identificationSupport 
   * @return the current {@code LoyaltyAccountID} instance, allowing for method chaining
   */
  public LoyaltyAccountID identificationSupport(IdentificationSupport identificationSupport) {
    this.identificationSupport = identificationSupport;
    return this;
  }

  /**
   * Get identificationSupport
   * @return identificationSupport 
   */
  @JsonProperty(JSON_PROPERTY_IDENTIFICATION_SUPPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public IdentificationSupport getIdentificationSupport() {
    return identificationSupport;
  }

  /**
   * identificationSupport
   *
   * @param identificationSupport 
   */
  @JsonProperty(JSON_PROPERTY_IDENTIFICATION_SUPPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentificationSupport(IdentificationSupport identificationSupport) {
    this.identificationSupport = identificationSupport;
  }

  /**
   * Loyalty account identification conforming to the IdentificationType.
   *
   * @param loyaltyID Loyalty account identification conforming to the IdentificationType.
   * @return the current {@code LoyaltyAccountID} instance, allowing for method chaining
   */
  public LoyaltyAccountID loyaltyID(String loyaltyID) {
    this.loyaltyID = loyaltyID;
    return this;
  }

  /**
   * Loyalty account identification conforming to the IdentificationType.
   * @return loyaltyID Loyalty account identification conforming to the IdentificationType.
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLoyaltyID() {
    return loyaltyID;
  }

  /**
   * Loyalty account identification conforming to the IdentificationType.
   *
   * @param loyaltyID Loyalty account identification conforming to the IdentificationType.
   */
  @JsonProperty(JSON_PROPERTY_LOYALTY_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoyaltyID(String loyaltyID) {
    this.loyaltyID = loyaltyID;
  }

  /**
   * Return true if this LoyaltyAccountID object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyAccountID loyaltyAccountID = (LoyaltyAccountID) o;
    return Objects.equals(this.entryMode, loyaltyAccountID.entryMode) &&
        Objects.equals(this.identificationType, loyaltyAccountID.identificationType) &&
        Objects.equals(this.identificationSupport, loyaltyAccountID.identificationSupport) &&
        Objects.equals(this.loyaltyID, loyaltyAccountID.loyaltyID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryMode, identificationType, identificationSupport, loyaltyID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyAccountID {\n");
    sb.append("    entryMode: ").append(toIndentedString(entryMode)).append("\n");
    sb.append("    identificationType: ").append(toIndentedString(identificationType)).append("\n");
    sb.append("    identificationSupport: ").append(toIndentedString(identificationSupport)).append("\n");
    sb.append("    loyaltyID: ").append(toIndentedString(loyaltyID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of LoyaltyAccountID given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyAccountID
   * @throws JsonProcessingException if the JSON string is invalid with respect to LoyaltyAccountID
   */
  public static LoyaltyAccountID fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, LoyaltyAccountID.class);
  }
/**
  * Convert an instance of LoyaltyAccountID to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
