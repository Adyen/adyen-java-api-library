/*
 * Adyen Payout API
 *
 * The version of the OpenAPI document: 68
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.payout;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * StoreDetailResponse
 */
@JsonPropertyOrder({
  StoreDetailResponse.JSON_PROPERTY_ADDITIONAL_DATA,
  StoreDetailResponse.JSON_PROPERTY_PSP_REFERENCE,
  StoreDetailResponse.JSON_PROPERTY_RECURRING_DETAIL_REFERENCE,
  StoreDetailResponse.JSON_PROPERTY_RESULT_CODE
})

public class StoreDetailResponse {
  public static final String JSON_PROPERTY_ADDITIONAL_DATA = "additionalData";
  private Map<String, String> additionalData = null;

  public static final String JSON_PROPERTY_PSP_REFERENCE = "pspReference";
  private String pspReference;

  public static final String JSON_PROPERTY_RECURRING_DETAIL_REFERENCE = "recurringDetailReference";
  private String recurringDetailReference;

  public static final String JSON_PROPERTY_RESULT_CODE = "resultCode";
  private String resultCode;

  public StoreDetailResponse() { 
  }

  /**
   * This field contains additional data, which may be returned in a particular response.
   *
   * @param additionalData
   * @return the current {@code StoreDetailResponse} instance, allowing for method chaining
   */
  public StoreDetailResponse additionalData(Map<String, String> additionalData) {
    this.additionalData = additionalData;
    return this;
  }

  public StoreDetailResponse putAdditionalDataItem(String key, String additionalDataItem) {
    if (this.additionalData == null) {
      this.additionalData = new HashMap<>();
    }
    this.additionalData.put(key, additionalDataItem);
    return this;
  }

  /**
   * This field contains additional data, which may be returned in a particular response.
   * @return additionalData
   */
  @ApiModelProperty(value = "This field contains additional data, which may be returned in a particular response.")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, String> getAdditionalData() {
    return additionalData;
  }

  /**
   * This field contains additional data, which may be returned in a particular response.
   *
   * @param additionalData
   */ 
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalData(Map<String, String> additionalData) {
    this.additionalData = additionalData;
  }

  /**
   * A new reference to uniquely identify this request.
   *
   * @param pspReference
   * @return the current {@code StoreDetailResponse} instance, allowing for method chaining
   */
  public StoreDetailResponse pspReference(String pspReference) {
    this.pspReference = pspReference;
    return this;
  }

  /**
   * A new reference to uniquely identify this request.
   * @return pspReference
   */
  @ApiModelProperty(required = true, value = "A new reference to uniquely identify this request.")
  @JsonProperty(JSON_PROPERTY_PSP_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPspReference() {
    return pspReference;
  }

  /**
   * A new reference to uniquely identify this request.
   *
   * @param pspReference
   */ 
  @JsonProperty(JSON_PROPERTY_PSP_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPspReference(String pspReference) {
    this.pspReference = pspReference;
  }

  /**
   * The token which you can use later on for submitting the payout.
   *
   * @param recurringDetailReference
   * @return the current {@code StoreDetailResponse} instance, allowing for method chaining
   */
  public StoreDetailResponse recurringDetailReference(String recurringDetailReference) {
    this.recurringDetailReference = recurringDetailReference;
    return this;
  }

  /**
   * The token which you can use later on for submitting the payout.
   * @return recurringDetailReference
   */
  @ApiModelProperty(required = true, value = "The token which you can use later on for submitting the payout.")
  @JsonProperty(JSON_PROPERTY_RECURRING_DETAIL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getRecurringDetailReference() {
    return recurringDetailReference;
  }

  /**
   * The token which you can use later on for submitting the payout.
   *
   * @param recurringDetailReference
   */ 
  @JsonProperty(JSON_PROPERTY_RECURRING_DETAIL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurringDetailReference(String recurringDetailReference) {
    this.recurringDetailReference = recurringDetailReference;
  }

  /**
   * The result code of the transaction. &#x60;Success&#x60; indicates that the details were stored successfully.
   *
   * @param resultCode
   * @return the current {@code StoreDetailResponse} instance, allowing for method chaining
   */
  public StoreDetailResponse resultCode(String resultCode) {
    this.resultCode = resultCode;
    return this;
  }

  /**
   * The result code of the transaction. &#x60;Success&#x60; indicates that the details were stored successfully.
   * @return resultCode
   */
  @ApiModelProperty(required = true, value = "The result code of the transaction. `Success` indicates that the details were stored successfully.")
  @JsonProperty(JSON_PROPERTY_RESULT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getResultCode() {
    return resultCode;
  }

  /**
   * The result code of the transaction. &#x60;Success&#x60; indicates that the details were stored successfully.
   *
   * @param resultCode
   */ 
  @JsonProperty(JSON_PROPERTY_RESULT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResultCode(String resultCode) {
    this.resultCode = resultCode;
  }

  /**
   * Return true if this StoreDetailResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoreDetailResponse storeDetailResponse = (StoreDetailResponse) o;
    return Objects.equals(this.additionalData, storeDetailResponse.additionalData) &&
        Objects.equals(this.pspReference, storeDetailResponse.pspReference) &&
        Objects.equals(this.recurringDetailReference, storeDetailResponse.recurringDetailReference) &&
        Objects.equals(this.resultCode, storeDetailResponse.resultCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalData, pspReference, recurringDetailReference, resultCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoreDetailResponse {\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    pspReference: ").append(toIndentedString(pspReference)).append("\n");
    sb.append("    recurringDetailReference: ").append(toIndentedString(recurringDetailReference)).append("\n");
    sb.append("    resultCode: ").append(toIndentedString(resultCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of StoreDetailResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StoreDetailResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to StoreDetailResponse
   */
  public static StoreDetailResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, StoreDetailResponse.class);
  }
/**
  * Convert an instance of StoreDetailResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
