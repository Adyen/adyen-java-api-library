/*
 * Open Banking API
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.openbanking;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;

/** BACSAccountIdentifier */
@JsonPropertyOrder({
  BACSAccountIdentifier.JSON_PROPERTY_ACCOUNT_NUMBER,
  BACSAccountIdentifier.JSON_PROPERTY_SORT_CODE
})
public class BACSAccountIdentifier {
  public static final String JSON_PROPERTY_ACCOUNT_NUMBER = "accountNumber";
  private String accountNumber;

  public static final String JSON_PROPERTY_SORT_CODE = "sortCode";
  private String sortCode;

  public BACSAccountIdentifier() {}

  /**
   * The account number of the bank account.
   *
   * @param accountNumber The account number of the bank account.
   * @return the current {@code BACSAccountIdentifier} instance, allowing for method chaining
   */
  public BACSAccountIdentifier accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

  /**
   * The account number of the bank account.
   *
   * @return accountNumber The account number of the bank account.
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAccountNumber() {
    return accountNumber;
  }

  /**
   * The account number of the bank account.
   *
   * @param accountNumber The account number of the bank account.
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  /**
   * A number that identifies the specific bank and branch where a UK bank account is held.
   *
   * @param sortCode A number that identifies the specific bank and branch where a UK bank account
   *     is held.
   * @return the current {@code BACSAccountIdentifier} instance, allowing for method chaining
   */
  public BACSAccountIdentifier sortCode(String sortCode) {
    this.sortCode = sortCode;
    return this;
  }

  /**
   * A number that identifies the specific bank and branch where a UK bank account is held.
   *
   * @return sortCode A number that identifies the specific bank and branch where a UK bank account
   *     is held.
   */
  @JsonProperty(JSON_PROPERTY_SORT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSortCode() {
    return sortCode;
  }

  /**
   * A number that identifies the specific bank and branch where a UK bank account is held.
   *
   * @param sortCode A number that identifies the specific bank and branch where a UK bank account
   *     is held.
   */
  @JsonProperty(JSON_PROPERTY_SORT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortCode(String sortCode) {
    this.sortCode = sortCode;
  }

  /** Return true if this BACSAccountIdentifier object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BACSAccountIdentifier baCSAccountIdentifier = (BACSAccountIdentifier) o;
    return Objects.equals(this.accountNumber, baCSAccountIdentifier.accountNumber)
        && Objects.equals(this.sortCode, baCSAccountIdentifier.sortCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumber, sortCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BACSAccountIdentifier {\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    sortCode: ").append(toIndentedString(sortCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of BACSAccountIdentifier given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BACSAccountIdentifier
   * @throws JsonProcessingException if the JSON string is invalid with respect to
   *     BACSAccountIdentifier
   */
  public static BACSAccountIdentifier fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, BACSAccountIdentifier.class);
  }

  /**
   * Convert an instance of BACSAccountIdentifier to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
