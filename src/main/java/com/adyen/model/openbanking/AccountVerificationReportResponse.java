/*
 * Open Banking API
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.openbanking;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;
import java.util.ArrayList;
import java.util.List;

/** AccountVerificationReportResponse */
@JsonPropertyOrder({
  AccountVerificationReportResponse.JSON_PROPERTY_ACCOUNTS,
  AccountVerificationReportResponse.JSON_PROPERTY_COUNTRY,
  AccountVerificationReportResponse.JSON_PROPERTY_ID
})
public class AccountVerificationReportResponse {
  public static final String JSON_PROPERTY_ACCOUNTS = "accounts";
  private List<VerifiedAccount> accounts;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private AccountVerificationCountry country;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public AccountVerificationReportResponse() {}

  /**
   * A list of bank accounts with their respective information.
   *
   * @param accounts A list of bank accounts with their respective information.
   * @return the current {@code AccountVerificationReportResponse} instance, allowing for method
   *     chaining
   */
  public AccountVerificationReportResponse accounts(List<VerifiedAccount> accounts) {
    this.accounts = accounts;
    return this;
  }

  public AccountVerificationReportResponse addAccountsItem(VerifiedAccount accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

  /**
   * A list of bank accounts with their respective information.
   *
   * @return accounts A list of bank accounts with their respective information.
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<VerifiedAccount> getAccounts() {
    return accounts;
  }

  /**
   * A list of bank accounts with their respective information.
   *
   * @param accounts A list of bank accounts with their respective information.
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccounts(List<VerifiedAccount> accounts) {
    this.accounts = accounts;
  }

  /**
   * country
   *
   * @param country
   * @return the current {@code AccountVerificationReportResponse} instance, allowing for method
   *     chaining
   */
  public AccountVerificationReportResponse country(AccountVerificationCountry country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   *
   * @return country
   */
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AccountVerificationCountry getCountry() {
    return country;
  }

  /**
   * country
   *
   * @param country
   */
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(AccountVerificationCountry country) {
    this.country = country;
  }

  /**
   * The unique identifier for the specific report.
   *
   * @param id The unique identifier for the specific report.
   * @return the current {@code AccountVerificationReportResponse} instance, allowing for method
   *     chaining
   */
  public AccountVerificationReportResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier for the specific report.
   *
   * @return id The unique identifier for the specific report.
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  /**
   * The unique identifier for the specific report.
   *
   * @param id The unique identifier for the specific report.
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  /** Return true if this AccountVerificationReportResponse object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountVerificationReportResponse accountVerificationReportResponse =
        (AccountVerificationReportResponse) o;
    return Objects.equals(this.accounts, accountVerificationReportResponse.accounts)
        && Objects.equals(this.country, accountVerificationReportResponse.country)
        && Objects.equals(this.id, accountVerificationReportResponse.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accounts, country, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountVerificationReportResponse {\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of AccountVerificationReportResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountVerificationReportResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to
   *     AccountVerificationReportResponse
   */
  public static AccountVerificationReportResponse fromJson(String jsonString)
      throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, AccountVerificationReportResponse.class);
  }

  /**
   * Convert an instance of AccountVerificationReportResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
