/*
 * Open Banking API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.openbanking;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.openbanking.ACHAccountIdentifier;
import com.adyen.model.openbanking.BACSAccountIdentifier;
import com.adyen.model.openbanking.BSBAccountIdentifier;
import com.adyen.model.openbanking.EFTAccountIdentifier;
import com.adyen.model.openbanking.IBANAccountIdentifier;
import com.adyen.model.openbanking.RIXAccountIdentifier;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * AccountIdentifiers
 */
@JsonPropertyOrder({
  AccountIdentifiers.JSON_PROPERTY_ACH,
  AccountIdentifiers.JSON_PROPERTY_BACS,
  AccountIdentifiers.JSON_PROPERTY_BSB,
  AccountIdentifiers.JSON_PROPERTY_EFT,
  AccountIdentifiers.JSON_PROPERTY_IBAN,
  AccountIdentifiers.JSON_PROPERTY_RIX
})

public class AccountIdentifiers {
  public static final String JSON_PROPERTY_ACH = "ach";
  private ACHAccountIdentifier ach;

  public static final String JSON_PROPERTY_BACS = "bacs";
  private BACSAccountIdentifier bacs;

  public static final String JSON_PROPERTY_BSB = "bsb";
  private BSBAccountIdentifier bsb;

  public static final String JSON_PROPERTY_EFT = "eft";
  private EFTAccountIdentifier eft;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private IBANAccountIdentifier iban;

  public static final String JSON_PROPERTY_RIX = "rix";
  private RIXAccountIdentifier rix;

  public AccountIdentifiers() { 
  }

  /**
   * ach
   *
   * @param ach 
   * @return the current {@code AccountIdentifiers} instance, allowing for method chaining
   */
  public AccountIdentifiers ach(ACHAccountIdentifier ach) {
    this.ach = ach;
    return this;
  }

  /**
   * Get ach
   * @return ach 
   */
  @JsonProperty(JSON_PROPERTY_ACH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ACHAccountIdentifier getAch() {
    return ach;
  }

  /**
   * ach
   *
   * @param ach 
   */
  @JsonProperty(JSON_PROPERTY_ACH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAch(ACHAccountIdentifier ach) {
    this.ach = ach;
  }

  /**
   * bacs
   *
   * @param bacs 
   * @return the current {@code AccountIdentifiers} instance, allowing for method chaining
   */
  public AccountIdentifiers bacs(BACSAccountIdentifier bacs) {
    this.bacs = bacs;
    return this;
  }

  /**
   * Get bacs
   * @return bacs 
   */
  @JsonProperty(JSON_PROPERTY_BACS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BACSAccountIdentifier getBacs() {
    return bacs;
  }

  /**
   * bacs
   *
   * @param bacs 
   */
  @JsonProperty(JSON_PROPERTY_BACS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBacs(BACSAccountIdentifier bacs) {
    this.bacs = bacs;
  }

  /**
   * bsb
   *
   * @param bsb 
   * @return the current {@code AccountIdentifiers} instance, allowing for method chaining
   */
  public AccountIdentifiers bsb(BSBAccountIdentifier bsb) {
    this.bsb = bsb;
    return this;
  }

  /**
   * Get bsb
   * @return bsb 
   */
  @JsonProperty(JSON_PROPERTY_BSB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BSBAccountIdentifier getBsb() {
    return bsb;
  }

  /**
   * bsb
   *
   * @param bsb 
   */
  @JsonProperty(JSON_PROPERTY_BSB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBsb(BSBAccountIdentifier bsb) {
    this.bsb = bsb;
  }

  /**
   * eft
   *
   * @param eft 
   * @return the current {@code AccountIdentifiers} instance, allowing for method chaining
   */
  public AccountIdentifiers eft(EFTAccountIdentifier eft) {
    this.eft = eft;
    return this;
  }

  /**
   * Get eft
   * @return eft 
   */
  @JsonProperty(JSON_PROPERTY_EFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EFTAccountIdentifier getEft() {
    return eft;
  }

  /**
   * eft
   *
   * @param eft 
   */
  @JsonProperty(JSON_PROPERTY_EFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEft(EFTAccountIdentifier eft) {
    this.eft = eft;
  }

  /**
   * iban
   *
   * @param iban 
   * @return the current {@code AccountIdentifiers} instance, allowing for method chaining
   */
  public AccountIdentifiers iban(IBANAccountIdentifier iban) {
    this.iban = iban;
    return this;
  }

  /**
   * Get iban
   * @return iban 
   */
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public IBANAccountIdentifier getIban() {
    return iban;
  }

  /**
   * iban
   *
   * @param iban 
   */
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIban(IBANAccountIdentifier iban) {
    this.iban = iban;
  }

  /**
   * rix
   *
   * @param rix 
   * @return the current {@code AccountIdentifiers} instance, allowing for method chaining
   */
  public AccountIdentifiers rix(RIXAccountIdentifier rix) {
    this.rix = rix;
    return this;
  }

  /**
   * Get rix
   * @return rix 
   */
  @JsonProperty(JSON_PROPERTY_RIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public RIXAccountIdentifier getRix() {
    return rix;
  }

  /**
   * rix
   *
   * @param rix 
   */
  @JsonProperty(JSON_PROPERTY_RIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRix(RIXAccountIdentifier rix) {
    this.rix = rix;
  }

  /**
   * Return true if this AccountIdentifiers object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountIdentifiers accountIdentifiers = (AccountIdentifiers) o;
    return Objects.equals(this.ach, accountIdentifiers.ach) &&
        Objects.equals(this.bacs, accountIdentifiers.bacs) &&
        Objects.equals(this.bsb, accountIdentifiers.bsb) &&
        Objects.equals(this.eft, accountIdentifiers.eft) &&
        Objects.equals(this.iban, accountIdentifiers.iban) &&
        Objects.equals(this.rix, accountIdentifiers.rix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ach, bacs, bsb, eft, iban, rix);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountIdentifiers {\n");
    sb.append("    ach: ").append(toIndentedString(ach)).append("\n");
    sb.append("    bacs: ").append(toIndentedString(bacs)).append("\n");
    sb.append("    bsb: ").append(toIndentedString(bsb)).append("\n");
    sb.append("    eft: ").append(toIndentedString(eft)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    rix: ").append(toIndentedString(rix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of AccountIdentifiers given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountIdentifiers
   * @throws JsonProcessingException if the JSON string is invalid with respect to AccountIdentifiers
   */
  public static AccountIdentifiers fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, AccountIdentifiers.class);
  }
/**
  * Convert an instance of AccountIdentifiers to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
