/*
 * Management API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.management;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * TerminalInstructions
 */
@JsonPropertyOrder({
  TerminalInstructions.JSON_PROPERTY_ADYEN_APP_RESTART
})

public class TerminalInstructions {
  public static final String JSON_PROPERTY_ADYEN_APP_RESTART = "adyenAppRestart";
  private Boolean adyenAppRestart;

  public TerminalInstructions() { 
  }

  /**
   * Indicates whether the Adyen app on the payment terminal restarts automatically when the configuration is updated.
   *
   * @param adyenAppRestart
   * @return the current {@code TerminalInstructions} instance, allowing for method chaining
   */
  public TerminalInstructions adyenAppRestart(Boolean adyenAppRestart) {
    this.adyenAppRestart = adyenAppRestart;
    return this;
  }

  /**
   * Indicates whether the Adyen app on the payment terminal restarts automatically when the configuration is updated.
   * @return adyenAppRestart
   */
  @ApiModelProperty(value = "Indicates whether the Adyen app on the payment terminal restarts automatically when the configuration is updated.")
  @JsonProperty(JSON_PROPERTY_ADYEN_APP_RESTART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAdyenAppRestart() {
    return adyenAppRestart;
  }

  /**
   * Indicates whether the Adyen app on the payment terminal restarts automatically when the configuration is updated.
   *
   * @param adyenAppRestart
   */ 
  @JsonProperty(JSON_PROPERTY_ADYEN_APP_RESTART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdyenAppRestart(Boolean adyenAppRestart) {
    this.adyenAppRestart = adyenAppRestart;
  }

  /**
   * Return true if this TerminalInstructions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerminalInstructions terminalInstructions = (TerminalInstructions) o;
    return Objects.equals(this.adyenAppRestart, terminalInstructions.adyenAppRestart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adyenAppRestart);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerminalInstructions {\n");
    sb.append("    adyenAppRestart: ").append(toIndentedString(adyenAppRestart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of TerminalInstructions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TerminalInstructions
   * @throws JsonProcessingException if the JSON string is invalid with respect to TerminalInstructions
   */
  public static TerminalInstructions fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, TerminalInstructions.class);
  }
/**
  * Convert an instance of TerminalInstructions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
