/*
 * Management API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.management;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * MealVoucherFRInfo
 */
@JsonPropertyOrder({
  MealVoucherFRInfo.JSON_PROPERTY_CONECS_ID,
  MealVoucherFRInfo.JSON_PROPERTY_SIRET,
  MealVoucherFRInfo.JSON_PROPERTY_SUB_TYPES
})

public class MealVoucherFRInfo {
  public static final String JSON_PROPERTY_CONECS_ID = "conecsId";
  private String conecsId;

  public static final String JSON_PROPERTY_SIRET = "siret";
  private String siret;

  public static final String JSON_PROPERTY_SUB_TYPES = "subTypes";
  private List<String> subTypes = new ArrayList<>();

  public MealVoucherFRInfo() { 
  }

  /**
   * Meal Voucher conecsId. Format: digits only
   *
   * @param conecsId
   * @return the current {@code MealVoucherFRInfo} instance, allowing for method chaining
   */
  public MealVoucherFRInfo conecsId(String conecsId) {
    this.conecsId = conecsId;
    return this;
  }

  /**
   * Meal Voucher conecsId. Format: digits only
   * @return conecsId
   */
  @ApiModelProperty(required = true, value = "Meal Voucher conecsId. Format: digits only")
  @JsonProperty(JSON_PROPERTY_CONECS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getConecsId() {
    return conecsId;
  }

  /**
   * Meal Voucher conecsId. Format: digits only
   *
   * @param conecsId
   */ 
  @JsonProperty(JSON_PROPERTY_CONECS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConecsId(String conecsId) {
    this.conecsId = conecsId;
  }

  /**
   * Meal Voucher siret. Format: 14 digits.
   *
   * @param siret
   * @return the current {@code MealVoucherFRInfo} instance, allowing for method chaining
   */
  public MealVoucherFRInfo siret(String siret) {
    this.siret = siret;
    return this;
  }

  /**
   * Meal Voucher siret. Format: 14 digits.
   * @return siret
   */
  @ApiModelProperty(required = true, value = "Meal Voucher siret. Format: 14 digits.")
  @JsonProperty(JSON_PROPERTY_SIRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSiret() {
    return siret;
  }

  /**
   * Meal Voucher siret. Format: 14 digits.
   *
   * @param siret
   */ 
  @JsonProperty(JSON_PROPERTY_SIRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSiret(String siret) {
    this.siret = siret;
  }

  /**
   * The list of additional payment methods. Allowed values: **mealVoucher_FR_edenred**, **mealVoucher_FR_groupeup**, **mealVoucher_FR_natixis**, **mealVoucher_FR_sodexo**.
   *
   * @param subTypes
   * @return the current {@code MealVoucherFRInfo} instance, allowing for method chaining
   */
  public MealVoucherFRInfo subTypes(List<String> subTypes) {
    this.subTypes = subTypes;
    return this;
  }

  public MealVoucherFRInfo addSubTypesItem(String subTypesItem) {
    this.subTypes.add(subTypesItem);
    return this;
  }

  /**
   * The list of additional payment methods. Allowed values: **mealVoucher_FR_edenred**, **mealVoucher_FR_groupeup**, **mealVoucher_FR_natixis**, **mealVoucher_FR_sodexo**.
   * @return subTypes
   */
  @ApiModelProperty(required = true, value = "The list of additional payment methods. Allowed values: **mealVoucher_FR_edenred**, **mealVoucher_FR_groupeup**, **mealVoucher_FR_natixis**, **mealVoucher_FR_sodexo**.")
  @JsonProperty(JSON_PROPERTY_SUB_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSubTypes() {
    return subTypes;
  }

  /**
   * The list of additional payment methods. Allowed values: **mealVoucher_FR_edenred**, **mealVoucher_FR_groupeup**, **mealVoucher_FR_natixis**, **mealVoucher_FR_sodexo**.
   *
   * @param subTypes
   */ 
  @JsonProperty(JSON_PROPERTY_SUB_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubTypes(List<String> subTypes) {
    this.subTypes = subTypes;
  }

  /**
   * Return true if this MealVoucherFRInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MealVoucherFRInfo mealVoucherFRInfo = (MealVoucherFRInfo) o;
    return Objects.equals(this.conecsId, mealVoucherFRInfo.conecsId) &&
        Objects.equals(this.siret, mealVoucherFRInfo.siret) &&
        Objects.equals(this.subTypes, mealVoucherFRInfo.subTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conecsId, siret, subTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MealVoucherFRInfo {\n");
    sb.append("    conecsId: ").append(toIndentedString(conecsId)).append("\n");
    sb.append("    siret: ").append(toIndentedString(siret)).append("\n");
    sb.append("    subTypes: ").append(toIndentedString(subTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of MealVoucherFRInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MealVoucherFRInfo
   * @throws JsonProcessingException if the JSON string is invalid with respect to MealVoucherFRInfo
   */
  public static MealVoucherFRInfo fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, MealVoucherFRInfo.class);
  }
/**
  * Convert an instance of MealVoucherFRInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
