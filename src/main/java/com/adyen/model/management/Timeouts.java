/*
 * Management API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.management;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Timeouts
 */
@JsonPropertyOrder({
  Timeouts.JSON_PROPERTY_FROM_ACTIVE_TO_SLEEP
})

public class Timeouts {
  public static final String JSON_PROPERTY_FROM_ACTIVE_TO_SLEEP = "fromActiveToSleep";
  private Integer fromActiveToSleep;

  public Timeouts() { 
  }

  /**
   * Indicates the number of seconds of inactivity after which the terminal display goes into sleep mode.
   *
   * @param fromActiveToSleep
   * @return the current {@code Timeouts} instance, allowing for method chaining
   */
  public Timeouts fromActiveToSleep(Integer fromActiveToSleep) {
    this.fromActiveToSleep = fromActiveToSleep;
    return this;
  }

  /**
   * Indicates the number of seconds of inactivity after which the terminal display goes into sleep mode.
   * @return fromActiveToSleep
   */
  @ApiModelProperty(value = "Indicates the number of seconds of inactivity after which the terminal display goes into sleep mode.")
  @JsonProperty(JSON_PROPERTY_FROM_ACTIVE_TO_SLEEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getFromActiveToSleep() {
    return fromActiveToSleep;
  }

  /**
   * Indicates the number of seconds of inactivity after which the terminal display goes into sleep mode.
   *
   * @param fromActiveToSleep
   */ 
  @JsonProperty(JSON_PROPERTY_FROM_ACTIVE_TO_SLEEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromActiveToSleep(Integer fromActiveToSleep) {
    this.fromActiveToSleep = fromActiveToSleep;
  }

  /**
   * Return true if this Timeouts object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Timeouts timeouts = (Timeouts) o;
    return Objects.equals(this.fromActiveToSleep, timeouts.fromActiveToSleep);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromActiveToSleep);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Timeouts {\n");
    sb.append("    fromActiveToSleep: ").append(toIndentedString(fromActiveToSleep)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of Timeouts given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Timeouts
   * @throws JsonProcessingException if the JSON string is invalid with respect to Timeouts
   */
  public static Timeouts fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, Timeouts.class);
  }
/**
  * Convert an instance of Timeouts to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
