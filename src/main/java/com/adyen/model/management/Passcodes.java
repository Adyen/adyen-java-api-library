/*
 * Management API
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.management;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Passcodes
 */
@JsonPropertyOrder({
  Passcodes.JSON_PROPERTY_ADMIN_MENU_PIN,
  Passcodes.JSON_PROPERTY_REFUND_PIN,
  Passcodes.JSON_PROPERTY_SCREEN_LOCK_PIN,
  Passcodes.JSON_PROPERTY_TX_MENU_PIN
})

public class Passcodes {
  public static final String JSON_PROPERTY_ADMIN_MENU_PIN = "adminMenuPin";
  private String adminMenuPin;

  public static final String JSON_PROPERTY_REFUND_PIN = "refundPin";
  private String refundPin;

  public static final String JSON_PROPERTY_SCREEN_LOCK_PIN = "screenLockPin";
  private String screenLockPin;

  public static final String JSON_PROPERTY_TX_MENU_PIN = "txMenuPin";
  private String txMenuPin;

  public Passcodes() { 
  }

  /**
   * The passcode for the Admin menu and the Settings menu.
   *
   * @param adminMenuPin
   * @return the current {@code Passcodes} instance, allowing for method chaining
   */
  public Passcodes adminMenuPin(String adminMenuPin) {
    this.adminMenuPin = adminMenuPin;
    return this;
  }

  /**
   * The passcode for the Admin menu and the Settings menu.
   * @return adminMenuPin
   */
  @ApiModelProperty(value = "The passcode for the Admin menu and the Settings menu.")
  @JsonProperty(JSON_PROPERTY_ADMIN_MENU_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAdminMenuPin() {
    return adminMenuPin;
  }

  /**
   * The passcode for the Admin menu and the Settings menu.
   *
   * @param adminMenuPin
   */ 
  @JsonProperty(JSON_PROPERTY_ADMIN_MENU_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminMenuPin(String adminMenuPin) {
    this.adminMenuPin = adminMenuPin;
  }

  /**
   * The passcode for referenced and unreferenced refunds on standalone terminals.
   *
   * @param refundPin
   * @return the current {@code Passcodes} instance, allowing for method chaining
   */
  public Passcodes refundPin(String refundPin) {
    this.refundPin = refundPin;
    return this;
  }

  /**
   * The passcode for referenced and unreferenced refunds on standalone terminals.
   * @return refundPin
   */
  @ApiModelProperty(value = "The passcode for referenced and unreferenced refunds on standalone terminals.")
  @JsonProperty(JSON_PROPERTY_REFUND_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getRefundPin() {
    return refundPin;
  }

  /**
   * The passcode for referenced and unreferenced refunds on standalone terminals.
   *
   * @param refundPin
   */ 
  @JsonProperty(JSON_PROPERTY_REFUND_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefundPin(String refundPin) {
    this.refundPin = refundPin;
  }

  /**
   * The passcode to unlock the terminal screen after a timeout.
   *
   * @param screenLockPin
   * @return the current {@code Passcodes} instance, allowing for method chaining
   */
  public Passcodes screenLockPin(String screenLockPin) {
    this.screenLockPin = screenLockPin;
    return this;
  }

  /**
   * The passcode to unlock the terminal screen after a timeout.
   * @return screenLockPin
   */
  @ApiModelProperty(value = "The passcode to unlock the terminal screen after a timeout.")
  @JsonProperty(JSON_PROPERTY_SCREEN_LOCK_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getScreenLockPin() {
    return screenLockPin;
  }

  /**
   * The passcode to unlock the terminal screen after a timeout.
   *
   * @param screenLockPin
   */ 
  @JsonProperty(JSON_PROPERTY_SCREEN_LOCK_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScreenLockPin(String screenLockPin) {
    this.screenLockPin = screenLockPin;
  }

  /**
   * The passcode for the Transactions menu.
   *
   * @param txMenuPin
   * @return the current {@code Passcodes} instance, allowing for method chaining
   */
  public Passcodes txMenuPin(String txMenuPin) {
    this.txMenuPin = txMenuPin;
    return this;
  }

  /**
   * The passcode for the Transactions menu.
   * @return txMenuPin
   */
  @ApiModelProperty(value = "The passcode for the Transactions menu.")
  @JsonProperty(JSON_PROPERTY_TX_MENU_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTxMenuPin() {
    return txMenuPin;
  }

  /**
   * The passcode for the Transactions menu.
   *
   * @param txMenuPin
   */ 
  @JsonProperty(JSON_PROPERTY_TX_MENU_PIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTxMenuPin(String txMenuPin) {
    this.txMenuPin = txMenuPin;
  }

  /**
   * Return true if this Passcodes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Passcodes passcodes = (Passcodes) o;
    return Objects.equals(this.adminMenuPin, passcodes.adminMenuPin) &&
        Objects.equals(this.refundPin, passcodes.refundPin) &&
        Objects.equals(this.screenLockPin, passcodes.screenLockPin) &&
        Objects.equals(this.txMenuPin, passcodes.txMenuPin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminMenuPin, refundPin, screenLockPin, txMenuPin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Passcodes {\n");
    sb.append("    adminMenuPin: ").append(toIndentedString(adminMenuPin)).append("\n");
    sb.append("    refundPin: ").append(toIndentedString(refundPin)).append("\n");
    sb.append("    screenLockPin: ").append(toIndentedString(screenLockPin)).append("\n");
    sb.append("    txMenuPin: ").append(toIndentedString(txMenuPin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of Passcodes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Passcodes
   * @throws JsonProcessingException if the JSON string is invalid with respect to Passcodes
   */
  public static Passcodes fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, Passcodes.class);
  }
/**
  * Convert an instance of Passcodes to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
