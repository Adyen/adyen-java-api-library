/*
 * Management API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.management;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;

/** PayByBankPlaidInfo */
@JsonPropertyOrder({
  PayByBankPlaidInfo.JSON_PROPERTY_LOGO,
  PayByBankPlaidInfo.JSON_PROPERTY_TRANSACTION_DESCRIPTION
})
public class PayByBankPlaidInfo {
  public static final String JSON_PROPERTY_LOGO = "logo";
  private String logo;

  public static final String JSON_PROPERTY_TRANSACTION_DESCRIPTION = "transactionDescription";
  private TransactionDescriptionInfo transactionDescription;

  public PayByBankPlaidInfo() {}

  /**
   * Merchant logo (max. size 150kB). Format: Base64-encoded string.
   *
   * @param logo Merchant logo (max. size 150kB). Format: Base64-encoded string.
   * @return the current {@code PayByBankPlaidInfo} instance, allowing for method chaining
   */
  public PayByBankPlaidInfo logo(String logo) {
    this.logo = logo;
    return this;
  }

  /**
   * Merchant logo (max. size 150kB). Format: Base64-encoded string.
   *
   * @return logo Merchant logo (max. size 150kB). Format: Base64-encoded string.
   */
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLogo() {
    return logo;
  }

  /**
   * Merchant logo (max. size 150kB). Format: Base64-encoded string.
   *
   * @param logo Merchant logo (max. size 150kB). Format: Base64-encoded string.
   */
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogo(String logo) {
    this.logo = logo;
  }

  /**
   * transactionDescription
   *
   * @param transactionDescription
   * @return the current {@code PayByBankPlaidInfo} instance, allowing for method chaining
   */
  public PayByBankPlaidInfo transactionDescription(
      TransactionDescriptionInfo transactionDescription) {
    this.transactionDescription = transactionDescription;
    return this;
  }

  /**
   * Get transactionDescription
   *
   * @return transactionDescription
   */
  @JsonProperty(JSON_PROPERTY_TRANSACTION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TransactionDescriptionInfo getTransactionDescription() {
    return transactionDescription;
  }

  /**
   * transactionDescription
   *
   * @param transactionDescription
   */
  @JsonProperty(JSON_PROPERTY_TRANSACTION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionDescription(TransactionDescriptionInfo transactionDescription) {
    this.transactionDescription = transactionDescription;
  }

  /** Return true if this PayByBankPlaidInfo object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayByBankPlaidInfo payByBankPlaidInfo = (PayByBankPlaidInfo) o;
    return Objects.equals(this.logo, payByBankPlaidInfo.logo)
        && Objects.equals(this.transactionDescription, payByBankPlaidInfo.transactionDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logo, transactionDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayByBankPlaidInfo {\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    transactionDescription: ")
        .append(toIndentedString(transactionDescription))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of PayByBankPlaidInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PayByBankPlaidInfo
   * @throws JsonProcessingException if the JSON string is invalid with respect to
   *     PayByBankPlaidInfo
   */
  public static PayByBankPlaidInfo fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PayByBankPlaidInfo.class);
  }

  /**
   * Convert an instance of PayByBankPlaidInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
