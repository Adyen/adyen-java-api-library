/*
 * Management API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.management;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;

/** Refunds */
@JsonPropertyOrder({Refunds.JSON_PROPERTY_REFERENCED, Refunds.JSON_PROPERTY_UNREFERENCED})
public class Refunds {
  public static final String JSON_PROPERTY_REFERENCED = "referenced";
  private Referenced referenced;

  public static final String JSON_PROPERTY_UNREFERENCED = "unreferenced";
  private Unreferenced unreferenced;

  public Refunds() {}

  /**
   * referenced
   *
   * @param referenced
   * @return the current {@code Refunds} instance, allowing for method chaining
   */
  public Refunds referenced(Referenced referenced) {
    this.referenced = referenced;
    return this;
  }

  /**
   * Get referenced
   *
   * @return referenced
   */
  @JsonProperty(JSON_PROPERTY_REFERENCED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Referenced getReferenced() {
    return referenced;
  }

  /**
   * referenced
   *
   * @param referenced
   */
  @JsonProperty(JSON_PROPERTY_REFERENCED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenced(Referenced referenced) {
    this.referenced = referenced;
  }

  /**
   * unreferenced
   *
   * @param unreferenced
   * @return the current {@code Refunds} instance, allowing for method chaining
   */
  public Refunds unreferenced(Unreferenced unreferenced) {
    this.unreferenced = unreferenced;
    return this;
  }

  /**
   * Get unreferenced
   *
   * @return unreferenced
   */
  @JsonProperty(JSON_PROPERTY_UNREFERENCED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Unreferenced getUnreferenced() {
    return unreferenced;
  }

  /**
   * unreferenced
   *
   * @param unreferenced
   */
  @JsonProperty(JSON_PROPERTY_UNREFERENCED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnreferenced(Unreferenced unreferenced) {
    this.unreferenced = unreferenced;
  }

  /** Return true if this Refunds object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Refunds refunds = (Refunds) o;
    return Objects.equals(this.referenced, refunds.referenced)
        && Objects.equals(this.unreferenced, refunds.unreferenced);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenced, unreferenced);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Refunds {\n");
    sb.append("    referenced: ").append(toIndentedString(referenced)).append("\n");
    sb.append("    unreferenced: ").append(toIndentedString(unreferenced)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of Refunds given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Refunds
   * @throws JsonProcessingException if the JSON string is invalid with respect to Refunds
   */
  public static Refunds fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, Refunds.class);
  }

  /**
   * Convert an instance of Refunds to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
