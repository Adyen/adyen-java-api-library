/*
 * Adyen Wherever People Pay
 * This is the Adyen API Playground where you can test our API's. <br /><br />You can find out more about Adyen      at <a href=\"http://www.adyen.com\">http://www.adyen.com</a>.  <!--For this sample, you can use the api key \"special-key\" to test the authorization filters.-->
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.adyen.model;

import com.google.gson.annotations.SerializedName;
import org.joda.time.LocalDate;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * RecurringDetail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-14T08:41:23.938Z")
public class RecurringDetail {
  @SerializedName("name")
  private String name = null;

  @SerializedName("creationDate")
  private LocalDate creationDate = null;

  @SerializedName("card")
  private Card card = null;

  @SerializedName("elv")
  private ELV elv = null;

  @SerializedName("billingAddress")
  private Address billingAddress = null;

  @SerializedName("additionalData")
  private String additionalData = null;

  @SerializedName("shopperName")
  private Name shopperName = null;

  @SerializedName("socialSecurityNumber")
  private String socialSecurityNumber = null;

  @SerializedName("recurringDetailReference")
  private String recurringDetailReference = null;

  @SerializedName("bank")
  private BankAccount bank = null;

  @SerializedName("alias")
  private String alias = null;

  @SerializedName("aliasType")
  private String aliasType = null;

  @SerializedName("tokenDetails")
  private TokenDetails tokenDetails = null;

  @SerializedName("variant")
  private String variant = null;

  @SerializedName("paymentMethodVariant")
  private String paymentMethodVariant = null;

  @SerializedName("firstPspReference")
  private String firstPspReference = null;

  @SerializedName("contractTypes")
  private List<String> contractTypes = new ArrayList<String>();

  @SerializedName("acquirer")
  private String acquirer = null;

  @SerializedName("acquirerAccount")
  private String acquirerAccount = null;

  public RecurringDetail name(String name) {
    this.name = name;
    return this;
  }

   /**
   * An optional descriptive name for this recurring detail
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RecurringDetail creationDate(LocalDate creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  public LocalDate getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(LocalDate creationDate) {
    this.creationDate = creationDate;
  }

  public RecurringDetail card(Card card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  public Card getCard() {
    return card;
  }

  public void setCard(Card card) {
    this.card = card;
  }

  public RecurringDetail elv(ELV elv) {
    this.elv = elv;
    return this;
  }

   /**
   * Get elv
   * @return elv
  **/
  public ELV getElv() {
    return elv;
  }

  public void setElv(ELV elv) {
    this.elv = elv;
  }

  public RecurringDetail billingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  public Address getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
  }

  public RecurringDetail additionalData(String additionalData) {
    this.additionalData = additionalData;
    return this;
  }

   /**
   * Get additionalData
   * @return additionalData
  **/
  public String getAdditionalData() {
    return additionalData;
  }

  public void setAdditionalData(String additionalData) {
    this.additionalData = additionalData;
  }

  public RecurringDetail shopperName(Name shopperName) {
    this.shopperName = shopperName;
    return this;
  }

   /**
   * Get shopperName
   * @return shopperName
  **/
  public Name getShopperName() {
    return shopperName;
  }

  public void setShopperName(Name shopperName) {
    this.shopperName = shopperName;
  }

  public RecurringDetail socialSecurityNumber(String socialSecurityNumber) {
    this.socialSecurityNumber = socialSecurityNumber;
    return this;
  }

   /**
   * Get socialSecurityNumber
   * @return socialSecurityNumber
  **/
  public String getSocialSecurityNumber() {
    return socialSecurityNumber;
  }

  public void setSocialSecurityNumber(String socialSecurityNumber) {
    this.socialSecurityNumber = socialSecurityNumber;
  }

  public RecurringDetail recurringDetailReference(String recurringDetailReference) {
    this.recurringDetailReference = recurringDetailReference;
    return this;
  }

   /**
   * The reference that uniquely identifies the recurring detail
   * @return recurringDetailReference
  **/
  public String getRecurringDetailReference() {
    return recurringDetailReference;
  }

  public void setRecurringDetailReference(String recurringDetailReference) {
    this.recurringDetailReference = recurringDetailReference;
  }

  public RecurringDetail bank(BankAccount bank) {
    this.bank = bank;
    return this;
  }

   /**
   * Get bank
   * @return bank
  **/
  public BankAccount getBank() {
    return bank;
  }

  public void setBank(BankAccount bank) {
    this.bank = bank;
  }

  public RecurringDetail alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public RecurringDetail aliasType(String aliasType) {
    this.aliasType = aliasType;
    return this;
  }

   /**
   * Get aliasType
   * @return aliasType
  **/
  public String getAliasType() {
    return aliasType;
  }

  public void setAliasType(String aliasType) {
    this.aliasType = aliasType;
  }

  public RecurringDetail tokenDetails(TokenDetails tokenDetails) {
    this.tokenDetails = tokenDetails;
    return this;
  }

   /**
   * Get tokenDetails
   * @return tokenDetails
  **/
  public TokenDetails getTokenDetails() {
    return tokenDetails;
  }

  public void setTokenDetails(TokenDetails tokenDetails) {
    this.tokenDetails = tokenDetails;
  }

  public RecurringDetail variant(String variant) {
    this.variant = variant;
    return this;
  }

   /**
   * Get variant
   * @return variant
  **/
  public String getVariant() {
    return variant;
  }

  public void setVariant(String variant) {
    this.variant = variant;
  }

  public RecurringDetail paymentMethodVariant(String paymentMethodVariant) {
    this.paymentMethodVariant = paymentMethodVariant;
    return this;
  }

   /**
   * Get paymentMethodVariant
   * @return paymentMethodVariant
  **/
  public String getPaymentMethodVariant() {
    return paymentMethodVariant;
  }

  public void setPaymentMethodVariant(String paymentMethodVariant) {
    this.paymentMethodVariant = paymentMethodVariant;
  }

  public RecurringDetail firstPspReference(String firstPspReference) {
    this.firstPspReference = firstPspReference;
    return this;
  }

   /**
   * Get firstPspReference
   * @return firstPspReference
  **/
  public String getFirstPspReference() {
    return firstPspReference;
  }

  public void setFirstPspReference(String firstPspReference) {
    this.firstPspReference = firstPspReference;
  }

  public RecurringDetail contractTypes(List<String> contractTypes) {
    this.contractTypes = contractTypes;
    return this;
  }

  public RecurringDetail addContractTypesItem(String contractTypesItem) {
    this.contractTypes.add(contractTypesItem);
    return this;
  }

   /**
   * Get contractTypes
   * @return contractTypes
  **/
  public List<String> getContractTypes() {
    return contractTypes;
  }

  public void setContractTypes(List<String> contractTypes) {
    this.contractTypes = contractTypes;
  }

  public RecurringDetail acquirer(String acquirer) {
    this.acquirer = acquirer;
    return this;
  }

   /**
   * Get acquirer
   * @return acquirer
  **/
  public String getAcquirer() {
    return acquirer;
  }

  public void setAcquirer(String acquirer) {
    this.acquirer = acquirer;
  }

  public RecurringDetail acquirerAccount(String acquirerAccount) {
    this.acquirerAccount = acquirerAccount;
    return this;
  }

   /**
   * Get acquirerAccount
   * @return acquirerAccount
  **/
  public String getAcquirerAccount() {
    return acquirerAccount;
  }

  public void setAcquirerAccount(String acquirerAccount) {
    this.acquirerAccount = acquirerAccount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecurringDetail recurringDetail = (RecurringDetail) o;
    return Objects.equals(this.name, recurringDetail.name) &&
        Objects.equals(this.creationDate, recurringDetail.creationDate) &&
        Objects.equals(this.card, recurringDetail.card) &&
        Objects.equals(this.elv, recurringDetail.elv) &&
        Objects.equals(this.billingAddress, recurringDetail.billingAddress) &&
        Objects.equals(this.additionalData, recurringDetail.additionalData) &&
        Objects.equals(this.shopperName, recurringDetail.shopperName) &&
        Objects.equals(this.socialSecurityNumber, recurringDetail.socialSecurityNumber) &&
        Objects.equals(this.recurringDetailReference, recurringDetail.recurringDetailReference) &&
        Objects.equals(this.bank, recurringDetail.bank) &&
        Objects.equals(this.alias, recurringDetail.alias) &&
        Objects.equals(this.aliasType, recurringDetail.aliasType) &&
        Objects.equals(this.tokenDetails, recurringDetail.tokenDetails) &&
        Objects.equals(this.variant, recurringDetail.variant) &&
        Objects.equals(this.paymentMethodVariant, recurringDetail.paymentMethodVariant) &&
        Objects.equals(this.firstPspReference, recurringDetail.firstPspReference) &&
        Objects.equals(this.contractTypes, recurringDetail.contractTypes) &&
        Objects.equals(this.acquirer, recurringDetail.acquirer) &&
        Objects.equals(this.acquirerAccount, recurringDetail.acquirerAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, creationDate, card, elv, billingAddress, additionalData, shopperName, socialSecurityNumber, recurringDetailReference, bank, alias, aliasType, tokenDetails, variant, paymentMethodVariant, firstPspReference, contractTypes, acquirer, acquirerAccount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecurringDetail {\n");

    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    elv: ").append(toIndentedString(elv)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    shopperName: ").append(toIndentedString(shopperName)).append("\n");
    sb.append("    socialSecurityNumber: ").append(toIndentedString(socialSecurityNumber)).append("\n");
    sb.append("    recurringDetailReference: ").append(toIndentedString(recurringDetailReference)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    aliasType: ").append(toIndentedString(aliasType)).append("\n");
    sb.append("    tokenDetails: ").append(toIndentedString(tokenDetails)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    paymentMethodVariant: ").append(toIndentedString(paymentMethodVariant)).append("\n");
    sb.append("    firstPspReference: ").append(toIndentedString(firstPspReference)).append("\n");
    sb.append("    contractTypes: ").append(toIndentedString(contractTypes)).append("\n");
    sb.append("    acquirer: ").append(toIndentedString(acquirer)).append("\n");
    sb.append("    acquirerAccount: ").append(toIndentedString(acquirerAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

