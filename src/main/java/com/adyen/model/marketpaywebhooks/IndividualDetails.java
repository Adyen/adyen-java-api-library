/*
 * Classic Platforms - Notifications
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.marketpaywebhooks;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.marketpaywebhooks.ViasName;
import com.adyen.model.marketpaywebhooks.ViasPersonalData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * IndividualDetails
 */
@JsonPropertyOrder({
  IndividualDetails.JSON_PROPERTY_NAME,
  IndividualDetails.JSON_PROPERTY_PERSONAL_DATA
})

public class IndividualDetails {
  public static final String JSON_PROPERTY_NAME = "name";
  private ViasName name;

  public static final String JSON_PROPERTY_PERSONAL_DATA = "personalData";
  private ViasPersonalData personalData;

  public IndividualDetails() { 
  }

  public IndividualDetails name(ViasName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ViasName getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(ViasName name) {
    this.name = name;
  }


  public IndividualDetails personalData(ViasPersonalData personalData) {
    this.personalData = personalData;
    return this;
  }

   /**
   * Get personalData
   * @return personalData
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERSONAL_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ViasPersonalData getPersonalData() {
    return personalData;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalData(ViasPersonalData personalData) {
    this.personalData = personalData;
  }


  /**
   * Return true if this IndividualDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndividualDetails individualDetails = (IndividualDetails) o;
    return Objects.equals(this.name, individualDetails.name) &&
        Objects.equals(this.personalData, individualDetails.personalData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, personalData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndividualDetails {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    personalData: ").append(toIndentedString(personalData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of IndividualDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IndividualDetails
   * @throws JsonProcessingException if the JSON string is invalid with respect to IndividualDetails
   */
  public static IndividualDetails fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, IndividualDetails.class);
  }
/**
  * Convert an instance of IndividualDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}

