
package com.adyen.model.nexo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DocumentQualifierEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DocumentQualifierEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="SaleReceipt"/>
 *     &lt;enumeration value="CashierReceipt"/>
 *     &lt;enumeration value="CustomerReceipt"/>
 *     &lt;enumeration value="Document"/>
 *     &lt;enumeration value="Voucher"/>
 *     &lt;enumeration value="Journal"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DocumentQualifierEnumeration")
@XmlEnum
public enum DocumentQualifierEnumeration {


    /**
     * Where the POI system print the Sale receipt when requested by the Sale Terminal.
     * 
     */
    @XmlEnumValue("SaleReceipt")
    SALE_RECEIPT("SaleReceipt"),

    /**
     * Where the Sale system print the Cashier copy of the Payment receipt when requested by the POI Terminal.
     * 
     */
    @XmlEnumValue("CashierReceipt")
    CASHIER_RECEIPT("CashierReceipt"),

    /**
     * Where you print the Customer Payment receipt that could be located on the Sale Terminal or in some cases a restricted Customer Sale ticket on the POI Terminal.
     * 
     */
    @XmlEnumValue("CustomerReceipt")
    CUSTOMER_RECEIPT("CustomerReceipt"),

    /**
     * When the POI System wants to print specific document (check, dynamic currency conversion ...).  Used by the Sale System when the printer is not located on the
     * 
     */
    @XmlEnumValue("Document")
    DOCUMENT("Document"),

    /**
     * Coupons, voucher or special ticket generated by the POI or the Sale System and to be printed.
     * 
     */
    @XmlEnumValue("Voucher")
    VOUCHER("Voucher"),

    /**
     * When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale
     * 
     */
    @XmlEnumValue("Journal")
    JOURNAL("Journal");
    private final String value;

    DocumentQualifierEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DocumentQualifierEnumeration fromValue(String v) {
        for (DocumentQualifierEnumeration c: DocumentQualifierEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
