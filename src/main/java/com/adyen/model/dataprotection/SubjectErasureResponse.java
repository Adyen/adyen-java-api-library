/*
 * Adyen Data Protection API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.dataprotection;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * SubjectErasureResponse
 */
@JsonPropertyOrder({
  SubjectErasureResponse.JSON_PROPERTY_RESULT
})

public class SubjectErasureResponse {
  /**
   * The result of this operation.
   */
  public enum ResultEnum {
    ACTIVE_RECURRING_TOKEN_EXISTS("ACTIVE_RECURRING_TOKEN_EXISTS"),
    
    ALREADY_PROCESSED("ALREADY_PROCESSED"),
    
    PAYMENT_NOT_FOUND("PAYMENT_NOT_FOUND"),
    
    SUCCESS("SUCCESS");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResultEnum fromValue(String value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESULT = "result";
  private ResultEnum result;

  public SubjectErasureResponse() { 
  }

  /**
   * The result of this operation.
   *
   * @param result
   * @return the current {@code SubjectErasureResponse} instance, allowing for method chaining
   */
  public SubjectErasureResponse result(ResultEnum result) {
    this.result = result;
    return this;
  }

  /**
   * The result of this operation.
   * @return result
   */
  @ApiModelProperty(value = "The result of this operation.")
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ResultEnum getResult() {
    return result;
  }

  /**
   * The result of this operation.
   *
   * @param result
   */ 
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResult(ResultEnum result) {
    this.result = result;
  }

  /**
   * Return true if this SubjectErasureResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubjectErasureResponse subjectErasureResponse = (SubjectErasureResponse) o;
    return Objects.equals(this.result, subjectErasureResponse.result);
  }

  @Override
  public int hashCode() {
    return Objects.hash(result);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubjectErasureResponse {\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of SubjectErasureResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SubjectErasureResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to SubjectErasureResponse
   */
  public static SubjectErasureResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, SubjectErasureResponse.class);
  }
/**
  * Convert an instance of SubjectErasureResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
