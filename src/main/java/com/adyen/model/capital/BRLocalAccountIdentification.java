/*
 * Capital API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.capital;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.capital.BankAccountIdentification;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * BRLocalAccountIdentification
 */
@JsonPropertyOrder({
  BRLocalAccountIdentification.JSON_PROPERTY_ACCOUNT_NUMBER,
  BRLocalAccountIdentification.JSON_PROPERTY_BANK_CODE,
  BRLocalAccountIdentification.JSON_PROPERTY_BRANCH_NUMBER,
  BRLocalAccountIdentification.JSON_PROPERTY_ISPB,
  BRLocalAccountIdentification.JSON_PROPERTY_TYPE
})

@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class BRLocalAccountIdentification extends BankAccountIdentification {
  public static final String JSON_PROPERTY_ACCOUNT_NUMBER = "accountNumber";
  private String accountNumber;

  public static final String JSON_PROPERTY_BANK_CODE = "bankCode";
  private String bankCode;

  public static final String JSON_PROPERTY_BRANCH_NUMBER = "branchNumber";
  private String branchNumber;

  public static final String JSON_PROPERTY_ISPB = "ispb";
  private String ispb;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type = "brLocal";

  public BRLocalAccountIdentification() { 
  }

  /**
   * The bank account number, without separators or whitespace.
   *
   * @param accountNumber
   * @return the current {@code BRLocalAccountIdentification} instance, allowing for method chaining
   */
  public BRLocalAccountIdentification accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

  /**
   * The bank account number, without separators or whitespace.
   * @return accountNumber
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAccountNumber() {
    return accountNumber;
  }

  /**
   * The bank account number, without separators or whitespace.
   *
   * @param accountNumber
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  /**
   * The 3-digit bank code, with leading zeros.
   *
   * @param bankCode
   * @return the current {@code BRLocalAccountIdentification} instance, allowing for method chaining
   */
  public BRLocalAccountIdentification bankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

  /**
   * The 3-digit bank code, with leading zeros.
   * @return bankCode
   */
  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBankCode() {
    return bankCode;
  }

  /**
   * The 3-digit bank code, with leading zeros.
   *
   * @param bankCode
   */
  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankCode(String bankCode) {
    this.bankCode = bankCode;
  }

  /**
   * The bank account branch number, without separators or whitespace.
   *
   * @param branchNumber
   * @return the current {@code BRLocalAccountIdentification} instance, allowing for method chaining
   */
  public BRLocalAccountIdentification branchNumber(String branchNumber) {
    this.branchNumber = branchNumber;
    return this;
  }

  /**
   * The bank account branch number, without separators or whitespace.
   * @return branchNumber
   */
  @JsonProperty(JSON_PROPERTY_BRANCH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBranchNumber() {
    return branchNumber;
  }

  /**
   * The bank account branch number, without separators or whitespace.
   *
   * @param branchNumber
   */
  @JsonProperty(JSON_PROPERTY_BRANCH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchNumber(String branchNumber) {
    this.branchNumber = branchNumber;
  }

  /**
   * The 8-digit ISPB, with leading zeros.
   *
   * @param ispb
   * @return the current {@code BRLocalAccountIdentification} instance, allowing for method chaining
   */
  public BRLocalAccountIdentification ispb(String ispb) {
    this.ispb = ispb;
    return this;
  }

  /**
   * The 8-digit ISPB, with leading zeros.
   * @return ispb
   */
  @JsonProperty(JSON_PROPERTY_ISPB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getIspb() {
    return ispb;
  }

  /**
   * The 8-digit ISPB, with leading zeros.
   *
   * @param ispb
   */
  @JsonProperty(JSON_PROPERTY_ISPB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIspb(String ispb) {
    this.ispb = ispb;
  }

  /**
   * **brLocal**
   *
   * @param type
   * @return the current {@code BRLocalAccountIdentification} instance, allowing for method chaining
   */
  public BRLocalAccountIdentification type(String type) {
    this.type = type;
    return this;
  }

  /**
   * **brLocal**
   * @return type
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getType() {
    return type;
  }

  /**
   * **brLocal**
   *
   * @param type
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Return true if this BRLocalAccountIdentification object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BRLocalAccountIdentification brLocalAccountIdentification = (BRLocalAccountIdentification) o;
    return Objects.equals(this.accountNumber, brLocalAccountIdentification.accountNumber) &&
        Objects.equals(this.bankCode, brLocalAccountIdentification.bankCode) &&
        Objects.equals(this.branchNumber, brLocalAccountIdentification.branchNumber) &&
        Objects.equals(this.ispb, brLocalAccountIdentification.ispb) &&
        Objects.equals(this.type, brLocalAccountIdentification.type) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumber, bankCode, branchNumber, ispb, type, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BRLocalAccountIdentification {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    branchNumber: ").append(toIndentedString(branchNumber)).append("\n");
    sb.append("    ispb: ").append(toIndentedString(ispb)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  static {
    // Initialize and register the discriminator mappings.
    Map<String, Class<?>> mappings = new HashMap<>();
    mappings.put("BRLocalAccountIdentification", BRLocalAccountIdentification.class);
    JSON.registerDiscriminator(BRLocalAccountIdentification.class, "type", mappings);
  }
/**
   * Create an instance of BRLocalAccountIdentification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BRLocalAccountIdentification
   * @throws JsonProcessingException if the JSON string is invalid with respect to BRLocalAccountIdentification
   */
  public static BRLocalAccountIdentification fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, BRLocalAccountIdentification.class);
  }
/**
  * Convert an instance of BRLocalAccountIdentification to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
