/*
 * Capital API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.capital;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.capital.Amount;
import com.adyen.model.capital.Balance;
import com.adyen.model.capital.DisbursementRepayment;
import com.adyen.model.capital.Fee;
import com.adyen.model.capital.FundsCollection;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Disbursement
 */
@JsonPropertyOrder({
  Disbursement.JSON_PROPERTY_ACCOUNT_HOLDER_ID,
  Disbursement.JSON_PROPERTY_AMOUNT,
  Disbursement.JSON_PROPERTY_BALANCE_ACCOUNT_ID,
  Disbursement.JSON_PROPERTY_BALANCES,
  Disbursement.JSON_PROPERTY_FEE,
  Disbursement.JSON_PROPERTY_FUNDS_COLLECTIONS,
  Disbursement.JSON_PROPERTY_GRANT_ID,
  Disbursement.JSON_PROPERTY_ID,
  Disbursement.JSON_PROPERTY_REPAYMENT
})

public class Disbursement {
  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_ID = "accountHolderId";
  private String accountHolderId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Amount amount;

  public static final String JSON_PROPERTY_BALANCE_ACCOUNT_ID = "balanceAccountId";
  private String balanceAccountId;

  public static final String JSON_PROPERTY_BALANCES = "balances";
  private Balance balances;

  public static final String JSON_PROPERTY_FEE = "fee";
  private Fee fee;

  public static final String JSON_PROPERTY_FUNDS_COLLECTIONS = "fundsCollections";
  private List<FundsCollection> fundsCollections = new ArrayList<>();

  public static final String JSON_PROPERTY_GRANT_ID = "grantId";
  private String grantId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_REPAYMENT = "repayment";
  private DisbursementRepayment repayment;

  public Disbursement() { 
  }

  /**
   * The unique identifier of the account holder that received the disbursement.
   *
   * @param accountHolderId
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement accountHolderId(String accountHolderId) {
    this.accountHolderId = accountHolderId;
    return this;
  }

  /**
   * The unique identifier of the account holder that received the disbursement.
   * @return accountHolderId
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAccountHolderId() {
    return accountHolderId;
  }

  /**
   * The unique identifier of the account holder that received the disbursement.
   *
   * @param accountHolderId
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountHolderId(String accountHolderId) {
    this.accountHolderId = accountHolderId;
  }

  /**
   * amount
   *
   * @param amount
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement amount(Amount amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Amount getAmount() {
    return amount;
  }

  /**
   * amount
   *
   * @param amount
   */
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(Amount amount) {
    this.amount = amount;
  }

  /**
   * The unique identifier of the balance account that received the disbursement.
   *
   * @param balanceAccountId
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement balanceAccountId(String balanceAccountId) {
    this.balanceAccountId = balanceAccountId;
    return this;
  }

  /**
   * The unique identifier of the balance account that received the disbursement.
   * @return balanceAccountId
   */
  @JsonProperty(JSON_PROPERTY_BALANCE_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBalanceAccountId() {
    return balanceAccountId;
  }

  /**
   * The unique identifier of the balance account that received the disbursement.
   *
   * @param balanceAccountId
   */
  @JsonProperty(JSON_PROPERTY_BALANCE_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalanceAccountId(String balanceAccountId) {
    this.balanceAccountId = balanceAccountId;
  }

  /**
   * balances
   *
   * @param balances
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement balances(Balance balances) {
    this.balances = balances;
    return this;
  }

  /**
   * Get balances
   * @return balances
   */
  @JsonProperty(JSON_PROPERTY_BALANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Balance getBalances() {
    return balances;
  }

  /**
   * balances
   *
   * @param balances
   */
  @JsonProperty(JSON_PROPERTY_BALANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalances(Balance balances) {
    this.balances = balances;
  }

  /**
   * fee
   *
   * @param fee
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement fee(Fee fee) {
    this.fee = fee;
    return this;
  }

  /**
   * Get fee
   * @return fee
   */
  @JsonProperty(JSON_PROPERTY_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Fee getFee() {
    return fee;
  }

  /**
   * fee
   *
   * @param fee
   */
  @JsonProperty(JSON_PROPERTY_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFee(Fee fee) {
    this.fee = fee;
  }

  /**
   * Contains information about the accounts that Adyen uses to collect funds related to repayments.
   *
   * @param fundsCollections
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement fundsCollections(List<FundsCollection> fundsCollections) {
    this.fundsCollections = fundsCollections;
    return this;
  }

  public Disbursement addFundsCollectionsItem(FundsCollection fundsCollectionsItem) {
    if (this.fundsCollections == null) {
      this.fundsCollections = new ArrayList<>();
    }
    this.fundsCollections.add(fundsCollectionsItem);
    return this;
  }

  /**
   * Contains information about the accounts that Adyen uses to collect funds related to repayments.
   * @return fundsCollections
   */
  @JsonProperty(JSON_PROPERTY_FUNDS_COLLECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<FundsCollection> getFundsCollections() {
    return fundsCollections;
  }

  /**
   * Contains information about the accounts that Adyen uses to collect funds related to repayments.
   *
   * @param fundsCollections
   */
  @JsonProperty(JSON_PROPERTY_FUNDS_COLLECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFundsCollections(List<FundsCollection> fundsCollections) {
    this.fundsCollections = fundsCollections;
  }

  /**
   * The unique identifier of the grant related to the disbursement.
   *
   * @param grantId
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement grantId(String grantId) {
    this.grantId = grantId;
    return this;
  }

  /**
   * The unique identifier of the grant related to the disbursement.
   * @return grantId
   */
  @JsonProperty(JSON_PROPERTY_GRANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getGrantId() {
    return grantId;
  }

  /**
   * The unique identifier of the grant related to the disbursement.
   *
   * @param grantId
   */
  @JsonProperty(JSON_PROPERTY_GRANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrantId(String grantId) {
    this.grantId = grantId;
  }

  /**
   * The unique identifier of the disbursement.
   *
   * @param id
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the disbursement.
   * @return id
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  /**
   * The unique identifier of the disbursement.
   *
   * @param id
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  /**
   * repayment
   *
   * @param repayment
   * @return the current {@code Disbursement} instance, allowing for method chaining
   */
  public Disbursement repayment(DisbursementRepayment repayment) {
    this.repayment = repayment;
    return this;
  }

  /**
   * Get repayment
   * @return repayment
   */
  @JsonProperty(JSON_PROPERTY_REPAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public DisbursementRepayment getRepayment() {
    return repayment;
  }

  /**
   * repayment
   *
   * @param repayment
   */
  @JsonProperty(JSON_PROPERTY_REPAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepayment(DisbursementRepayment repayment) {
    this.repayment = repayment;
  }

  /**
   * Return true if this Disbursement object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Disbursement disbursement = (Disbursement) o;
    return Objects.equals(this.accountHolderId, disbursement.accountHolderId) &&
        Objects.equals(this.amount, disbursement.amount) &&
        Objects.equals(this.balanceAccountId, disbursement.balanceAccountId) &&
        Objects.equals(this.balances, disbursement.balances) &&
        Objects.equals(this.fee, disbursement.fee) &&
        Objects.equals(this.fundsCollections, disbursement.fundsCollections) &&
        Objects.equals(this.grantId, disbursement.grantId) &&
        Objects.equals(this.id, disbursement.id) &&
        Objects.equals(this.repayment, disbursement.repayment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountHolderId, amount, balanceAccountId, balances, fee, fundsCollections, grantId, id, repayment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Disbursement {\n");
    sb.append("    accountHolderId: ").append(toIndentedString(accountHolderId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    balanceAccountId: ").append(toIndentedString(balanceAccountId)).append("\n");
    sb.append("    balances: ").append(toIndentedString(balances)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    fundsCollections: ").append(toIndentedString(fundsCollections)).append("\n");
    sb.append("    grantId: ").append(toIndentedString(grantId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    repayment: ").append(toIndentedString(repayment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of Disbursement given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Disbursement
   * @throws JsonProcessingException if the JSON string is invalid with respect to Disbursement
   */
  public static Disbursement fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, Disbursement.class);
  }
/**
  * Convert an instance of Disbursement to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
