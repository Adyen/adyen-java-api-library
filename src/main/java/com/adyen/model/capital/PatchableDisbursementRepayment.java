/*
 * Capital API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.capital;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PatchableDisbursementRepayment
 */
@JsonPropertyOrder({
  PatchableDisbursementRepayment.JSON_PROPERTY_BASIS_POINTS
})

public class PatchableDisbursementRepayment {
  public static final String JSON_PROPERTY_BASIS_POINTS = "basisPoints";
  private Integer basisPoints;

  public PatchableDisbursementRepayment() { 
  }

  /**
   * The percentage of your user&#39;s incoming net volume that is deducted for repaying the grant. The percentage expressed in [basis points](https://www.investopedia.com/terms/b/basispoint.asp).
   *
   * @param basisPoints
   * @return the current {@code PatchableDisbursementRepayment} instance, allowing for method chaining
   */
  public PatchableDisbursementRepayment basisPoints(Integer basisPoints) {
    this.basisPoints = basisPoints;
    return this;
  }

  /**
   * The percentage of your user&#39;s incoming net volume that is deducted for repaying the grant. The percentage expressed in [basis points](https://www.investopedia.com/terms/b/basispoint.asp).
   * minimum: 0
   * maximum: 10000
   * @return basisPoints
   */
  @JsonProperty(JSON_PROPERTY_BASIS_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getBasisPoints() {
    return basisPoints;
  }

  /**
   * The percentage of your user&#39;s incoming net volume that is deducted for repaying the grant. The percentage expressed in [basis points](https://www.investopedia.com/terms/b/basispoint.asp).
   *
   * @param basisPoints
   */
  @JsonProperty(JSON_PROPERTY_BASIS_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBasisPoints(Integer basisPoints) {
    this.basisPoints = basisPoints;
  }

  /**
   * Return true if this PatchableDisbursementRepayment object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchableDisbursementRepayment patchableDisbursementRepayment = (PatchableDisbursementRepayment) o;
    return Objects.equals(this.basisPoints, patchableDisbursementRepayment.basisPoints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basisPoints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchableDisbursementRepayment {\n");
    sb.append("    basisPoints: ").append(toIndentedString(basisPoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PatchableDisbursementRepayment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PatchableDisbursementRepayment
   * @throws JsonProcessingException if the JSON string is invalid with respect to PatchableDisbursementRepayment
   */
  public static PatchableDisbursementRepayment fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PatchableDisbursementRepayment.class);
  }
/**
  * Convert an instance of PatchableDisbursementRepayment to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
