/*
 * Capital API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.capital;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.capital.Balance;
import com.adyen.model.capital.GrantLimit;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * GrantAccount
 */
@JsonPropertyOrder({
  GrantAccount.JSON_PROPERTY_BALANCES,
  GrantAccount.JSON_PROPERTY_FUNDING_BALANCE_ACCOUNT_ID,
  GrantAccount.JSON_PROPERTY_ID,
  GrantAccount.JSON_PROPERTY_LIMITS
})

public class GrantAccount {
  public static final String JSON_PROPERTY_BALANCES = "balances";
  private List<Balance> balances = new ArrayList<>();

  public static final String JSON_PROPERTY_FUNDING_BALANCE_ACCOUNT_ID = "fundingBalanceAccountId";
  private String fundingBalanceAccountId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LIMITS = "limits";
  private List<GrantLimit> limits = new ArrayList<>();

  public GrantAccount() { 
  }

  /**
   * Contains the sum of the balances of all grants tracked by this grant account. The balances are separated by currency.
   *
   * @param balances
   * @return the current {@code GrantAccount} instance, allowing for method chaining
   */
  public GrantAccount balances(List<Balance> balances) {
    this.balances = balances;
    return this;
  }

  public GrantAccount addBalancesItem(Balance balancesItem) {
    if (this.balances == null) {
      this.balances = new ArrayList<>();
    }
    this.balances.add(balancesItem);
    return this;
  }

  /**
   * Contains the sum of the balances of all grants tracked by this grant account. The balances are separated by currency.
   * @return balances
   */
  @JsonProperty(JSON_PROPERTY_BALANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Balance> getBalances() {
    return balances;
  }

  /**
   * Contains the sum of the balances of all grants tracked by this grant account. The balances are separated by currency.
   *
   * @param balances
   */
  @JsonProperty(JSON_PROPERTY_BALANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalances(List<Balance> balances) {
    this.balances = balances;
  }

  /**
   * The unique identifier of the balance account used to fund the grant.
   *
   * @param fundingBalanceAccountId
   * @return the current {@code GrantAccount} instance, allowing for method chaining
   */
  public GrantAccount fundingBalanceAccountId(String fundingBalanceAccountId) {
    this.fundingBalanceAccountId = fundingBalanceAccountId;
    return this;
  }

  /**
   * The unique identifier of the balance account used to fund the grant.
   * @return fundingBalanceAccountId
   */
  @JsonProperty(JSON_PROPERTY_FUNDING_BALANCE_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getFundingBalanceAccountId() {
    return fundingBalanceAccountId;
  }

  /**
   * The unique identifier of the balance account used to fund the grant.
   *
   * @param fundingBalanceAccountId
   */
  @JsonProperty(JSON_PROPERTY_FUNDING_BALANCE_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFundingBalanceAccountId(String fundingBalanceAccountId) {
    this.fundingBalanceAccountId = fundingBalanceAccountId;
  }

  /**
   * The unique identifier of the grant account.
   *
   * @param id
   * @return the current {@code GrantAccount} instance, allowing for method chaining
   */
  public GrantAccount id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the grant account.
   * @return id
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  /**
   * The unique identifier of the grant account.
   *
   * @param id
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Contains the maximum amount of funds that you can disburse for grants.
   *
   * @param limits
   * @return the current {@code GrantAccount} instance, allowing for method chaining
   */
  public GrantAccount limits(List<GrantLimit> limits) {
    this.limits = limits;
    return this;
  }

  public GrantAccount addLimitsItem(GrantLimit limitsItem) {
    if (this.limits == null) {
      this.limits = new ArrayList<>();
    }
    this.limits.add(limitsItem);
    return this;
  }

  /**
   * Contains the maximum amount of funds that you can disburse for grants.
   * @return limits
   */
  @JsonProperty(JSON_PROPERTY_LIMITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<GrantLimit> getLimits() {
    return limits;
  }

  /**
   * Contains the maximum amount of funds that you can disburse for grants.
   *
   * @param limits
   */
  @JsonProperty(JSON_PROPERTY_LIMITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimits(List<GrantLimit> limits) {
    this.limits = limits;
  }

  /**
   * Return true if this GrantAccount object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GrantAccount grantAccount = (GrantAccount) o;
    return Objects.equals(this.balances, grantAccount.balances) &&
        Objects.equals(this.fundingBalanceAccountId, grantAccount.fundingBalanceAccountId) &&
        Objects.equals(this.id, grantAccount.id) &&
        Objects.equals(this.limits, grantAccount.limits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balances, fundingBalanceAccountId, id, limits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GrantAccount {\n");
    sb.append("    balances: ").append(toIndentedString(balances)).append("\n");
    sb.append("    fundingBalanceAccountId: ").append(toIndentedString(fundingBalanceAccountId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of GrantAccount given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GrantAccount
   * @throws JsonProcessingException if the JSON string is invalid with respect to GrantAccount
   */
  public static GrantAccount fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, GrantAccount.class);
  }
/**
  * Convert an instance of GrantAccount to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
