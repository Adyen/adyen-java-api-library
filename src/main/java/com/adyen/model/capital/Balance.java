/*
 * Capital API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.capital;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Balance
 */
@JsonPropertyOrder({
  Balance.JSON_PROPERTY_CURRENCY,
  Balance.JSON_PROPERTY_FEE,
  Balance.JSON_PROPERTY_PRINCIPAL,
  Balance.JSON_PROPERTY_TOTAL
})

public class Balance {
  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_FEE = "fee";
  private Long fee;

  public static final String JSON_PROPERTY_PRINCIPAL = "principal";
  private Long principal;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Long total;

  public Balance() { 
  }

  /**
   * The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
   *
   * @param currency
   * @return the current {@code Balance} instance, allowing for method chaining
   */
  public Balance currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
   * @return currency
   */
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCurrency() {
    return currency;
  }

  /**
   * The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
   *
   * @param currency
   */
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }

  /**
   * The amount of the grant fee.
   *
   * @param fee
   * @return the current {@code Balance} instance, allowing for method chaining
   */
  public Balance fee(Long fee) {
    this.fee = fee;
    return this;
  }

  /**
   * The amount of the grant fee.
   * @return fee
   */
  @JsonProperty(JSON_PROPERTY_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getFee() {
    return fee;
  }

  /**
   * The amount of the grant fee.
   *
   * @param fee
   */
  @JsonProperty(JSON_PROPERTY_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFee(Long fee) {
    this.fee = fee;
  }

  /**
   * The grant amount that is paid out to the user for business financing.
   *
   * @param principal
   * @return the current {@code Balance} instance, allowing for method chaining
   */
  public Balance principal(Long principal) {
    this.principal = principal;
    return this;
  }

  /**
   * The grant amount that is paid out to the user for business financing.
   * @return principal
   */
  @JsonProperty(JSON_PROPERTY_PRINCIPAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getPrincipal() {
    return principal;
  }

  /**
   * The grant amount that is paid out to the user for business financing.
   *
   * @param principal
   */
  @JsonProperty(JSON_PROPERTY_PRINCIPAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrincipal(Long principal) {
    this.principal = principal;
  }

  /**
   * The total amount of the grant that the user must repay. It is the sum of the fee amount and the principal amount.
   *
   * @param total
   * @return the current {@code Balance} instance, allowing for method chaining
   */
  public Balance total(Long total) {
    this.total = total;
    return this;
  }

  /**
   * The total amount of the grant that the user must repay. It is the sum of the fee amount and the principal amount.
   * @return total
   */
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getTotal() {
    return total;
  }

  /**
   * The total amount of the grant that the user must repay. It is the sum of the fee amount and the principal amount.
   *
   * @param total
   */
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(Long total) {
    this.total = total;
  }

  /**
   * Return true if this Balance object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Balance balance = (Balance) o;
    return Objects.equals(this.currency, balance.currency) &&
        Objects.equals(this.fee, balance.fee) &&
        Objects.equals(this.principal, balance.principal) &&
        Objects.equals(this.total, balance.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, fee, principal, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Balance {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    principal: ").append(toIndentedString(principal)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of Balance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Balance
   * @throws JsonProcessingException if the JSON string is invalid with respect to Balance
   */
  public static Balance fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, Balance.class);
  }
/**
  * Convert an instance of Balance to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
