/*
 * Adyen Checkout API
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.checkout;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * ResponseAdditionalDataSepa
 */
@JsonPropertyOrder({
  ResponseAdditionalDataSepa.JSON_PROPERTY_SEPADIRECTDEBIT_DATE_OF_SIGNATURE,
  ResponseAdditionalDataSepa.JSON_PROPERTY_SEPADIRECTDEBIT_MANDATE_ID,
  ResponseAdditionalDataSepa.JSON_PROPERTY_SEPADIRECTDEBIT_SEQUENCE_TYPE
})

public class ResponseAdditionalDataSepa {
  public static final String JSON_PROPERTY_SEPADIRECTDEBIT_DATE_OF_SIGNATURE = "sepadirectdebit.dateOfSignature";
  private String sepadirectdebitDateOfSignature;

  public static final String JSON_PROPERTY_SEPADIRECTDEBIT_MANDATE_ID = "sepadirectdebit.mandateId";
  private String sepadirectdebitMandateId;

  public static final String JSON_PROPERTY_SEPADIRECTDEBIT_SEQUENCE_TYPE = "sepadirectdebit.sequenceType";
  private String sepadirectdebitSequenceType;

  public ResponseAdditionalDataSepa() { 
  }

  /**
   * The transaction signature date.  Format: yyyy-MM-dd
   *
   * @param sepadirectdebitDateOfSignature
   * @return the current {@code ResponseAdditionalDataSepa} instance, allowing for method chaining
   */
  public ResponseAdditionalDataSepa sepadirectdebitDateOfSignature(String sepadirectdebitDateOfSignature) {
    this.sepadirectdebitDateOfSignature = sepadirectdebitDateOfSignature;
    return this;
  }

  /**
   * The transaction signature date.  Format: yyyy-MM-dd
   * @return sepadirectdebitDateOfSignature
   */
  @ApiModelProperty(value = "The transaction signature date.  Format: yyyy-MM-dd")
  @JsonProperty(JSON_PROPERTY_SEPADIRECTDEBIT_DATE_OF_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSepadirectdebitDateOfSignature() {
    return sepadirectdebitDateOfSignature;
  }

  /**
   * The transaction signature date.  Format: yyyy-MM-dd
   *
   * @param sepadirectdebitDateOfSignature
   */ 
  @JsonProperty(JSON_PROPERTY_SEPADIRECTDEBIT_DATE_OF_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSepadirectdebitDateOfSignature(String sepadirectdebitDateOfSignature) {
    this.sepadirectdebitDateOfSignature = sepadirectdebitDateOfSignature;
  }

  /**
   * Its value corresponds to the pspReference value of the transaction.
   *
   * @param sepadirectdebitMandateId
   * @return the current {@code ResponseAdditionalDataSepa} instance, allowing for method chaining
   */
  public ResponseAdditionalDataSepa sepadirectdebitMandateId(String sepadirectdebitMandateId) {
    this.sepadirectdebitMandateId = sepadirectdebitMandateId;
    return this;
  }

  /**
   * Its value corresponds to the pspReference value of the transaction.
   * @return sepadirectdebitMandateId
   */
  @ApiModelProperty(value = "Its value corresponds to the pspReference value of the transaction.")
  @JsonProperty(JSON_PROPERTY_SEPADIRECTDEBIT_MANDATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSepadirectdebitMandateId() {
    return sepadirectdebitMandateId;
  }

  /**
   * Its value corresponds to the pspReference value of the transaction.
   *
   * @param sepadirectdebitMandateId
   */ 
  @JsonProperty(JSON_PROPERTY_SEPADIRECTDEBIT_MANDATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSepadirectdebitMandateId(String sepadirectdebitMandateId) {
    this.sepadirectdebitMandateId = sepadirectdebitMandateId;
  }

  /**
   * This field can take one of the following values: * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.  * First: (FRST) Initial/first collection in a series of direct debit instructions. * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor. * Final: (FNAL) Last/final collection in a series of direct debit instructions.  Example: OOFF
   *
   * @param sepadirectdebitSequenceType
   * @return the current {@code ResponseAdditionalDataSepa} instance, allowing for method chaining
   */
  public ResponseAdditionalDataSepa sepadirectdebitSequenceType(String sepadirectdebitSequenceType) {
    this.sepadirectdebitSequenceType = sepadirectdebitSequenceType;
    return this;
  }

  /**
   * This field can take one of the following values: * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.  * First: (FRST) Initial/first collection in a series of direct debit instructions. * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor. * Final: (FNAL) Last/final collection in a series of direct debit instructions.  Example: OOFF
   * @return sepadirectdebitSequenceType
   */
  @ApiModelProperty(value = "This field can take one of the following values: * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.  * First: (FRST) Initial/first collection in a series of direct debit instructions. * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor. * Final: (FNAL) Last/final collection in a series of direct debit instructions.  Example: OOFF")
  @JsonProperty(JSON_PROPERTY_SEPADIRECTDEBIT_SEQUENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSepadirectdebitSequenceType() {
    return sepadirectdebitSequenceType;
  }

  /**
   * This field can take one of the following values: * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.  * First: (FRST) Initial/first collection in a series of direct debit instructions. * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor. * Final: (FNAL) Last/final collection in a series of direct debit instructions.  Example: OOFF
   *
   * @param sepadirectdebitSequenceType
   */ 
  @JsonProperty(JSON_PROPERTY_SEPADIRECTDEBIT_SEQUENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSepadirectdebitSequenceType(String sepadirectdebitSequenceType) {
    this.sepadirectdebitSequenceType = sepadirectdebitSequenceType;
  }

  /**
   * Return true if this ResponseAdditionalDataSepa object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseAdditionalDataSepa responseAdditionalDataSepa = (ResponseAdditionalDataSepa) o;
    return Objects.equals(this.sepadirectdebitDateOfSignature, responseAdditionalDataSepa.sepadirectdebitDateOfSignature) &&
        Objects.equals(this.sepadirectdebitMandateId, responseAdditionalDataSepa.sepadirectdebitMandateId) &&
        Objects.equals(this.sepadirectdebitSequenceType, responseAdditionalDataSepa.sepadirectdebitSequenceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sepadirectdebitDateOfSignature, sepadirectdebitMandateId, sepadirectdebitSequenceType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseAdditionalDataSepa {\n");
    sb.append("    sepadirectdebitDateOfSignature: ").append(toIndentedString(sepadirectdebitDateOfSignature)).append("\n");
    sb.append("    sepadirectdebitMandateId: ").append(toIndentedString(sepadirectdebitMandateId)).append("\n");
    sb.append("    sepadirectdebitSequenceType: ").append(toIndentedString(sepadirectdebitSequenceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of ResponseAdditionalDataSepa given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResponseAdditionalDataSepa
   * @throws JsonProcessingException if the JSON string is invalid with respect to ResponseAdditionalDataSepa
   */
  public static ResponseAdditionalDataSepa fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, ResponseAdditionalDataSepa.class);
  }
/**
  * Convert an instance of ResponseAdditionalDataSepa to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
