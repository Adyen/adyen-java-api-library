/*
 * Adyen Checkout API
 *
 * The version of the OpenAPI document: 71
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.checkout;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;
import java.util.Arrays;
import java.util.logging.Logger;

/** EftDetails */
@JsonPropertyOrder({
  EftDetails.JSON_PROPERTY_BANK_ACCOUNT_NUMBER,
  EftDetails.JSON_PROPERTY_BANK_CODE,
  EftDetails.JSON_PROPERTY_BANK_LOCATION_ID,
  EftDetails.JSON_PROPERTY_CHECKOUT_ATTEMPT_ID,
  EftDetails.JSON_PROPERTY_OWNER_NAME,
  EftDetails.JSON_PROPERTY_RECURRING_DETAIL_REFERENCE,
  EftDetails.JSON_PROPERTY_STORED_PAYMENT_METHOD_ID,
  EftDetails.JSON_PROPERTY_TYPE
})
public class EftDetails {
  public static final String JSON_PROPERTY_BANK_ACCOUNT_NUMBER = "bankAccountNumber";
  private String bankAccountNumber;

  public static final String JSON_PROPERTY_BANK_CODE = "bankCode";
  private String bankCode;

  public static final String JSON_PROPERTY_BANK_LOCATION_ID = "bankLocationId";
  private String bankLocationId;

  public static final String JSON_PROPERTY_CHECKOUT_ATTEMPT_ID = "checkoutAttemptId";
  private String checkoutAttemptId;

  public static final String JSON_PROPERTY_OWNER_NAME = "ownerName";
  private String ownerName;

  public static final String JSON_PROPERTY_RECURRING_DETAIL_REFERENCE = "recurringDetailReference";
  @Deprecated // deprecated since Adyen Checkout API v49: Use `storedPaymentMethodId` instead.
  private String recurringDetailReference;

  public static final String JSON_PROPERTY_STORED_PAYMENT_METHOD_ID = "storedPaymentMethodId";
  private String storedPaymentMethodId;

  /** **eft** */
  public enum TypeEnum {
    EFT_DIRECTDEBIT_CA(String.valueOf("eft_directdebit_CA"));

    private static final Logger LOG = Logger.getLogger(TypeEnum.class.getName());

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      // handling unexpected value
      LOG.warning(
          "TypeEnum: unexpected enum value '"
              + value
              + "' - Supported values are "
              + Arrays.toString(TypeEnum.values()));
      return null;
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public EftDetails() {}

  /**
   * The bank account number (without separators).
   *
   * @param bankAccountNumber The bank account number (without separators).
   * @return the current {@code EftDetails} instance, allowing for method chaining
   */
  public EftDetails bankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
    return this;
  }

  /**
   * The bank account number (without separators).
   *
   * @return bankAccountNumber The bank account number (without separators).
   */
  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBankAccountNumber() {
    return bankAccountNumber;
  }

  /**
   * The bank account number (without separators).
   *
   * @param bankAccountNumber The bank account number (without separators).
   */
  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
  }

  /**
   * The financial institution code.
   *
   * @param bankCode The financial institution code.
   * @return the current {@code EftDetails} instance, allowing for method chaining
   */
  public EftDetails bankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

  /**
   * The financial institution code.
   *
   * @return bankCode The financial institution code.
   */
  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBankCode() {
    return bankCode;
  }

  /**
   * The financial institution code.
   *
   * @param bankCode The financial institution code.
   */
  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankCode(String bankCode) {
    this.bankCode = bankCode;
  }

  /**
   * The bank routing number of the account.
   *
   * @param bankLocationId The bank routing number of the account.
   * @return the current {@code EftDetails} instance, allowing for method chaining
   */
  public EftDetails bankLocationId(String bankLocationId) {
    this.bankLocationId = bankLocationId;
    return this;
  }

  /**
   * The bank routing number of the account.
   *
   * @return bankLocationId The bank routing number of the account.
   */
  @JsonProperty(JSON_PROPERTY_BANK_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBankLocationId() {
    return bankLocationId;
  }

  /**
   * The bank routing number of the account.
   *
   * @param bankLocationId The bank routing number of the account.
   */
  @JsonProperty(JSON_PROPERTY_BANK_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankLocationId(String bankLocationId) {
    this.bankLocationId = bankLocationId;
  }

  /**
   * The checkout attempt identifier.
   *
   * @param checkoutAttemptId The checkout attempt identifier.
   * @return the current {@code EftDetails} instance, allowing for method chaining
   */
  public EftDetails checkoutAttemptId(String checkoutAttemptId) {
    this.checkoutAttemptId = checkoutAttemptId;
    return this;
  }

  /**
   * The checkout attempt identifier.
   *
   * @return checkoutAttemptId The checkout attempt identifier.
   */
  @JsonProperty(JSON_PROPERTY_CHECKOUT_ATTEMPT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCheckoutAttemptId() {
    return checkoutAttemptId;
  }

  /**
   * The checkout attempt identifier.
   *
   * @param checkoutAttemptId The checkout attempt identifier.
   */
  @JsonProperty(JSON_PROPERTY_CHECKOUT_ATTEMPT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckoutAttemptId(String checkoutAttemptId) {
    this.checkoutAttemptId = checkoutAttemptId;
  }

  /**
   * The name of the bank account holder. If you submit a name with non-Latin characters, we
   * automatically replace some of them with corresponding Latin characters to meet the FATF
   * recommendations. For example: * χ12 is converted to ch12. * üA is converted to euA. * Peter
   * Møller is converted to Peter Mller, because banks don&#39;t accept &#39;ø&#39;. After
   * replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9),
   * and at least one of them must be a valid Latin character (A-Z, a-z). For example: * John17 -
   * allowed. * J17 - allowed. * 171 - not allowed. * John-7 - allowed. &gt; If provided details
   * don&#39;t match the required format, the response returns the error message: 203 &#39;Invalid
   * bank account holder name&#39;.
   *
   * @param ownerName The name of the bank account holder. If you submit a name with non-Latin
   *     characters, we automatically replace some of them with corresponding Latin characters to
   *     meet the FATF recommendations. For example: * χ12 is converted to ch12. * üA is converted
   *     to euA. * Peter Møller is converted to Peter Mller, because banks don&#39;t accept
   *     &#39;ø&#39;. After replacement, the ownerName must have at least three alphanumeric
   *     characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z,
   *     a-z). For example: * John17 - allowed. * J17 - allowed. * 171 - not allowed. * John-7 -
   *     allowed. &gt; If provided details don&#39;t match the required format, the response returns
   *     the error message: 203 &#39;Invalid bank account holder name&#39;.
   * @return the current {@code EftDetails} instance, allowing for method chaining
   */
  public EftDetails ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

  /**
   * The name of the bank account holder. If you submit a name with non-Latin characters, we
   * automatically replace some of them with corresponding Latin characters to meet the FATF
   * recommendations. For example: * χ12 is converted to ch12. * üA is converted to euA. * Peter
   * Møller is converted to Peter Mller, because banks don&#39;t accept &#39;ø&#39;. After
   * replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9),
   * and at least one of them must be a valid Latin character (A-Z, a-z). For example: * John17 -
   * allowed. * J17 - allowed. * 171 - not allowed. * John-7 - allowed. &gt; If provided details
   * don&#39;t match the required format, the response returns the error message: 203 &#39;Invalid
   * bank account holder name&#39;.
   *
   * @return ownerName The name of the bank account holder. If you submit a name with non-Latin
   *     characters, we automatically replace some of them with corresponding Latin characters to
   *     meet the FATF recommendations. For example: * χ12 is converted to ch12. * üA is converted
   *     to euA. * Peter Møller is converted to Peter Mller, because banks don&#39;t accept
   *     &#39;ø&#39;. After replacement, the ownerName must have at least three alphanumeric
   *     characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z,
   *     a-z). For example: * John17 - allowed. * J17 - allowed. * 171 - not allowed. * John-7 -
   *     allowed. &gt; If provided details don&#39;t match the required format, the response returns
   *     the error message: 203 &#39;Invalid bank account holder name&#39;.
   */
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOwnerName() {
    return ownerName;
  }

  /**
   * The name of the bank account holder. If you submit a name with non-Latin characters, we
   * automatically replace some of them with corresponding Latin characters to meet the FATF
   * recommendations. For example: * χ12 is converted to ch12. * üA is converted to euA. * Peter
   * Møller is converted to Peter Mller, because banks don&#39;t accept &#39;ø&#39;. After
   * replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9),
   * and at least one of them must be a valid Latin character (A-Z, a-z). For example: * John17 -
   * allowed. * J17 - allowed. * 171 - not allowed. * John-7 - allowed. &gt; If provided details
   * don&#39;t match the required format, the response returns the error message: 203 &#39;Invalid
   * bank account holder name&#39;.
   *
   * @param ownerName The name of the bank account holder. If you submit a name with non-Latin
   *     characters, we automatically replace some of them with corresponding Latin characters to
   *     meet the FATF recommendations. For example: * χ12 is converted to ch12. * üA is converted
   *     to euA. * Peter Møller is converted to Peter Mller, because banks don&#39;t accept
   *     &#39;ø&#39;. After replacement, the ownerName must have at least three alphanumeric
   *     characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z,
   *     a-z). For example: * John17 - allowed. * J17 - allowed. * 171 - not allowed. * John-7 -
   *     allowed. &gt; If provided details don&#39;t match the required format, the response returns
   *     the error message: 203 &#39;Invalid bank account holder name&#39;.
   */
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }

  /**
   * This is the &#x60;recurringDetailReference&#x60; returned in the response when you created the
   * token.
   *
   * @param recurringDetailReference This is the &#x60;recurringDetailReference&#x60; returned in
   *     the response when you created the token.
   * @return the current {@code EftDetails} instance, allowing for method chaining
   * @deprecated since Adyen Checkout API v49 Use &#x60;storedPaymentMethodId&#x60; instead.
   */
  @Deprecated // deprecated since Adyen Checkout API v49: Use `storedPaymentMethodId` instead.
  public EftDetails recurringDetailReference(String recurringDetailReference) {
    this.recurringDetailReference = recurringDetailReference;
    return this;
  }

  /**
   * This is the &#x60;recurringDetailReference&#x60; returned in the response when you created the
   * token.
   *
   * @return recurringDetailReference This is the &#x60;recurringDetailReference&#x60; returned in
   *     the response when you created the token.
   * @deprecated // deprecated since Adyen Checkout API v49: Use `storedPaymentMethodId` instead.
   */
  @Deprecated // deprecated since Adyen Checkout API v49: Use `storedPaymentMethodId` instead.
  @JsonProperty(JSON_PROPERTY_RECURRING_DETAIL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getRecurringDetailReference() {
    return recurringDetailReference;
  }

  /**
   * This is the &#x60;recurringDetailReference&#x60; returned in the response when you created the
   * token.
   *
   * @param recurringDetailReference This is the &#x60;recurringDetailReference&#x60; returned in
   *     the response when you created the token.
   * @deprecated since Adyen Checkout API v49 Use &#x60;storedPaymentMethodId&#x60; instead.
   */
  @Deprecated // deprecated since Adyen Checkout API v49: Use `storedPaymentMethodId` instead.
  @JsonProperty(JSON_PROPERTY_RECURRING_DETAIL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurringDetailReference(String recurringDetailReference) {
    this.recurringDetailReference = recurringDetailReference;
  }

  /**
   * This is the &#x60;recurringDetailReference&#x60; returned in the response when you created the
   * token.
   *
   * @param storedPaymentMethodId This is the &#x60;recurringDetailReference&#x60; returned in the
   *     response when you created the token.
   * @return the current {@code EftDetails} instance, allowing for method chaining
   */
  public EftDetails storedPaymentMethodId(String storedPaymentMethodId) {
    this.storedPaymentMethodId = storedPaymentMethodId;
    return this;
  }

  /**
   * This is the &#x60;recurringDetailReference&#x60; returned in the response when you created the
   * token.
   *
   * @return storedPaymentMethodId This is the &#x60;recurringDetailReference&#x60; returned in the
   *     response when you created the token.
   */
  @JsonProperty(JSON_PROPERTY_STORED_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStoredPaymentMethodId() {
    return storedPaymentMethodId;
  }

  /**
   * This is the &#x60;recurringDetailReference&#x60; returned in the response when you created the
   * token.
   *
   * @param storedPaymentMethodId This is the &#x60;recurringDetailReference&#x60; returned in the
   *     response when you created the token.
   */
  @JsonProperty(JSON_PROPERTY_STORED_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoredPaymentMethodId(String storedPaymentMethodId) {
    this.storedPaymentMethodId = storedPaymentMethodId;
  }

  /**
   * **eft**
   *
   * @param type **eft**
   * @return the current {@code EftDetails} instance, allowing for method chaining
   */
  public EftDetails type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * **eft**
   *
   * @return type **eft**
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeEnum getType() {
    return type;
  }

  /**
   * **eft**
   *
   * @param type **eft**
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /** Return true if this EftDetails object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EftDetails eftDetails = (EftDetails) o;
    return Objects.equals(this.bankAccountNumber, eftDetails.bankAccountNumber)
        && Objects.equals(this.bankCode, eftDetails.bankCode)
        && Objects.equals(this.bankLocationId, eftDetails.bankLocationId)
        && Objects.equals(this.checkoutAttemptId, eftDetails.checkoutAttemptId)
        && Objects.equals(this.ownerName, eftDetails.ownerName)
        && Objects.equals(this.recurringDetailReference, eftDetails.recurringDetailReference)
        && Objects.equals(this.storedPaymentMethodId, eftDetails.storedPaymentMethodId)
        && Objects.equals(this.type, eftDetails.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        bankAccountNumber,
        bankCode,
        bankLocationId,
        checkoutAttemptId,
        ownerName,
        recurringDetailReference,
        storedPaymentMethodId,
        type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EftDetails {\n");
    sb.append("    bankAccountNumber: ").append(toIndentedString(bankAccountNumber)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    bankLocationId: ").append(toIndentedString(bankLocationId)).append("\n");
    sb.append("    checkoutAttemptId: ").append(toIndentedString(checkoutAttemptId)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    recurringDetailReference: ")
        .append(toIndentedString(recurringDetailReference))
        .append("\n");
    sb.append("    storedPaymentMethodId: ")
        .append(toIndentedString(storedPaymentMethodId))
        .append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of EftDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EftDetails
   * @throws JsonProcessingException if the JSON string is invalid with respect to EftDetails
   */
  public static EftDetails fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, EftDetails.class);
  }

  /**
   * Convert an instance of EftDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
