/*
 * Adyen Checkout API
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.checkout;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.checkout.Result;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * ValidateShopperIdResponse
 */
@JsonPropertyOrder({
  ValidateShopperIdResponse.JSON_PROPERTY_REASON,
  ValidateShopperIdResponse.JSON_PROPERTY_RESULT
})

public class ValidateShopperIdResponse {
  public static final String JSON_PROPERTY_REASON = "reason";
  private String reason;

  public static final String JSON_PROPERTY_RESULT = "result";
  private Result result;

  public ValidateShopperIdResponse() { 
  }

  /**
   * Reason for the result.
   *
   * @param reason Reason for the result.
   * @return the current {@code ValidateShopperIdResponse} instance, allowing for method chaining
   */
  public ValidateShopperIdResponse reason(String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * Reason for the result.
   * @return reason Reason for the result.
   */
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getReason() {
    return reason;
  }

  /**
   * Reason for the result.
   *
   * @param reason Reason for the result.
   */
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(String reason) {
    this.reason = reason;
  }

  /**
   * result
   *
   * @param result 
   * @return the current {@code ValidateShopperIdResponse} instance, allowing for method chaining
   */
  public ValidateShopperIdResponse result(Result result) {
    this.result = result;
    return this;
  }

  /**
   * Get result
   * @return result 
   */
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Result getResult() {
    return result;
  }

  /**
   * result
   *
   * @param result 
   */
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResult(Result result) {
    this.result = result;
  }

  /**
   * Return true if this ValidateShopperIdResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateShopperIdResponse validateShopperIdResponse = (ValidateShopperIdResponse) o;
    return Objects.equals(this.reason, validateShopperIdResponse.reason) &&
        Objects.equals(this.result, validateShopperIdResponse.result);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reason, result);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateShopperIdResponse {\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of ValidateShopperIdResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ValidateShopperIdResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to ValidateShopperIdResponse
   */
  public static ValidateShopperIdResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, ValidateShopperIdResponse.class);
  }
/**
  * Convert an instance of ValidateShopperIdResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
