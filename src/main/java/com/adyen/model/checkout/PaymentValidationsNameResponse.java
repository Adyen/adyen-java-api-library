/*
 * Adyen Checkout API
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.checkout;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.checkout.PaymentValidationsNameResultRawResponse;
import com.adyen.model.checkout.PaymentValidationsNameResultResponse;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PaymentValidationsNameResponse
 */
@JsonPropertyOrder({
  PaymentValidationsNameResponse.JSON_PROPERTY_RAW_RESPONSE,
  PaymentValidationsNameResponse.JSON_PROPERTY_RESULT,
  PaymentValidationsNameResponse.JSON_PROPERTY_STATUS
})

public class PaymentValidationsNameResponse {
  public static final String JSON_PROPERTY_RAW_RESPONSE = "rawResponse";
  private PaymentValidationsNameResultRawResponse rawResponse;

  public static final String JSON_PROPERTY_RESULT = "result";
  private PaymentValidationsNameResultResponse result;

  /**
   * Name Validation status result
   */
  public enum StatusEnum {

    NOTPERFORMED(String.valueOf("notPerformed")),

    NOTSUPPORTED(String.valueOf("notSupported")),

    PERFORMED(String.valueOf("performed"));

    private static final Logger LOG = Logger.getLogger(StatusEnum.class.getName());

    private String value;

    StatusEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      // handling unexpected value
      LOG.warning("StatusEnum: unexpected enum value '" + value + "' - Supported values are "+ Arrays.toString(StatusEnum.values()));
      return null;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public PaymentValidationsNameResponse() { 
  }

  /**
   * rawResponse
   *
   * @param rawResponse 
   * @return the current {@code PaymentValidationsNameResponse} instance, allowing for method chaining
   */
  public PaymentValidationsNameResponse rawResponse(PaymentValidationsNameResultRawResponse rawResponse) {
    this.rawResponse = rawResponse;
    return this;
  }

  /**
   * Get rawResponse
   * @return rawResponse 
   */
  @JsonProperty(JSON_PROPERTY_RAW_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentValidationsNameResultRawResponse getRawResponse() {
    return rawResponse;
  }

  /**
   * rawResponse
   *
   * @param rawResponse 
   */
  @JsonProperty(JSON_PROPERTY_RAW_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRawResponse(PaymentValidationsNameResultRawResponse rawResponse) {
    this.rawResponse = rawResponse;
  }

  /**
   * result
   *
   * @param result 
   * @return the current {@code PaymentValidationsNameResponse} instance, allowing for method chaining
   */
  public PaymentValidationsNameResponse result(PaymentValidationsNameResultResponse result) {
    this.result = result;
    return this;
  }

  /**
   * Get result
   * @return result 
   */
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentValidationsNameResultResponse getResult() {
    return result;
  }

  /**
   * result
   *
   * @param result 
   */
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResult(PaymentValidationsNameResultResponse result) {
    this.result = result;
  }

  /**
   * Name Validation status result
   *
   * @param status Name Validation status result
   * @return the current {@code PaymentValidationsNameResponse} instance, allowing for method chaining
   */
  public PaymentValidationsNameResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Name Validation status result
   * @return status Name Validation status result
   */
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public StatusEnum getStatus() {
    return status;
  }

  /**
   * Name Validation status result
   *
   * @param status Name Validation status result
   */
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  /**
   * Return true if this PaymentValidationsNameResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentValidationsNameResponse paymentValidationsNameResponse = (PaymentValidationsNameResponse) o;
    return Objects.equals(this.rawResponse, paymentValidationsNameResponse.rawResponse) &&
        Objects.equals(this.result, paymentValidationsNameResponse.result) &&
        Objects.equals(this.status, paymentValidationsNameResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rawResponse, result, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentValidationsNameResponse {\n");
    sb.append("    rawResponse: ").append(toIndentedString(rawResponse)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PaymentValidationsNameResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentValidationsNameResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to PaymentValidationsNameResponse
   */
  public static PaymentValidationsNameResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PaymentValidationsNameResponse.class);
  }
/**
  * Convert an instance of PaymentValidationsNameResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
