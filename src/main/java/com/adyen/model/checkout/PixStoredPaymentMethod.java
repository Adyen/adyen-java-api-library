/*
 * Adyen Checkout API
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.checkout;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PixStoredPaymentMethod
 */
@JsonPropertyOrder({
  PixStoredPaymentMethod.JSON_PROPERTY_BANK_ACCOUNT_NUMBER,
  PixStoredPaymentMethod.JSON_PROPERTY_BANK_LOCATION_ID,
  PixStoredPaymentMethod.JSON_PROPERTY_BRAND,
  PixStoredPaymentMethod.JSON_PROPERTY_EXPIRY_MONTH,
  PixStoredPaymentMethod.JSON_PROPERTY_EXPIRY_YEAR,
  PixStoredPaymentMethod.JSON_PROPERTY_HOLDER_NAME,
  PixStoredPaymentMethod.JSON_PROPERTY_IBAN,
  PixStoredPaymentMethod.JSON_PROPERTY_ID,
  PixStoredPaymentMethod.JSON_PROPERTY_LABEL,
  PixStoredPaymentMethod.JSON_PROPERTY_LAST_FOUR,
  PixStoredPaymentMethod.JSON_PROPERTY_NAME,
  PixStoredPaymentMethod.JSON_PROPERTY_NETWORK_TX_REFERENCE,
  PixStoredPaymentMethod.JSON_PROPERTY_OWNER_NAME,
  PixStoredPaymentMethod.JSON_PROPERTY_SHOPPER_EMAIL,
  PixStoredPaymentMethod.JSON_PROPERTY_SUPPORTED_RECURRING_PROCESSING_MODELS,
  PixStoredPaymentMethod.JSON_PROPERTY_SUPPORTED_SHOPPER_INTERACTIONS,
  PixStoredPaymentMethod.JSON_PROPERTY_TYPE
})

public class PixStoredPaymentMethod {
  public static final String JSON_PROPERTY_BANK_ACCOUNT_NUMBER = "bankAccountNumber";
  private String bankAccountNumber;

  public static final String JSON_PROPERTY_BANK_LOCATION_ID = "bankLocationId";
  private String bankLocationId;

  public static final String JSON_PROPERTY_BRAND = "brand";
  private String brand;

  public static final String JSON_PROPERTY_EXPIRY_MONTH = "expiryMonth";
  private String expiryMonth;

  public static final String JSON_PROPERTY_EXPIRY_YEAR = "expiryYear";
  private String expiryYear;

  public static final String JSON_PROPERTY_HOLDER_NAME = "holderName";
  private String holderName;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private String iban;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_LAST_FOUR = "lastFour";
  private String lastFour;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NETWORK_TX_REFERENCE = "networkTxReference";
  private String networkTxReference;

  public static final String JSON_PROPERTY_OWNER_NAME = "ownerName";
  private String ownerName;

  public static final String JSON_PROPERTY_SHOPPER_EMAIL = "shopperEmail";
  private String shopperEmail;

  public static final String JSON_PROPERTY_SUPPORTED_RECURRING_PROCESSING_MODELS = "supportedRecurringProcessingModels";
  private List<String> supportedRecurringProcessingModels;

  public static final String JSON_PROPERTY_SUPPORTED_SHOPPER_INTERACTIONS = "supportedShopperInteractions";
  private List<String> supportedShopperInteractions;

  /**
   * The type of payment method.
   */
  public enum TypeEnum {
    PIX(String.valueOf("pix"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public PixStoredPaymentMethod() { 
  }

  /**
   * The bank account number (without separators).
   *
   * @param bankAccountNumber The bank account number (without separators).
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod bankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
    return this;
  }

  /**
   * The bank account number (without separators).
   * @return bankAccountNumber The bank account number (without separators).
   */
  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBankAccountNumber() {
    return bankAccountNumber;
  }

  /**
   * The bank account number (without separators).
   *
   * @param bankAccountNumber The bank account number (without separators).
   */
  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
  }

  /**
   * The location id of the bank. The field value is &#x60;nil&#x60; in most cases.
   *
   * @param bankLocationId The location id of the bank. The field value is &#x60;nil&#x60; in most cases.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod bankLocationId(String bankLocationId) {
    this.bankLocationId = bankLocationId;
    return this;
  }

  /**
   * The location id of the bank. The field value is &#x60;nil&#x60; in most cases.
   * @return bankLocationId The location id of the bank. The field value is &#x60;nil&#x60; in most cases.
   */
  @JsonProperty(JSON_PROPERTY_BANK_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBankLocationId() {
    return bankLocationId;
  }

  /**
   * The location id of the bank. The field value is &#x60;nil&#x60; in most cases.
   *
   * @param bankLocationId The location id of the bank. The field value is &#x60;nil&#x60; in most cases.
   */
  @JsonProperty(JSON_PROPERTY_BANK_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankLocationId(String bankLocationId) {
    this.bankLocationId = bankLocationId;
  }

  /**
   * The brand of the card.
   *
   * @param brand The brand of the card.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod brand(String brand) {
    this.brand = brand;
    return this;
  }

  /**
   * The brand of the card.
   * @return brand The brand of the card.
   */
  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBrand() {
    return brand;
  }

  /**
   * The brand of the card.
   *
   * @param brand The brand of the card.
   */
  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrand(String brand) {
    this.brand = brand;
  }

  /**
   * The two-digit month when the card expires
   *
   * @param expiryMonth The two-digit month when the card expires
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod expiryMonth(String expiryMonth) {
    this.expiryMonth = expiryMonth;
    return this;
  }

  /**
   * The two-digit month when the card expires
   * @return expiryMonth The two-digit month when the card expires
   */
  @JsonProperty(JSON_PROPERTY_EXPIRY_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getExpiryMonth() {
    return expiryMonth;
  }

  /**
   * The two-digit month when the card expires
   *
   * @param expiryMonth The two-digit month when the card expires
   */
  @JsonProperty(JSON_PROPERTY_EXPIRY_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryMonth(String expiryMonth) {
    this.expiryMonth = expiryMonth;
  }

  /**
   * The last two digits of the year the card expires. For example, **22** for the year 2022.
   *
   * @param expiryYear The last two digits of the year the card expires. For example, **22** for the year 2022.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod expiryYear(String expiryYear) {
    this.expiryYear = expiryYear;
    return this;
  }

  /**
   * The last two digits of the year the card expires. For example, **22** for the year 2022.
   * @return expiryYear The last two digits of the year the card expires. For example, **22** for the year 2022.
   */
  @JsonProperty(JSON_PROPERTY_EXPIRY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getExpiryYear() {
    return expiryYear;
  }

  /**
   * The last two digits of the year the card expires. For example, **22** for the year 2022.
   *
   * @param expiryYear The last two digits of the year the card expires. For example, **22** for the year 2022.
   */
  @JsonProperty(JSON_PROPERTY_EXPIRY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryYear(String expiryYear) {
    this.expiryYear = expiryYear;
  }

  /**
   * The unique payment method code.
   *
   * @param holderName The unique payment method code.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod holderName(String holderName) {
    this.holderName = holderName;
    return this;
  }

  /**
   * The unique payment method code.
   * @return holderName The unique payment method code.
   */
  @JsonProperty(JSON_PROPERTY_HOLDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHolderName() {
    return holderName;
  }

  /**
   * The unique payment method code.
   *
   * @param holderName The unique payment method code.
   */
  @JsonProperty(JSON_PROPERTY_HOLDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHolderName(String holderName) {
    this.holderName = holderName;
  }

  /**
   * The IBAN of the bank account.
   *
   * @param iban The IBAN of the bank account.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod iban(String iban) {
    this.iban = iban;
    return this;
  }

  /**
   * The IBAN of the bank account.
   * @return iban The IBAN of the bank account.
   */
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getIban() {
    return iban;
  }

  /**
   * The IBAN of the bank account.
   *
   * @param iban The IBAN of the bank account.
   */
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIban(String iban) {
    this.iban = iban;
  }

  /**
   * A unique identifier of this stored payment method.
   *
   * @param id A unique identifier of this stored payment method.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod id(String id) {
    this.id = id;
    return this;
  }

  /**
   * A unique identifier of this stored payment method.
   * @return id A unique identifier of this stored payment method.
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  /**
   * A unique identifier of this stored payment method.
   *
   * @param id A unique identifier of this stored payment method.
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The shopper’s issuer account label
   *
   * @param label The shopper’s issuer account label
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod label(String label) {
    this.label = label;
    return this;
  }

  /**
   * The shopper’s issuer account label
   * @return label The shopper’s issuer account label
   */
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLabel() {
    return label;
  }

  /**
   * The shopper’s issuer account label
   *
   * @param label The shopper’s issuer account label
   */
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }

  /**
   * The last four digits of the PAN.
   *
   * @param lastFour The last four digits of the PAN.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod lastFour(String lastFour) {
    this.lastFour = lastFour;
    return this;
  }

  /**
   * The last four digits of the PAN.
   * @return lastFour The last four digits of the PAN.
   */
  @JsonProperty(JSON_PROPERTY_LAST_FOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLastFour() {
    return lastFour;
  }

  /**
   * The last four digits of the PAN.
   *
   * @param lastFour The last four digits of the PAN.
   */
  @JsonProperty(JSON_PROPERTY_LAST_FOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastFour(String lastFour) {
    this.lastFour = lastFour;
  }

  /**
   * The display name of the stored payment method.
   *
   * @param name The display name of the stored payment method.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The display name of the stored payment method.
   * @return name The display name of the stored payment method.
   */
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }

  /**
   * The display name of the stored payment method.
   *
   * @param name The display name of the stored payment method.
   */
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.  This contains either the Mastercard Trace ID or the Visa Transaction ID.
   *
   * @param networkTxReference Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.  This contains either the Mastercard Trace ID or the Visa Transaction ID.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod networkTxReference(String networkTxReference) {
    this.networkTxReference = networkTxReference;
    return this;
  }

  /**
   * Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.  This contains either the Mastercard Trace ID or the Visa Transaction ID.
   * @return networkTxReference Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.  This contains either the Mastercard Trace ID or the Visa Transaction ID.
   */
  @JsonProperty(JSON_PROPERTY_NETWORK_TX_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNetworkTxReference() {
    return networkTxReference;
  }

  /**
   * Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.  This contains either the Mastercard Trace ID or the Visa Transaction ID.
   *
   * @param networkTxReference Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.  This contains either the Mastercard Trace ID or the Visa Transaction ID.
   */
  @JsonProperty(JSON_PROPERTY_NETWORK_TX_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkTxReference(String networkTxReference) {
    this.networkTxReference = networkTxReference;
  }

  /**
   * The name of the bank account holder.
   *
   * @param ownerName The name of the bank account holder.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

  /**
   * The name of the bank account holder.
   * @return ownerName The name of the bank account holder.
   */
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOwnerName() {
    return ownerName;
  }

  /**
   * The name of the bank account holder.
   *
   * @param ownerName The name of the bank account holder.
   */
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }

  /**
   * The shopper’s email address.
   *
   * @param shopperEmail The shopper’s email address.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod shopperEmail(String shopperEmail) {
    this.shopperEmail = shopperEmail;
    return this;
  }

  /**
   * The shopper’s email address.
   * @return shopperEmail The shopper’s email address.
   */
  @JsonProperty(JSON_PROPERTY_SHOPPER_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getShopperEmail() {
    return shopperEmail;
  }

  /**
   * The shopper’s email address.
   *
   * @param shopperEmail The shopper’s email address.
   */
  @JsonProperty(JSON_PROPERTY_SHOPPER_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShopperEmail(String shopperEmail) {
    this.shopperEmail = shopperEmail;
  }

  /**
   * The supported recurring processing models for this stored payment method.
   *
   * @param supportedRecurringProcessingModels The supported recurring processing models for this stored payment method.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod supportedRecurringProcessingModels(List<String> supportedRecurringProcessingModels) {
    this.supportedRecurringProcessingModels = supportedRecurringProcessingModels;
    return this;
  }

  public PixStoredPaymentMethod addSupportedRecurringProcessingModelsItem(String supportedRecurringProcessingModelsItem) {
    if (this.supportedRecurringProcessingModels == null) {
      this.supportedRecurringProcessingModels = new ArrayList<>();
    }
    this.supportedRecurringProcessingModels.add(supportedRecurringProcessingModelsItem);
    return this;
  }

  /**
   * The supported recurring processing models for this stored payment method.
   * @return supportedRecurringProcessingModels The supported recurring processing models for this stored payment method.
   */
  @JsonProperty(JSON_PROPERTY_SUPPORTED_RECURRING_PROCESSING_MODELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSupportedRecurringProcessingModels() {
    return supportedRecurringProcessingModels;
  }

  /**
   * The supported recurring processing models for this stored payment method.
   *
   * @param supportedRecurringProcessingModels The supported recurring processing models for this stored payment method.
   */
  @JsonProperty(JSON_PROPERTY_SUPPORTED_RECURRING_PROCESSING_MODELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedRecurringProcessingModels(List<String> supportedRecurringProcessingModels) {
    this.supportedRecurringProcessingModels = supportedRecurringProcessingModels;
  }

  /**
   * The supported shopper interactions for this stored payment method.
   *
   * @param supportedShopperInteractions The supported shopper interactions for this stored payment method.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod supportedShopperInteractions(List<String> supportedShopperInteractions) {
    this.supportedShopperInteractions = supportedShopperInteractions;
    return this;
  }

  public PixStoredPaymentMethod addSupportedShopperInteractionsItem(String supportedShopperInteractionsItem) {
    if (this.supportedShopperInteractions == null) {
      this.supportedShopperInteractions = new ArrayList<>();
    }
    this.supportedShopperInteractions.add(supportedShopperInteractionsItem);
    return this;
  }

  /**
   * The supported shopper interactions for this stored payment method.
   * @return supportedShopperInteractions The supported shopper interactions for this stored payment method.
   */
  @JsonProperty(JSON_PROPERTY_SUPPORTED_SHOPPER_INTERACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSupportedShopperInteractions() {
    return supportedShopperInteractions;
  }

  /**
   * The supported shopper interactions for this stored payment method.
   *
   * @param supportedShopperInteractions The supported shopper interactions for this stored payment method.
   */
  @JsonProperty(JSON_PROPERTY_SUPPORTED_SHOPPER_INTERACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedShopperInteractions(List<String> supportedShopperInteractions) {
    this.supportedShopperInteractions = supportedShopperInteractions;
  }

  /**
   * The type of payment method.
   *
   * @param type The type of payment method.
   * @return the current {@code PixStoredPaymentMethod} instance, allowing for method chaining
   */
  public PixStoredPaymentMethod type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * The type of payment method.
   * @return type The type of payment method.
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeEnum getType() {
    return type;
  }

  /**
   * The type of payment method.
   *
   * @param type The type of payment method.
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * Return true if this PixStoredPaymentMethod object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PixStoredPaymentMethod pixStoredPaymentMethod = (PixStoredPaymentMethod) o;
    return Objects.equals(this.bankAccountNumber, pixStoredPaymentMethod.bankAccountNumber) &&
        Objects.equals(this.bankLocationId, pixStoredPaymentMethod.bankLocationId) &&
        Objects.equals(this.brand, pixStoredPaymentMethod.brand) &&
        Objects.equals(this.expiryMonth, pixStoredPaymentMethod.expiryMonth) &&
        Objects.equals(this.expiryYear, pixStoredPaymentMethod.expiryYear) &&
        Objects.equals(this.holderName, pixStoredPaymentMethod.holderName) &&
        Objects.equals(this.iban, pixStoredPaymentMethod.iban) &&
        Objects.equals(this.id, pixStoredPaymentMethod.id) &&
        Objects.equals(this.label, pixStoredPaymentMethod.label) &&
        Objects.equals(this.lastFour, pixStoredPaymentMethod.lastFour) &&
        Objects.equals(this.name, pixStoredPaymentMethod.name) &&
        Objects.equals(this.networkTxReference, pixStoredPaymentMethod.networkTxReference) &&
        Objects.equals(this.ownerName, pixStoredPaymentMethod.ownerName) &&
        Objects.equals(this.shopperEmail, pixStoredPaymentMethod.shopperEmail) &&
        Objects.equals(this.supportedRecurringProcessingModels, pixStoredPaymentMethod.supportedRecurringProcessingModels) &&
        Objects.equals(this.supportedShopperInteractions, pixStoredPaymentMethod.supportedShopperInteractions) &&
        Objects.equals(this.type, pixStoredPaymentMethod.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankAccountNumber, bankLocationId, brand, expiryMonth, expiryYear, holderName, iban, id, label, lastFour, name, networkTxReference, ownerName, shopperEmail, supportedRecurringProcessingModels, supportedShopperInteractions, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PixStoredPaymentMethod {\n");
    sb.append("    bankAccountNumber: ").append(toIndentedString(bankAccountNumber)).append("\n");
    sb.append("    bankLocationId: ").append(toIndentedString(bankLocationId)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    expiryMonth: ").append(toIndentedString(expiryMonth)).append("\n");
    sb.append("    expiryYear: ").append(toIndentedString(expiryYear)).append("\n");
    sb.append("    holderName: ").append(toIndentedString(holderName)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    lastFour: ").append(toIndentedString(lastFour)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networkTxReference: ").append(toIndentedString(networkTxReference)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    shopperEmail: ").append(toIndentedString(shopperEmail)).append("\n");
    sb.append("    supportedRecurringProcessingModels: ").append(toIndentedString(supportedRecurringProcessingModels)).append("\n");
    sb.append("    supportedShopperInteractions: ").append(toIndentedString(supportedShopperInteractions)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PixStoredPaymentMethod given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PixStoredPaymentMethod
   * @throws JsonProcessingException if the JSON string is invalid with respect to PixStoredPaymentMethod
   */
  public static PixStoredPaymentMethod fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PixStoredPaymentMethod.class);
  }
/**
  * Convert an instance of PixStoredPaymentMethod to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
