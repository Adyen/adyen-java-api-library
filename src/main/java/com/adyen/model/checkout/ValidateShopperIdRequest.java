/*
 * Adyen Checkout API
 *
 * The version of the OpenAPI document: 71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.checkout;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.checkout.ShopperIdPaymentMethod;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * ValidateShopperIdRequest
 */
@JsonPropertyOrder({
  ValidateShopperIdRequest.JSON_PROPERTY_MERCHANT_ACCOUNT,
  ValidateShopperIdRequest.JSON_PROPERTY_PAYMENT_METHOD,
  ValidateShopperIdRequest.JSON_PROPERTY_SHOPPER_EMAIL,
  ValidateShopperIdRequest.JSON_PROPERTY_SHOPPER_I_P,
  ValidateShopperIdRequest.JSON_PROPERTY_SHOPPER_REFERENCE
})

public class ValidateShopperIdRequest {
  public static final String JSON_PROPERTY_MERCHANT_ACCOUNT = "merchantAccount";
  private String merchantAccount;

  public static final String JSON_PROPERTY_PAYMENT_METHOD = "paymentMethod";
  private ShopperIdPaymentMethod paymentMethod;

  public static final String JSON_PROPERTY_SHOPPER_EMAIL = "shopperEmail";
  private String shopperEmail;

  public static final String JSON_PROPERTY_SHOPPER_I_P = "shopperIP";
  private String shopperIP;

  public static final String JSON_PROPERTY_SHOPPER_REFERENCE = "shopperReference";
  private String shopperReference;

  public ValidateShopperIdRequest() { 
  }

  /**
   * The merchant account identifier, with which you want to process the transaction.
   *
   * @param merchantAccount The merchant account identifier, with which you want to process the transaction.
   * @return the current {@code ValidateShopperIdRequest} instance, allowing for method chaining
   */
  public ValidateShopperIdRequest merchantAccount(String merchantAccount) {
    this.merchantAccount = merchantAccount;
    return this;
  }

  /**
   * The merchant account identifier, with which you want to process the transaction.
   * @return merchantAccount The merchant account identifier, with which you want to process the transaction.
   */
  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMerchantAccount() {
    return merchantAccount;
  }

  /**
   * The merchant account identifier, with which you want to process the transaction.
   *
   * @param merchantAccount The merchant account identifier, with which you want to process the transaction.
   */
  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantAccount(String merchantAccount) {
    this.merchantAccount = merchantAccount;
  }

  /**
   * paymentMethod
   *
   * @param paymentMethod 
   * @return the current {@code ValidateShopperIdRequest} instance, allowing for method chaining
   */
  public ValidateShopperIdRequest paymentMethod(ShopperIdPaymentMethod paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  /**
   * Get paymentMethod
   * @return paymentMethod 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ShopperIdPaymentMethod getPaymentMethod() {
    return paymentMethod;
  }

  /**
   * paymentMethod
   *
   * @param paymentMethod 
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethod(ShopperIdPaymentMethod paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  /**
   * shopperEmail
   *
   * @param shopperEmail 
   * @return the current {@code ValidateShopperIdRequest} instance, allowing for method chaining
   */
  public ValidateShopperIdRequest shopperEmail(String shopperEmail) {
    this.shopperEmail = shopperEmail;
    return this;
  }

  /**
   * Get shopperEmail
   * @return shopperEmail 
   */
  @JsonProperty(JSON_PROPERTY_SHOPPER_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getShopperEmail() {
    return shopperEmail;
  }

  /**
   * shopperEmail
   *
   * @param shopperEmail 
   */
  @JsonProperty(JSON_PROPERTY_SHOPPER_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShopperEmail(String shopperEmail) {
    this.shopperEmail = shopperEmail;
  }

  /**
   * shopperIP
   *
   * @param shopperIP 
   * @return the current {@code ValidateShopperIdRequest} instance, allowing for method chaining
   */
  public ValidateShopperIdRequest shopperIP(String shopperIP) {
    this.shopperIP = shopperIP;
    return this;
  }

  /**
   * Get shopperIP
   * @return shopperIP 
   */
  @JsonProperty(JSON_PROPERTY_SHOPPER_I_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getShopperIP() {
    return shopperIP;
  }

  /**
   * shopperIP
   *
   * @param shopperIP 
   */
  @JsonProperty(JSON_PROPERTY_SHOPPER_I_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShopperIP(String shopperIP) {
    this.shopperIP = shopperIP;
  }

  /**
   * shopperReference
   *
   * @param shopperReference 
   * @return the current {@code ValidateShopperIdRequest} instance, allowing for method chaining
   */
  public ValidateShopperIdRequest shopperReference(String shopperReference) {
    this.shopperReference = shopperReference;
    return this;
  }

  /**
   * Get shopperReference
   * @return shopperReference 
   */
  @JsonProperty(JSON_PROPERTY_SHOPPER_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getShopperReference() {
    return shopperReference;
  }

  /**
   * shopperReference
   *
   * @param shopperReference 
   */
  @JsonProperty(JSON_PROPERTY_SHOPPER_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShopperReference(String shopperReference) {
    this.shopperReference = shopperReference;
  }

  /**
   * Return true if this ValidateShopperIdRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateShopperIdRequest validateShopperIdRequest = (ValidateShopperIdRequest) o;
    return Objects.equals(this.merchantAccount, validateShopperIdRequest.merchantAccount) &&
        Objects.equals(this.paymentMethod, validateShopperIdRequest.paymentMethod) &&
        Objects.equals(this.shopperEmail, validateShopperIdRequest.shopperEmail) &&
        Objects.equals(this.shopperIP, validateShopperIdRequest.shopperIP) &&
        Objects.equals(this.shopperReference, validateShopperIdRequest.shopperReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantAccount, paymentMethod, shopperEmail, shopperIP, shopperReference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateShopperIdRequest {\n");
    sb.append("    merchantAccount: ").append(toIndentedString(merchantAccount)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    shopperEmail: ").append(toIndentedString(shopperEmail)).append("\n");
    sb.append("    shopperIP: ").append(toIndentedString(shopperIP)).append("\n");
    sb.append("    shopperReference: ").append(toIndentedString(shopperReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of ValidateShopperIdRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ValidateShopperIdRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to ValidateShopperIdRequest
   */
  public static ValidateShopperIdRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, ValidateShopperIdRequest.class);
  }
/**
  * Convert an instance of ValidateShopperIdRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
