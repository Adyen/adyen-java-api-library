/*
 * Adyen Checkout API
 *
 * The version of the OpenAPI document: 69
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.checkout;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.adyen.model.checkout.JSON;

/**
 * ThreeDS2ResponseData
 */

public class ThreeDS2ResponseData {
  public static final String SERIALIZED_NAME_ACS_CHALLENGE_MANDATED = "acsChallengeMandated";
  @SerializedName(SERIALIZED_NAME_ACS_CHALLENGE_MANDATED)
  private String acsChallengeMandated;

  public static final String SERIALIZED_NAME_ACS_OPERATOR_I_D = "acsOperatorID";
  @SerializedName(SERIALIZED_NAME_ACS_OPERATOR_I_D)
  private String acsOperatorID;

  public static final String SERIALIZED_NAME_ACS_REFERENCE_NUMBER = "acsReferenceNumber";
  @SerializedName(SERIALIZED_NAME_ACS_REFERENCE_NUMBER)
  private String acsReferenceNumber;

  public static final String SERIALIZED_NAME_ACS_SIGNED_CONTENT = "acsSignedContent";
  @SerializedName(SERIALIZED_NAME_ACS_SIGNED_CONTENT)
  private String acsSignedContent;

  public static final String SERIALIZED_NAME_ACS_TRANS_I_D = "acsTransID";
  @SerializedName(SERIALIZED_NAME_ACS_TRANS_I_D)
  private String acsTransID;

  public static final String SERIALIZED_NAME_ACS_U_R_L = "acsURL";
  @SerializedName(SERIALIZED_NAME_ACS_U_R_L)
  private String acsURL;

  public static final String SERIALIZED_NAME_AUTHENTICATION_TYPE = "authenticationType";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_TYPE)
  private String authenticationType;

  public static final String SERIALIZED_NAME_CARD_HOLDER_INFO = "cardHolderInfo";
  @SerializedName(SERIALIZED_NAME_CARD_HOLDER_INFO)
  private String cardHolderInfo;

  public static final String SERIALIZED_NAME_CAVV_ALGORITHM = "cavvAlgorithm";
  @SerializedName(SERIALIZED_NAME_CAVV_ALGORITHM)
  private String cavvAlgorithm;

  public static final String SERIALIZED_NAME_CHALLENGE_INDICATOR = "challengeIndicator";
  @SerializedName(SERIALIZED_NAME_CHALLENGE_INDICATOR)
  private String challengeIndicator;

  public static final String SERIALIZED_NAME_DS_REFERENCE_NUMBER = "dsReferenceNumber";
  @SerializedName(SERIALIZED_NAME_DS_REFERENCE_NUMBER)
  private String dsReferenceNumber;

  public static final String SERIALIZED_NAME_DS_TRANS_I_D = "dsTransID";
  @SerializedName(SERIALIZED_NAME_DS_TRANS_I_D)
  private String dsTransID;

  public static final String SERIALIZED_NAME_EXEMPTION_INDICATOR = "exemptionIndicator";
  @SerializedName(SERIALIZED_NAME_EXEMPTION_INDICATOR)
  private String exemptionIndicator;

  public static final String SERIALIZED_NAME_MESSAGE_VERSION = "messageVersion";
  @SerializedName(SERIALIZED_NAME_MESSAGE_VERSION)
  private String messageVersion;

  public static final String SERIALIZED_NAME_RISK_SCORE = "riskScore";
  @SerializedName(SERIALIZED_NAME_RISK_SCORE)
  private String riskScore;

  public static final String SERIALIZED_NAME_SDK_EPHEM_PUB_KEY = "sdkEphemPubKey";
  @SerializedName(SERIALIZED_NAME_SDK_EPHEM_PUB_KEY)
  private String sdkEphemPubKey;

  public static final String SERIALIZED_NAME_THREE_D_S_SERVER_TRANS_I_D = "threeDSServerTransID";
  @SerializedName(SERIALIZED_NAME_THREE_D_S_SERVER_TRANS_I_D)
  private String threeDSServerTransID;

  public static final String SERIALIZED_NAME_TRANS_STATUS = "transStatus";
  @SerializedName(SERIALIZED_NAME_TRANS_STATUS)
  private String transStatus;

  public static final String SERIALIZED_NAME_TRANS_STATUS_REASON = "transStatusReason";
  @SerializedName(SERIALIZED_NAME_TRANS_STATUS_REASON)
  private String transStatusReason;

  public ThreeDS2ResponseData() { 
  }

  public ThreeDS2ResponseData acsChallengeMandated(String acsChallengeMandated) {
    
    this.acsChallengeMandated = acsChallengeMandated;
    return this;
  }

   /**
   * Get acsChallengeMandated
   * @return acsChallengeMandated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsChallengeMandated() {
    return acsChallengeMandated;
  }


  public void setAcsChallengeMandated(String acsChallengeMandated) {
    this.acsChallengeMandated = acsChallengeMandated;
  }


  public ThreeDS2ResponseData acsOperatorID(String acsOperatorID) {
    
    this.acsOperatorID = acsOperatorID;
    return this;
  }

   /**
   * Get acsOperatorID
   * @return acsOperatorID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsOperatorID() {
    return acsOperatorID;
  }


  public void setAcsOperatorID(String acsOperatorID) {
    this.acsOperatorID = acsOperatorID;
  }


  public ThreeDS2ResponseData acsReferenceNumber(String acsReferenceNumber) {
    
    this.acsReferenceNumber = acsReferenceNumber;
    return this;
  }

   /**
   * Get acsReferenceNumber
   * @return acsReferenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsReferenceNumber() {
    return acsReferenceNumber;
  }


  public void setAcsReferenceNumber(String acsReferenceNumber) {
    this.acsReferenceNumber = acsReferenceNumber;
  }


  public ThreeDS2ResponseData acsSignedContent(String acsSignedContent) {
    
    this.acsSignedContent = acsSignedContent;
    return this;
  }

   /**
   * Get acsSignedContent
   * @return acsSignedContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsSignedContent() {
    return acsSignedContent;
  }


  public void setAcsSignedContent(String acsSignedContent) {
    this.acsSignedContent = acsSignedContent;
  }


  public ThreeDS2ResponseData acsTransID(String acsTransID) {
    
    this.acsTransID = acsTransID;
    return this;
  }

   /**
   * Get acsTransID
   * @return acsTransID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsTransID() {
    return acsTransID;
  }


  public void setAcsTransID(String acsTransID) {
    this.acsTransID = acsTransID;
  }


  public ThreeDS2ResponseData acsURL(String acsURL) {
    
    this.acsURL = acsURL;
    return this;
  }

   /**
   * Get acsURL
   * @return acsURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsURL() {
    return acsURL;
  }


  public void setAcsURL(String acsURL) {
    this.acsURL = acsURL;
  }


  public ThreeDS2ResponseData authenticationType(String authenticationType) {
    
    this.authenticationType = authenticationType;
    return this;
  }

   /**
   * Get authenticationType
   * @return authenticationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthenticationType() {
    return authenticationType;
  }


  public void setAuthenticationType(String authenticationType) {
    this.authenticationType = authenticationType;
  }


  public ThreeDS2ResponseData cardHolderInfo(String cardHolderInfo) {
    
    this.cardHolderInfo = cardHolderInfo;
    return this;
  }

   /**
   * Get cardHolderInfo
   * @return cardHolderInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCardHolderInfo() {
    return cardHolderInfo;
  }


  public void setCardHolderInfo(String cardHolderInfo) {
    this.cardHolderInfo = cardHolderInfo;
  }


  public ThreeDS2ResponseData cavvAlgorithm(String cavvAlgorithm) {
    
    this.cavvAlgorithm = cavvAlgorithm;
    return this;
  }

   /**
   * Get cavvAlgorithm
   * @return cavvAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCavvAlgorithm() {
    return cavvAlgorithm;
  }


  public void setCavvAlgorithm(String cavvAlgorithm) {
    this.cavvAlgorithm = cavvAlgorithm;
  }


  public ThreeDS2ResponseData challengeIndicator(String challengeIndicator) {
    
    this.challengeIndicator = challengeIndicator;
    return this;
  }

   /**
   * Get challengeIndicator
   * @return challengeIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChallengeIndicator() {
    return challengeIndicator;
  }


  public void setChallengeIndicator(String challengeIndicator) {
    this.challengeIndicator = challengeIndicator;
  }


  public ThreeDS2ResponseData dsReferenceNumber(String dsReferenceNumber) {
    
    this.dsReferenceNumber = dsReferenceNumber;
    return this;
  }

   /**
   * Get dsReferenceNumber
   * @return dsReferenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsReferenceNumber() {
    return dsReferenceNumber;
  }


  public void setDsReferenceNumber(String dsReferenceNumber) {
    this.dsReferenceNumber = dsReferenceNumber;
  }


  public ThreeDS2ResponseData dsTransID(String dsTransID) {
    
    this.dsTransID = dsTransID;
    return this;
  }

   /**
   * Get dsTransID
   * @return dsTransID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsTransID() {
    return dsTransID;
  }


  public void setDsTransID(String dsTransID) {
    this.dsTransID = dsTransID;
  }


  public ThreeDS2ResponseData exemptionIndicator(String exemptionIndicator) {
    
    this.exemptionIndicator = exemptionIndicator;
    return this;
  }

   /**
   * Get exemptionIndicator
   * @return exemptionIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExemptionIndicator() {
    return exemptionIndicator;
  }


  public void setExemptionIndicator(String exemptionIndicator) {
    this.exemptionIndicator = exemptionIndicator;
  }


  public ThreeDS2ResponseData messageVersion(String messageVersion) {
    
    this.messageVersion = messageVersion;
    return this;
  }

   /**
   * Get messageVersion
   * @return messageVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageVersion() {
    return messageVersion;
  }


  public void setMessageVersion(String messageVersion) {
    this.messageVersion = messageVersion;
  }


  public ThreeDS2ResponseData riskScore(String riskScore) {
    
    this.riskScore = riskScore;
    return this;
  }

   /**
   * Get riskScore
   * @return riskScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRiskScore() {
    return riskScore;
  }


  public void setRiskScore(String riskScore) {
    this.riskScore = riskScore;
  }


  public ThreeDS2ResponseData sdkEphemPubKey(String sdkEphemPubKey) {
    
    this.sdkEphemPubKey = sdkEphemPubKey;
    return this;
  }

   /**
   * Get sdkEphemPubKey
   * @return sdkEphemPubKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSdkEphemPubKey() {
    return sdkEphemPubKey;
  }


  public void setSdkEphemPubKey(String sdkEphemPubKey) {
    this.sdkEphemPubKey = sdkEphemPubKey;
  }


  public ThreeDS2ResponseData threeDSServerTransID(String threeDSServerTransID) {
    
    this.threeDSServerTransID = threeDSServerTransID;
    return this;
  }

   /**
   * Get threeDSServerTransID
   * @return threeDSServerTransID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getThreeDSServerTransID() {
    return threeDSServerTransID;
  }


  public void setThreeDSServerTransID(String threeDSServerTransID) {
    this.threeDSServerTransID = threeDSServerTransID;
  }


  public ThreeDS2ResponseData transStatus(String transStatus) {
    
    this.transStatus = transStatus;
    return this;
  }

   /**
   * Get transStatus
   * @return transStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransStatus() {
    return transStatus;
  }


  public void setTransStatus(String transStatus) {
    this.transStatus = transStatus;
  }


  public ThreeDS2ResponseData transStatusReason(String transStatusReason) {
    
    this.transStatusReason = transStatusReason;
    return this;
  }

   /**
   * Get transStatusReason
   * @return transStatusReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransStatusReason() {
    return transStatusReason;
  }


  public void setTransStatusReason(String transStatusReason) {
    this.transStatusReason = transStatusReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThreeDS2ResponseData threeDS2ResponseData = (ThreeDS2ResponseData) o;
    return Objects.equals(this.acsChallengeMandated, threeDS2ResponseData.acsChallengeMandated) &&
        Objects.equals(this.acsOperatorID, threeDS2ResponseData.acsOperatorID) &&
        Objects.equals(this.acsReferenceNumber, threeDS2ResponseData.acsReferenceNumber) &&
        Objects.equals(this.acsSignedContent, threeDS2ResponseData.acsSignedContent) &&
        Objects.equals(this.acsTransID, threeDS2ResponseData.acsTransID) &&
        Objects.equals(this.acsURL, threeDS2ResponseData.acsURL) &&
        Objects.equals(this.authenticationType, threeDS2ResponseData.authenticationType) &&
        Objects.equals(this.cardHolderInfo, threeDS2ResponseData.cardHolderInfo) &&
        Objects.equals(this.cavvAlgorithm, threeDS2ResponseData.cavvAlgorithm) &&
        Objects.equals(this.challengeIndicator, threeDS2ResponseData.challengeIndicator) &&
        Objects.equals(this.dsReferenceNumber, threeDS2ResponseData.dsReferenceNumber) &&
        Objects.equals(this.dsTransID, threeDS2ResponseData.dsTransID) &&
        Objects.equals(this.exemptionIndicator, threeDS2ResponseData.exemptionIndicator) &&
        Objects.equals(this.messageVersion, threeDS2ResponseData.messageVersion) &&
        Objects.equals(this.riskScore, threeDS2ResponseData.riskScore) &&
        Objects.equals(this.sdkEphemPubKey, threeDS2ResponseData.sdkEphemPubKey) &&
        Objects.equals(this.threeDSServerTransID, threeDS2ResponseData.threeDSServerTransID) &&
        Objects.equals(this.transStatus, threeDS2ResponseData.transStatus) &&
        Objects.equals(this.transStatusReason, threeDS2ResponseData.transStatusReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acsChallengeMandated, acsOperatorID, acsReferenceNumber, acsSignedContent, acsTransID, acsURL, authenticationType, cardHolderInfo, cavvAlgorithm, challengeIndicator, dsReferenceNumber, dsTransID, exemptionIndicator, messageVersion, riskScore, sdkEphemPubKey, threeDSServerTransID, transStatus, transStatusReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThreeDS2ResponseData {\n");
    sb.append("    acsChallengeMandated: ").append(toIndentedString(acsChallengeMandated)).append("\n");
    sb.append("    acsOperatorID: ").append(toIndentedString(acsOperatorID)).append("\n");
    sb.append("    acsReferenceNumber: ").append(toIndentedString(acsReferenceNumber)).append("\n");
    sb.append("    acsSignedContent: ").append(toIndentedString(acsSignedContent)).append("\n");
    sb.append("    acsTransID: ").append(toIndentedString(acsTransID)).append("\n");
    sb.append("    acsURL: ").append(toIndentedString(acsURL)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    cardHolderInfo: ").append(toIndentedString(cardHolderInfo)).append("\n");
    sb.append("    cavvAlgorithm: ").append(toIndentedString(cavvAlgorithm)).append("\n");
    sb.append("    challengeIndicator: ").append(toIndentedString(challengeIndicator)).append("\n");
    sb.append("    dsReferenceNumber: ").append(toIndentedString(dsReferenceNumber)).append("\n");
    sb.append("    dsTransID: ").append(toIndentedString(dsTransID)).append("\n");
    sb.append("    exemptionIndicator: ").append(toIndentedString(exemptionIndicator)).append("\n");
    sb.append("    messageVersion: ").append(toIndentedString(messageVersion)).append("\n");
    sb.append("    riskScore: ").append(toIndentedString(riskScore)).append("\n");
    sb.append("    sdkEphemPubKey: ").append(toIndentedString(sdkEphemPubKey)).append("\n");
    sb.append("    threeDSServerTransID: ").append(toIndentedString(threeDSServerTransID)).append("\n");
    sb.append("    transStatus: ").append(toIndentedString(transStatus)).append("\n");
    sb.append("    transStatusReason: ").append(toIndentedString(transStatusReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acsChallengeMandated");
    openapiFields.add("acsOperatorID");
    openapiFields.add("acsReferenceNumber");
    openapiFields.add("acsSignedContent");
    openapiFields.add("acsTransID");
    openapiFields.add("acsURL");
    openapiFields.add("authenticationType");
    openapiFields.add("cardHolderInfo");
    openapiFields.add("cavvAlgorithm");
    openapiFields.add("challengeIndicator");
    openapiFields.add("dsReferenceNumber");
    openapiFields.add("dsTransID");
    openapiFields.add("exemptionIndicator");
    openapiFields.add("messageVersion");
    openapiFields.add("riskScore");
    openapiFields.add("sdkEphemPubKey");
    openapiFields.add("threeDSServerTransID");
    openapiFields.add("transStatus");
    openapiFields.add("transStatusReason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ThreeDS2ResponseData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ThreeDS2ResponseData.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ThreeDS2ResponseData is not found in the empty JSON string", ThreeDS2ResponseData.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ThreeDS2ResponseData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ThreeDS2ResponseData` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field acsChallengeMandated
      if (jsonObj.get("acsChallengeMandated") != null && !jsonObj.get("acsChallengeMandated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acsChallengeMandated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acsChallengeMandated").toString()));
      }
      // validate the optional field acsOperatorID
      if (jsonObj.get("acsOperatorID") != null && !jsonObj.get("acsOperatorID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acsOperatorID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acsOperatorID").toString()));
      }
      // validate the optional field acsReferenceNumber
      if (jsonObj.get("acsReferenceNumber") != null && !jsonObj.get("acsReferenceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acsReferenceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acsReferenceNumber").toString()));
      }
      // validate the optional field acsSignedContent
      if (jsonObj.get("acsSignedContent") != null && !jsonObj.get("acsSignedContent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acsSignedContent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acsSignedContent").toString()));
      }
      // validate the optional field acsTransID
      if (jsonObj.get("acsTransID") != null && !jsonObj.get("acsTransID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acsTransID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acsTransID").toString()));
      }
      // validate the optional field acsURL
      if (jsonObj.get("acsURL") != null && !jsonObj.get("acsURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acsURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acsURL").toString()));
      }
      // validate the optional field authenticationType
      if (jsonObj.get("authenticationType") != null && !jsonObj.get("authenticationType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authenticationType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authenticationType").toString()));
      }
      // validate the optional field cardHolderInfo
      if (jsonObj.get("cardHolderInfo") != null && !jsonObj.get("cardHolderInfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardHolderInfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardHolderInfo").toString()));
      }
      // validate the optional field cavvAlgorithm
      if (jsonObj.get("cavvAlgorithm") != null && !jsonObj.get("cavvAlgorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cavvAlgorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cavvAlgorithm").toString()));
      }
      // validate the optional field challengeIndicator
      if (jsonObj.get("challengeIndicator") != null && !jsonObj.get("challengeIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `challengeIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("challengeIndicator").toString()));
      }
      // validate the optional field dsReferenceNumber
      if (jsonObj.get("dsReferenceNumber") != null && !jsonObj.get("dsReferenceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dsReferenceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dsReferenceNumber").toString()));
      }
      // validate the optional field dsTransID
      if (jsonObj.get("dsTransID") != null && !jsonObj.get("dsTransID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dsTransID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dsTransID").toString()));
      }
      // validate the optional field exemptionIndicator
      if (jsonObj.get("exemptionIndicator") != null && !jsonObj.get("exemptionIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exemptionIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exemptionIndicator").toString()));
      }
      // validate the optional field messageVersion
      if (jsonObj.get("messageVersion") != null && !jsonObj.get("messageVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageVersion").toString()));
      }
      // validate the optional field riskScore
      if (jsonObj.get("riskScore") != null && !jsonObj.get("riskScore").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `riskScore` to be a primitive type in the JSON string but got `%s`", jsonObj.get("riskScore").toString()));
      }
      // validate the optional field sdkEphemPubKey
      if (jsonObj.get("sdkEphemPubKey") != null && !jsonObj.get("sdkEphemPubKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdkEphemPubKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdkEphemPubKey").toString()));
      }
      // validate the optional field threeDSServerTransID
      if (jsonObj.get("threeDSServerTransID") != null && !jsonObj.get("threeDSServerTransID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `threeDSServerTransID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("threeDSServerTransID").toString()));
      }
      // validate the optional field transStatus
      if (jsonObj.get("transStatus") != null && !jsonObj.get("transStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transStatus").toString()));
      }
      // validate the optional field transStatusReason
      if (jsonObj.get("transStatusReason") != null && !jsonObj.get("transStatusReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transStatusReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transStatusReason").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ThreeDS2ResponseData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ThreeDS2ResponseData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ThreeDS2ResponseData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ThreeDS2ResponseData.class));

       return (TypeAdapter<T>) new TypeAdapter<ThreeDS2ResponseData>() {
           @Override
           public void write(JsonWriter out, ThreeDS2ResponseData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ThreeDS2ResponseData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ThreeDS2ResponseData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ThreeDS2ResponseData
  * @throws IOException if the JSON string is invalid with respect to ThreeDS2ResponseData
  */
  public static ThreeDS2ResponseData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ThreeDS2ResponseData.class);
  }

 /**
  * Convert an instance of ThreeDS2ResponseData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

