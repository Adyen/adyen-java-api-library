/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.balanceplatform;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;
import java.util.Arrays;
import java.util.logging.Logger;

/** AdditionalBankIdentificationRequirement */
@JsonPropertyOrder({
  AdditionalBankIdentificationRequirement.JSON_PROPERTY_ADDITIONAL_BANK_IDENTIFICATION_TYPE,
  AdditionalBankIdentificationRequirement.JSON_PROPERTY_DESCRIPTION,
  AdditionalBankIdentificationRequirement.JSON_PROPERTY_TYPE
})
public class AdditionalBankIdentificationRequirement {
  /**
   * The type of additional bank identification, depending on the country. Possible values: *
   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB)
   * code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces. *
   * **caRoutingNumber**: The 9-digit [Canadian routing
   * number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without
   * separators or spaces. * **gbSortCode**: The 6-digit [UK sort
   * code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces *
   * **usRoutingNumber**: The 9-digit [routing
   * number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or
   * spaces.
   */
  public enum AdditionalBankIdentificationTypeEnum {
    AUBSBCODE(String.valueOf("auBsbCode")),

    CAROUTINGNUMBER(String.valueOf("caRoutingNumber")),

    GBSORTCODE(String.valueOf("gbSortCode")),

    USROUTINGNUMBER(String.valueOf("usRoutingNumber"));

    private static final Logger LOG =
        Logger.getLogger(AdditionalBankIdentificationTypeEnum.class.getName());

    private String value;

    AdditionalBankIdentificationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AdditionalBankIdentificationTypeEnum fromValue(String value) {
      for (AdditionalBankIdentificationTypeEnum b : AdditionalBankIdentificationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      // handling unexpected value
      LOG.warning(
          "AdditionalBankIdentificationTypeEnum: unexpected enum value '"
              + value
              + "' - Supported values are "
              + Arrays.toString(AdditionalBankIdentificationTypeEnum.values()));
      return null;
    }
  }

  public static final String JSON_PROPERTY_ADDITIONAL_BANK_IDENTIFICATION_TYPE =
      "additionalBankIdentificationType";
  private AdditionalBankIdentificationTypeEnum additionalBankIdentificationType;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  /** **additionalBankIdentificationRequirement** */
  public enum TypeEnum {
    ADDITIONALBANKIDENTIFICATIONREQUIREMENT(
        String.valueOf("additionalBankIdentificationRequirement"));

    private static final Logger LOG = Logger.getLogger(TypeEnum.class.getName());

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      // handling unexpected value
      LOG.warning(
          "TypeEnum: unexpected enum value '"
              + value
              + "' - Supported values are "
              + Arrays.toString(TypeEnum.values()));
      return null;
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public AdditionalBankIdentificationRequirement() {}

  /**
   * The type of additional bank identification, depending on the country. Possible values: *
   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB)
   * code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces. *
   * **caRoutingNumber**: The 9-digit [Canadian routing
   * number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without
   * separators or spaces. * **gbSortCode**: The 6-digit [UK sort
   * code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces *
   * **usRoutingNumber**: The 9-digit [routing
   * number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or
   * spaces.
   *
   * @param additionalBankIdentificationType The type of additional bank identification, depending
   *     on the country. Possible values: * **auBsbCode**: The 6-digit [Australian Bank State Branch
   *     (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces.
   *     * **caRoutingNumber**: The 9-digit [Canadian routing
   *     number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without
   *     separators or spaces. * **gbSortCode**: The 6-digit [UK sort
   *     code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces *
   *     **usRoutingNumber**: The 9-digit [routing
   *     number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or
   *     spaces.
   * @return the current {@code AdditionalBankIdentificationRequirement} instance, allowing for
   *     method chaining
   */
  public AdditionalBankIdentificationRequirement additionalBankIdentificationType(
      AdditionalBankIdentificationTypeEnum additionalBankIdentificationType) {
    this.additionalBankIdentificationType = additionalBankIdentificationType;
    return this;
  }

  /**
   * The type of additional bank identification, depending on the country. Possible values: *
   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB)
   * code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces. *
   * **caRoutingNumber**: The 9-digit [Canadian routing
   * number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without
   * separators or spaces. * **gbSortCode**: The 6-digit [UK sort
   * code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces *
   * **usRoutingNumber**: The 9-digit [routing
   * number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or
   * spaces.
   *
   * @return additionalBankIdentificationType The type of additional bank identification, depending
   *     on the country. Possible values: * **auBsbCode**: The 6-digit [Australian Bank State Branch
   *     (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces.
   *     * **caRoutingNumber**: The 9-digit [Canadian routing
   *     number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without
   *     separators or spaces. * **gbSortCode**: The 6-digit [UK sort
   *     code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces *
   *     **usRoutingNumber**: The 9-digit [routing
   *     number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or
   *     spaces.
   */
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_BANK_IDENTIFICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AdditionalBankIdentificationTypeEnum getAdditionalBankIdentificationType() {
    return additionalBankIdentificationType;
  }

  /**
   * The type of additional bank identification, depending on the country. Possible values: *
   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB)
   * code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces. *
   * **caRoutingNumber**: The 9-digit [Canadian routing
   * number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without
   * separators or spaces. * **gbSortCode**: The 6-digit [UK sort
   * code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces *
   * **usRoutingNumber**: The 9-digit [routing
   * number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or
   * spaces.
   *
   * @param additionalBankIdentificationType The type of additional bank identification, depending
   *     on the country. Possible values: * **auBsbCode**: The 6-digit [Australian Bank State Branch
   *     (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces.
   *     * **caRoutingNumber**: The 9-digit [Canadian routing
   *     number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without
   *     separators or spaces. * **gbSortCode**: The 6-digit [UK sort
   *     code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces *
   *     **usRoutingNumber**: The 9-digit [routing
   *     number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or
   *     spaces.
   */
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_BANK_IDENTIFICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalBankIdentificationType(
      AdditionalBankIdentificationTypeEnum additionalBankIdentificationType) {
    this.additionalBankIdentificationType = additionalBankIdentificationType;
  }

  /**
   * The description of the additional bank identification requirement.
   *
   * @param description The description of the additional bank identification requirement.
   * @return the current {@code AdditionalBankIdentificationRequirement} instance, allowing for
   *     method chaining
   */
  public AdditionalBankIdentificationRequirement description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the additional bank identification requirement.
   *
   * @return description The description of the additional bank identification requirement.
   */
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }

  /**
   * The description of the additional bank identification requirement.
   *
   * @param description The description of the additional bank identification requirement.
   */
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * **additionalBankIdentificationRequirement**
   *
   * @param type **additionalBankIdentificationRequirement**
   * @return the current {@code AdditionalBankIdentificationRequirement} instance, allowing for
   *     method chaining
   */
  public AdditionalBankIdentificationRequirement type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * **additionalBankIdentificationRequirement**
   *
   * @return type **additionalBankIdentificationRequirement**
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeEnum getType() {
    return type;
  }

  /**
   * **additionalBankIdentificationRequirement**
   *
   * @param type **additionalBankIdentificationRequirement**
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /** Return true if this AdditionalBankIdentificationRequirement object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalBankIdentificationRequirement additionalBankIdentificationRequirement =
        (AdditionalBankIdentificationRequirement) o;
    return Objects.equals(
            this.additionalBankIdentificationType,
            additionalBankIdentificationRequirement.additionalBankIdentificationType)
        && Objects.equals(this.description, additionalBankIdentificationRequirement.description)
        && Objects.equals(this.type, additionalBankIdentificationRequirement.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalBankIdentificationType, description, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalBankIdentificationRequirement {\n");
    sb.append("    additionalBankIdentificationType: ")
        .append(toIndentedString(additionalBankIdentificationType))
        .append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of AdditionalBankIdentificationRequirement given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdditionalBankIdentificationRequirement
   * @throws JsonProcessingException if the JSON string is invalid with respect to
   *     AdditionalBankIdentificationRequirement
   */
  public static AdditionalBankIdentificationRequirement fromJson(String jsonString)
      throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, AdditionalBankIdentificationRequirement.class);
  }

  /**
   * Convert an instance of AdditionalBankIdentificationRequirement to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
