/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.balanceplatform;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;

/** ScaInformation */
@JsonPropertyOrder({ScaInformation.JSON_PROPERTY_EXEMPTION, ScaInformation.JSON_PROPERTY_STATUS})
public class ScaInformation {
  public static final String JSON_PROPERTY_EXEMPTION = "exemption";
  private ScaExemption exemption;

  public static final String JSON_PROPERTY_STATUS = "status";
  private ScaStatus status;

  public ScaInformation() {}

  /**
   * exemption
   *
   * @param exemption
   * @return the current {@code ScaInformation} instance, allowing for method chaining
   */
  public ScaInformation exemption(ScaExemption exemption) {
    this.exemption = exemption;
    return this;
  }

  /**
   * Get exemption
   *
   * @return exemption
   */
  @JsonProperty(JSON_PROPERTY_EXEMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ScaExemption getExemption() {
    return exemption;
  }

  /**
   * exemption
   *
   * @param exemption
   */
  @JsonProperty(JSON_PROPERTY_EXEMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExemption(ScaExemption exemption) {
    this.exemption = exemption;
  }

  /**
   * status
   *
   * @param status
   * @return the current {@code ScaInformation} instance, allowing for method chaining
   */
  public ScaInformation status(ScaStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   *
   * @return status
   */
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ScaStatus getStatus() {
    return status;
  }

  /**
   * status
   *
   * @param status
   */
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(ScaStatus status) {
    this.status = status;
  }

  /** Return true if this ScaInformation object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScaInformation scaInformation = (ScaInformation) o;
    return Objects.equals(this.exemption, scaInformation.exemption)
        && Objects.equals(this.status, scaInformation.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exemption, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScaInformation {\n");
    sb.append("    exemption: ").append(toIndentedString(exemption)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of ScaInformation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScaInformation
   * @throws JsonProcessingException if the JSON string is invalid with respect to ScaInformation
   */
  public static ScaInformation fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, ScaInformation.class);
  }

  /**
   * Convert an instance of ScaInformation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
