/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.balanceplatform;

import java.util.*;
import java.util.logging.Logger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * ApproveTransferLimitRequest
 */
@JsonPropertyOrder({
  ApproveTransferLimitRequest.JSON_PROPERTY_TRANSFER_LIMIT_IDS
})

public class ApproveTransferLimitRequest {
  public static final String JSON_PROPERTY_TRANSFER_LIMIT_IDS = "transferLimitIds";
  private List<String> transferLimitIds;

  public ApproveTransferLimitRequest() { 
  }

  /**
   * A list that includes the &#x60;transferLimitId&#x60; of all the pending transfer limits you want to approve.
   *
   * @param transferLimitIds A list that includes the &#x60;transferLimitId&#x60; of all the pending transfer limits you want to approve.
   * @return the current {@code ApproveTransferLimitRequest} instance, allowing for method chaining
   */
  public ApproveTransferLimitRequest transferLimitIds(List<String> transferLimitIds) {
    this.transferLimitIds = transferLimitIds;
    return this;
  }

  public ApproveTransferLimitRequest addTransferLimitIdsItem(String transferLimitIdsItem) {
    if (this.transferLimitIds == null) {
      this.transferLimitIds = new ArrayList<>();
    }
    this.transferLimitIds.add(transferLimitIdsItem);
    return this;
  }

  /**
   * A list that includes the &#x60;transferLimitId&#x60; of all the pending transfer limits you want to approve.
   * @return transferLimitIds A list that includes the &#x60;transferLimitId&#x60; of all the pending transfer limits you want to approve.
   */
  @JsonProperty(JSON_PROPERTY_TRANSFER_LIMIT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getTransferLimitIds() {
    return transferLimitIds;
  }

  /**
   * A list that includes the &#x60;transferLimitId&#x60; of all the pending transfer limits you want to approve.
   *
   * @param transferLimitIds A list that includes the &#x60;transferLimitId&#x60; of all the pending transfer limits you want to approve.
   */
  @JsonProperty(JSON_PROPERTY_TRANSFER_LIMIT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferLimitIds(List<String> transferLimitIds) {
    this.transferLimitIds = transferLimitIds;
  }

  /**
   * Return true if this ApproveTransferLimitRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApproveTransferLimitRequest approveTransferLimitRequest = (ApproveTransferLimitRequest) o;
    return Objects.equals(this.transferLimitIds, approveTransferLimitRequest.transferLimitIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferLimitIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApproveTransferLimitRequest {\n");
    sb.append("    transferLimitIds: ").append(toIndentedString(transferLimitIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of ApproveTransferLimitRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApproveTransferLimitRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to ApproveTransferLimitRequest
   */
  public static ApproveTransferLimitRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, ApproveTransferLimitRequest.class);
  }
/**
  * Convert an instance of ApproveTransferLimitRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
