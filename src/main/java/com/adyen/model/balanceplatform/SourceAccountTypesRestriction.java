/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.balanceplatform;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** SourceAccountTypesRestriction */
@JsonPropertyOrder({
  SourceAccountTypesRestriction.JSON_PROPERTY_OPERATION,
  SourceAccountTypesRestriction.JSON_PROPERTY_VALUE
})
public class SourceAccountTypesRestriction {
  public static final String JSON_PROPERTY_OPERATION = "operation";
  private String operation;

  /** Gets or Sets value */
  public enum ValueEnum {
    BALANCEACCOUNT(String.valueOf("balanceAccount")),

    BUSINESSACCOUNT(String.valueOf("businessAccount"));

    private String value;

    ValueEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ValueEnum fromValue(String value) {
      for (ValueEnum b : ValueEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VALUE = "value";
  private List<ValueEnum> value;

  public SourceAccountTypesRestriction() {}

  /**
   * Defines how the condition must be evaluated.
   *
   * @param operation Defines how the condition must be evaluated.
   * @return the current {@code SourceAccountTypesRestriction} instance, allowing for method
   *     chaining
   */
  public SourceAccountTypesRestriction operation(String operation) {
    this.operation = operation;
    return this;
  }

  /**
   * Defines how the condition must be evaluated.
   *
   * @return operation Defines how the condition must be evaluated.
   */
  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOperation() {
    return operation;
  }

  /**
   * Defines how the condition must be evaluated.
   *
   * @param operation Defines how the condition must be evaluated.
   */
  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperation(String operation) {
    this.operation = operation;
  }

  /**
   * The list of source account types to be evaluated.
   *
   * @param value The list of source account types to be evaluated.
   * @return the current {@code SourceAccountTypesRestriction} instance, allowing for method
   *     chaining
   */
  public SourceAccountTypesRestriction value(List<ValueEnum> value) {
    this.value = value;
    return this;
  }

  public SourceAccountTypesRestriction addValueItem(ValueEnum valueItem) {
    if (this.value == null) {
      this.value = new ArrayList<>();
    }
    this.value.add(valueItem);
    return this;
  }

  /**
   * The list of source account types to be evaluated.
   *
   * @return value The list of source account types to be evaluated.
   */
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ValueEnum> getValue() {
    return value;
  }

  /**
   * The list of source account types to be evaluated.
   *
   * @param value The list of source account types to be evaluated.
   */
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(List<ValueEnum> value) {
    this.value = value;
  }

  /** Return true if this SourceAccountTypesRestriction object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceAccountTypesRestriction sourceAccountTypesRestriction = (SourceAccountTypesRestriction) o;
    return Objects.equals(this.operation, sourceAccountTypesRestriction.operation)
        && Objects.equals(this.value, sourceAccountTypesRestriction.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceAccountTypesRestriction {\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of SourceAccountTypesRestriction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SourceAccountTypesRestriction
   * @throws JsonProcessingException if the JSON string is invalid with respect to
   *     SourceAccountTypesRestriction
   */
  public static SourceAccountTypesRestriction fromJson(String jsonString)
      throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, SourceAccountTypesRestriction.class);
  }

  /**
   * Convert an instance of SourceAccountTypesRestriction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
