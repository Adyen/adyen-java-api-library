/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.balanceplatform;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;

/** BeginScaDeviceRegistrationRequest */
@JsonPropertyOrder({
  BeginScaDeviceRegistrationRequest.JSON_PROPERTY_NAME,
  BeginScaDeviceRegistrationRequest.JSON_PROPERTY_SDK_OUTPUT
})
public class BeginScaDeviceRegistrationRequest {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SDK_OUTPUT = "sdkOutput";
  private String sdkOutput;

  public BeginScaDeviceRegistrationRequest() {}

  /**
   * The name of the SCA device that you are registering. You can use it to help your users identify
   * the device.
   *
   * @param name The name of the SCA device that you are registering. You can use it to help your
   *     users identify the device.
   * @return the current {@code BeginScaDeviceRegistrationRequest} instance, allowing for method
   *     chaining
   */
  public BeginScaDeviceRegistrationRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the SCA device that you are registering. You can use it to help your users identify
   * the device.
   *
   * @return name The name of the SCA device that you are registering. You can use it to help your
   *     users identify the device.
   */
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }

  /**
   * The name of the SCA device that you are registering. You can use it to help your users identify
   * the device.
   *
   * @param name The name of the SCA device that you are registering. You can use it to help your
   *     users identify the device.
   */
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  /**
   * A base64-encoded block with the data required to register the SCA device. You obtain this
   * information by using Adyen&#39;s authentication SDK.
   *
   * @param sdkOutput A base64-encoded block with the data required to register the SCA device. You
   *     obtain this information by using Adyen&#39;s authentication SDK.
   * @return the current {@code BeginScaDeviceRegistrationRequest} instance, allowing for method
   *     chaining
   */
  public BeginScaDeviceRegistrationRequest sdkOutput(String sdkOutput) {
    this.sdkOutput = sdkOutput;
    return this;
  }

  /**
   * A base64-encoded block with the data required to register the SCA device. You obtain this
   * information by using Adyen&#39;s authentication SDK.
   *
   * @return sdkOutput A base64-encoded block with the data required to register the SCA device. You
   *     obtain this information by using Adyen&#39;s authentication SDK.
   */
  @JsonProperty(JSON_PROPERTY_SDK_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSdkOutput() {
    return sdkOutput;
  }

  /**
   * A base64-encoded block with the data required to register the SCA device. You obtain this
   * information by using Adyen&#39;s authentication SDK.
   *
   * @param sdkOutput A base64-encoded block with the data required to register the SCA device. You
   *     obtain this information by using Adyen&#39;s authentication SDK.
   */
  @JsonProperty(JSON_PROPERTY_SDK_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdkOutput(String sdkOutput) {
    this.sdkOutput = sdkOutput;
  }

  /** Return true if this BeginScaDeviceRegistrationRequest object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeginScaDeviceRegistrationRequest beginScaDeviceRegistrationRequest =
        (BeginScaDeviceRegistrationRequest) o;
    return Objects.equals(this.name, beginScaDeviceRegistrationRequest.name)
        && Objects.equals(this.sdkOutput, beginScaDeviceRegistrationRequest.sdkOutput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, sdkOutput);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeginScaDeviceRegistrationRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sdkOutput: ").append(toIndentedString(sdkOutput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of BeginScaDeviceRegistrationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BeginScaDeviceRegistrationRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to
   *     BeginScaDeviceRegistrationRequest
   */
  public static BeginScaDeviceRegistrationRequest fromJson(String jsonString)
      throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, BeginScaDeviceRegistrationRequest.class);
  }

  /**
   * Convert an instance of BeginScaDeviceRegistrationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
