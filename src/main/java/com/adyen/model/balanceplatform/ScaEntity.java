/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.balanceplatform;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;

/** ScaEntity */
@JsonPropertyOrder({ScaEntity.JSON_PROPERTY_ID, ScaEntity.JSON_PROPERTY_TYPE})
public class ScaEntity {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ScaEntityType type;

  public ScaEntity() {}

  /**
   * The unique identifier of the entity.
   *
   * @param id The unique identifier of the entity.
   * @return the current {@code ScaEntity} instance, allowing for method chaining
   */
  public ScaEntity id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the entity.
   *
   * @return id The unique identifier of the entity.
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  /**
   * The unique identifier of the entity.
   *
   * @param id The unique identifier of the entity.
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  /**
   * type
   *
   * @param type
   * @return the current {@code ScaEntity} instance, allowing for method chaining
   */
  public ScaEntity type(ScaEntityType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   *
   * @return type
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ScaEntityType getType() {
    return type;
  }

  /**
   * type
   *
   * @param type
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(ScaEntityType type) {
    this.type = type;
  }

  /** Return true if this ScaEntity object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScaEntity scaEntity = (ScaEntity) o;
    return Objects.equals(this.id, scaEntity.id) && Objects.equals(this.type, scaEntity.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScaEntity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of ScaEntity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScaEntity
   * @throws JsonProcessingException if the JSON string is invalid with respect to ScaEntity
   */
  public static ScaEntity fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, ScaEntity.class);
  }

  /**
   * Convert an instance of ScaEntity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
