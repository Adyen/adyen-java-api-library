/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.balanceplatform;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.balanceplatform.ScaDevice;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * BeginScaDeviceRegistrationResponse
 */
@JsonPropertyOrder({
  BeginScaDeviceRegistrationResponse.JSON_PROPERTY_SCA_DEVICE,
  BeginScaDeviceRegistrationResponse.JSON_PROPERTY_SDK_INPUT
})

public class BeginScaDeviceRegistrationResponse {
  public static final String JSON_PROPERTY_SCA_DEVICE = "scaDevice";
  private ScaDevice scaDevice;

  public static final String JSON_PROPERTY_SDK_INPUT = "sdkInput";
  private String sdkInput;

  public BeginScaDeviceRegistrationResponse() { 
  }

  /**
   * scaDevice
   *
   * @param scaDevice 
   * @return the current {@code BeginScaDeviceRegistrationResponse} instance, allowing for method chaining
   */
  public BeginScaDeviceRegistrationResponse scaDevice(ScaDevice scaDevice) {
    this.scaDevice = scaDevice;
    return this;
  }

  /**
   * Get scaDevice
   * @return scaDevice 
   */
  @JsonProperty(JSON_PROPERTY_SCA_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ScaDevice getScaDevice() {
    return scaDevice;
  }

  /**
   * scaDevice
   *
   * @param scaDevice 
   */
  @JsonProperty(JSON_PROPERTY_SCA_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScaDevice(ScaDevice scaDevice) {
    this.scaDevice = scaDevice;
  }

  /**
   * A string that you must pass to the authentication SDK to continue with the registration process.
   *
   * @param sdkInput A string that you must pass to the authentication SDK to continue with the registration process.
   * @return the current {@code BeginScaDeviceRegistrationResponse} instance, allowing for method chaining
   */
  public BeginScaDeviceRegistrationResponse sdkInput(String sdkInput) {
    this.sdkInput = sdkInput;
    return this;
  }

  /**
   * A string that you must pass to the authentication SDK to continue with the registration process.
   * @return sdkInput A string that you must pass to the authentication SDK to continue with the registration process.
   */
  @JsonProperty(JSON_PROPERTY_SDK_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSdkInput() {
    return sdkInput;
  }

  /**
   * A string that you must pass to the authentication SDK to continue with the registration process.
   *
   * @param sdkInput A string that you must pass to the authentication SDK to continue with the registration process.
   */
  @JsonProperty(JSON_PROPERTY_SDK_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdkInput(String sdkInput) {
    this.sdkInput = sdkInput;
  }

  /**
   * Return true if this BeginScaDeviceRegistrationResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeginScaDeviceRegistrationResponse beginScaDeviceRegistrationResponse = (BeginScaDeviceRegistrationResponse) o;
    return Objects.equals(this.scaDevice, beginScaDeviceRegistrationResponse.scaDevice) &&
        Objects.equals(this.sdkInput, beginScaDeviceRegistrationResponse.sdkInput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scaDevice, sdkInput);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeginScaDeviceRegistrationResponse {\n");
    sb.append("    scaDevice: ").append(toIndentedString(scaDevice)).append("\n");
    sb.append("    sdkInput: ").append(toIndentedString(sdkInput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of BeginScaDeviceRegistrationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BeginScaDeviceRegistrationResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to BeginScaDeviceRegistrationResponse
   */
  public static BeginScaDeviceRegistrationResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, BeginScaDeviceRegistrationResponse.class);
  }
/**
  * Convert an instance of BeginScaDeviceRegistrationResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
