/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.balanceplatform;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.balanceplatform.SettingType;
import com.adyen.model.balanceplatform.Target;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * WebhookSettingResponse
 */
@JsonPropertyOrder({
  WebhookSettingResponse.JSON_PROPERTY_CURRENCY,
  WebhookSettingResponse.JSON_PROPERTY_ID,
  WebhookSettingResponse.JSON_PROPERTY_STATUS,
  WebhookSettingResponse.JSON_PROPERTY_TARGET,
  WebhookSettingResponse.JSON_PROPERTY_TYPE
})

@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = BalanceWebhookSettingsResponse.class, name = "balance"),
})

public class WebhookSettingResponse {
  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_TARGET = "target";
  private Target target;

  public static final String JSON_PROPERTY_TYPE = "type";
  private SettingType type;

  public WebhookSettingResponse() { 
  }

  /**
   * The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance.
   *
   * @param currency
   * @return the current {@code WebhookSettingResponse} instance, allowing for method chaining
   */
  public WebhookSettingResponse currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance.
   * @return currency
   */
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCurrency() {
    return currency;
  }

  /**
   * The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance.
   *
   * @param currency
   */
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }

  /**
   * The unique identifier of the webhook setting.
   *
   * @param id
   * @return the current {@code WebhookSettingResponse} instance, allowing for method chaining
   */
  public WebhookSettingResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the webhook setting.
   * @return id
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  /**
   * The unique identifier of the webhook setting.
   *
   * @param id
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  /**
   * status
   *
   * @param status
   * @return the current {@code WebhookSettingResponse} instance, allowing for method chaining
   */
  public WebhookSettingResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStatus() {
    return status;
  }

  /**
   * status
   *
   * @param status
   */
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * target
   *
   * @param target
   * @return the current {@code WebhookSettingResponse} instance, allowing for method chaining
   */
  public WebhookSettingResponse target(Target target) {
    this.target = target;
    return this;
  }

  /**
   * Get target
   * @return target
   */
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Target getTarget() {
    return target;
  }

  /**
   * target
   *
   * @param target
   */
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTarget(Target target) {
    this.target = target;
  }

  /**
   * type
   *
   * @param type
   * @return the current {@code WebhookSettingResponse} instance, allowing for method chaining
   */
  public WebhookSettingResponse type(SettingType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SettingType getType() {
    return type;
  }

  /**
   * type
   *
   * @param type
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(SettingType type) {
    this.type = type;
  }

  /**
   * Return true if this WebhookSettingResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookSettingResponse webhookSettingResponse = (WebhookSettingResponse) o;
    return Objects.equals(this.currency, webhookSettingResponse.currency) &&
        Objects.equals(this.id, webhookSettingResponse.id) &&
        Objects.equals(this.status, webhookSettingResponse.status) &&
        Objects.equals(this.target, webhookSettingResponse.target) &&
        Objects.equals(this.type, webhookSettingResponse.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, id, status, target, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookSettingResponse {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  static {
    // Initialize and register the discriminator mappings.
    Map<String, Class<?>> mappings = new HashMap<>();
    mappings.put("balance", BalanceWebhookSettingsResponse.class);
    mappings.put("WebhookSettingResponse", WebhookSettingResponse.class);
    JSON.registerDiscriminator(WebhookSettingResponse.class, "type", mappings);
  }
/**
   * Create an instance of WebhookSettingResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WebhookSettingResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to WebhookSettingResponse
   */
  public static WebhookSettingResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, WebhookSettingResponse.class);
  }
/**
  * Convert an instance of WebhookSettingResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
