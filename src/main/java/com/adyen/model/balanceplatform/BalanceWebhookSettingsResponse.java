/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.balanceplatform;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.balanceplatform.Condition;
import com.adyen.model.balanceplatform.SettingType;
import com.adyen.model.balanceplatform.Target;
import com.adyen.model.balanceplatform.WebhookSettingResponse;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * BalanceWebhookSettingsResponse
 */
@JsonPropertyOrder({
  BalanceWebhookSettingsResponse.JSON_PROPERTY_CONDITIONS
})

@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class BalanceWebhookSettingsResponse extends WebhookSettingResponse {
  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  private List<Condition> conditions = new ArrayList<>();

  public BalanceWebhookSettingsResponse() { 
  }

  /**
   * The list of settings and criteria for triggering the [balance webhook](https://docs.adyen.com/api-explorer/balance-webhooks/latest/post/balancePlatform.balanceAccount.balance.updated).
   *
   * @param conditions
   * @return the current {@code BalanceWebhookSettingsResponse} instance, allowing for method chaining
   */
  public BalanceWebhookSettingsResponse conditions(List<Condition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public BalanceWebhookSettingsResponse addConditionsItem(Condition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

  /**
   * The list of settings and criteria for triggering the [balance webhook](https://docs.adyen.com/api-explorer/balance-webhooks/latest/post/balancePlatform.balanceAccount.balance.updated).
   * @return conditions
   */
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Condition> getConditions() {
    return conditions;
  }

  /**
   * The list of settings and criteria for triggering the [balance webhook](https://docs.adyen.com/api-explorer/balance-webhooks/latest/post/balancePlatform.balanceAccount.balance.updated).
   *
   * @param conditions
   */
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConditions(List<Condition> conditions) {
    this.conditions = conditions;
  }

  /**
   * Return true if this BalanceWebhookSettingsResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BalanceWebhookSettingsResponse balanceWebhookSettingsResponse = (BalanceWebhookSettingsResponse) o;
    return Objects.equals(this.conditions, balanceWebhookSettingsResponse.conditions) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditions, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BalanceWebhookSettingsResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  static {
    // Initialize and register the discriminator mappings.
    Map<String, Class<?>> mappings = new HashMap<>();
    mappings.put("BalanceWebhookSettingsResponse", BalanceWebhookSettingsResponse.class);
    JSON.registerDiscriminator(BalanceWebhookSettingsResponse.class, "type", mappings);
  }
/**
   * Create an instance of BalanceWebhookSettingsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BalanceWebhookSettingsResponse
   * @throws JsonProcessingException if the JSON string is invalid with respect to BalanceWebhookSettingsResponse
   */
  public static BalanceWebhookSettingsResponse fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, BalanceWebhookSettingsResponse.class);
  }
/**
  * Convert an instance of BalanceWebhookSettingsResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
