/*
 * Configuration API
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.balanceplatform;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.balanceplatform.ScaEntityType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * RemoveAssociationRequest
 */
@JsonPropertyOrder({
  RemoveAssociationRequest.JSON_PROPERTY_ENTITY_ID,
  RemoveAssociationRequest.JSON_PROPERTY_ENTITY_TYPE,
  RemoveAssociationRequest.JSON_PROPERTY_SCA_DEVICE_IDS
})

public class RemoveAssociationRequest {
  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_ENTITY_TYPE = "entityType";
  private ScaEntityType entityType;

  public static final String JSON_PROPERTY_SCA_DEVICE_IDS = "scaDeviceIds";
  private List<String> scaDeviceIds;

  public RemoveAssociationRequest() { 
  }

  /**
   * The unique identifier of the entity.
   *
   * @param entityId The unique identifier of the entity.
   * @return the current {@code RemoveAssociationRequest} instance, allowing for method chaining
   */
  public RemoveAssociationRequest entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * The unique identifier of the entity.
   * @return entityId The unique identifier of the entity.
   */
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEntityId() {
    return entityId;
  }

  /**
   * The unique identifier of the entity.
   *
   * @param entityId The unique identifier of the entity.
   */
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  /**
   * entityType
   *
   * @param entityType 
   * @return the current {@code RemoveAssociationRequest} instance, allowing for method chaining
   */
  public RemoveAssociationRequest entityType(ScaEntityType entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Get entityType
   * @return entityType 
   */
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ScaEntityType getEntityType() {
    return entityType;
  }

  /**
   * entityType
   *
   * @param entityType 
   */
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityType(ScaEntityType entityType) {
    this.entityType = entityType;
  }

  /**
   * A list of device ids associated with the entity that should be removed.
   *
   * @param scaDeviceIds A list of device ids associated with the entity that should be removed.
   * @return the current {@code RemoveAssociationRequest} instance, allowing for method chaining
   */
  public RemoveAssociationRequest scaDeviceIds(List<String> scaDeviceIds) {
    this.scaDeviceIds = scaDeviceIds;
    return this;
  }

  public RemoveAssociationRequest addScaDeviceIdsItem(String scaDeviceIdsItem) {
    if (this.scaDeviceIds == null) {
      this.scaDeviceIds = new ArrayList<>();
    }
    this.scaDeviceIds.add(scaDeviceIdsItem);
    return this;
  }

  /**
   * A list of device ids associated with the entity that should be removed.
   * @return scaDeviceIds A list of device ids associated with the entity that should be removed.
   */
  @JsonProperty(JSON_PROPERTY_SCA_DEVICE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getScaDeviceIds() {
    return scaDeviceIds;
  }

  /**
   * A list of device ids associated with the entity that should be removed.
   *
   * @param scaDeviceIds A list of device ids associated with the entity that should be removed.
   */
  @JsonProperty(JSON_PROPERTY_SCA_DEVICE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScaDeviceIds(List<String> scaDeviceIds) {
    this.scaDeviceIds = scaDeviceIds;
  }

  /**
   * Return true if this RemoveAssociationRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoveAssociationRequest removeAssociationRequest = (RemoveAssociationRequest) o;
    return Objects.equals(this.entityId, removeAssociationRequest.entityId) &&
        Objects.equals(this.entityType, removeAssociationRequest.entityType) &&
        Objects.equals(this.scaDeviceIds, removeAssociationRequest.scaDeviceIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, entityType, scaDeviceIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoveAssociationRequest {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    scaDeviceIds: ").append(toIndentedString(scaDeviceIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of RemoveAssociationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RemoveAssociationRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to RemoveAssociationRequest
   */
  public static RemoveAssociationRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, RemoveAssociationRequest.class);
  }
/**
  * Convert an instance of RemoveAssociationRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
