/*
 * Configuration webhooks
 *
 * The version of the OpenAPI document: 2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.configurationwebhooks;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.*;

/** NetworkTokenTriggeredRiskRule */
@JsonPropertyOrder({
  NetworkTokenTriggeredRiskRule.JSON_PROPERTY_REASON,
  NetworkTokenTriggeredRiskRule.JSON_PROPERTY_TRANSACTION_RULE,
  NetworkTokenTriggeredRiskRule.JSON_PROPERTY_TRANSACTION_RULE_SOURCE
})
public class NetworkTokenTriggeredRiskRule {
  public static final String JSON_PROPERTY_REASON = "reason";
  private String reason;

  public static final String JSON_PROPERTY_TRANSACTION_RULE = "transactionRule";
  private NetworkTokenRiskRuleData transactionRule;

  public static final String JSON_PROPERTY_TRANSACTION_RULE_SOURCE = "transactionRuleSource";
  private NetworkTokenRiskRuleSource transactionRuleSource;

  public NetworkTokenTriggeredRiskRule() {}

  /**
   * Explains why the transaction rule failed.
   *
   * @param reason Explains why the transaction rule failed.
   * @return the current {@code NetworkTokenTriggeredRiskRule} instance, allowing for method
   *     chaining
   */
  public NetworkTokenTriggeredRiskRule reason(String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * Explains why the transaction rule failed.
   *
   * @return reason Explains why the transaction rule failed.
   */
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getReason() {
    return reason;
  }

  /**
   * Explains why the transaction rule failed.
   *
   * @param reason Explains why the transaction rule failed.
   */
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(String reason) {
    this.reason = reason;
  }

  /**
   * transactionRule
   *
   * @param transactionRule
   * @return the current {@code NetworkTokenTriggeredRiskRule} instance, allowing for method
   *     chaining
   */
  public NetworkTokenTriggeredRiskRule transactionRule(NetworkTokenRiskRuleData transactionRule) {
    this.transactionRule = transactionRule;
    return this;
  }

  /**
   * Get transactionRule
   *
   * @return transactionRule
   */
  @JsonProperty(JSON_PROPERTY_TRANSACTION_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public NetworkTokenRiskRuleData getTransactionRule() {
    return transactionRule;
  }

  /**
   * transactionRule
   *
   * @param transactionRule
   */
  @JsonProperty(JSON_PROPERTY_TRANSACTION_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionRule(NetworkTokenRiskRuleData transactionRule) {
    this.transactionRule = transactionRule;
  }

  /**
   * transactionRuleSource
   *
   * @param transactionRuleSource
   * @return the current {@code NetworkTokenTriggeredRiskRule} instance, allowing for method
   *     chaining
   */
  public NetworkTokenTriggeredRiskRule transactionRuleSource(
      NetworkTokenRiskRuleSource transactionRuleSource) {
    this.transactionRuleSource = transactionRuleSource;
    return this;
  }

  /**
   * Get transactionRuleSource
   *
   * @return transactionRuleSource
   */
  @JsonProperty(JSON_PROPERTY_TRANSACTION_RULE_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public NetworkTokenRiskRuleSource getTransactionRuleSource() {
    return transactionRuleSource;
  }

  /**
   * transactionRuleSource
   *
   * @param transactionRuleSource
   */
  @JsonProperty(JSON_PROPERTY_TRANSACTION_RULE_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionRuleSource(NetworkTokenRiskRuleSource transactionRuleSource) {
    this.transactionRuleSource = transactionRuleSource;
  }

  /** Return true if this NetworkTokenTriggeredRiskRule object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkTokenTriggeredRiskRule networkTokenTriggeredRiskRule = (NetworkTokenTriggeredRiskRule) o;
    return Objects.equals(this.reason, networkTokenTriggeredRiskRule.reason)
        && Objects.equals(this.transactionRule, networkTokenTriggeredRiskRule.transactionRule)
        && Objects.equals(
            this.transactionRuleSource, networkTokenTriggeredRiskRule.transactionRuleSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reason, transactionRule, transactionRuleSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkTokenTriggeredRiskRule {\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    transactionRule: ").append(toIndentedString(transactionRule)).append("\n");
    sb.append("    transactionRuleSource: ")
        .append(toIndentedString(transactionRuleSource))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create an instance of NetworkTokenTriggeredRiskRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NetworkTokenTriggeredRiskRule
   * @throws JsonProcessingException if the JSON string is invalid with respect to
   *     NetworkTokenTriggeredRiskRule
   */
  public static NetworkTokenTriggeredRiskRule fromJson(String jsonString)
      throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, NetworkTokenTriggeredRiskRule.class);
  }

  /**
   * Convert an instance of NetworkTokenTriggeredRiskRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
