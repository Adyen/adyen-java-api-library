/*
 * Configuration webhooks
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.configurationwebhooks;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.configurationwebhooks.BankScoreSignalTriggeredData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * ScoreNotificationRequest
 */
@JsonPropertyOrder({
  ScoreNotificationRequest.JSON_PROPERTY_DATA,
  ScoreNotificationRequest.JSON_PROPERTY_ENVIRONMENT,
  ScoreNotificationRequest.JSON_PROPERTY_TIMESTAMP,
  ScoreNotificationRequest.JSON_PROPERTY_TYPE
})

public class ScoreNotificationRequest {
  public static final String JSON_PROPERTY_DATA = "data";
  private BankScoreSignalTriggeredData data;

  public static final String JSON_PROPERTY_ENVIRONMENT = "environment";
  private String environment;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private OffsetDateTime timestamp;

  /**
   * Type of webhook.
   */
  public enum TypeEnum {

    BALANCEPLATFORM_SCORE_TRIGGERED(String.valueOf("balancePlatform.score.triggered"));

    private static final Logger LOG = Logger.getLogger(TypeEnum.class.getName());

    private String value;

    TypeEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      // handling unexpected value
      LOG.warning("TypeEnum: unexpected enum value '" + value + "' - Supported values are "+ Arrays.toString(TypeEnum.values()));
      return null;
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public ScoreNotificationRequest() { 
  }

  /**
   * data
   *
   * @param data 
   * @return the current {@code ScoreNotificationRequest} instance, allowing for method chaining
   */
  public ScoreNotificationRequest data(BankScoreSignalTriggeredData data) {
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data 
   */
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BankScoreSignalTriggeredData getData() {
    return data;
  }

  /**
   * data
   *
   * @param data 
   */
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(BankScoreSignalTriggeredData data) {
    this.data = data;
  }

  /**
   * The environment from which the webhook originated.  Possible values: **test**, **live**.
   *
   * @param environment The environment from which the webhook originated.  Possible values: **test**, **live**.
   * @return the current {@code ScoreNotificationRequest} instance, allowing for method chaining
   */
  public ScoreNotificationRequest environment(String environment) {
    this.environment = environment;
    return this;
  }

  /**
   * The environment from which the webhook originated.  Possible values: **test**, **live**.
   * @return environment The environment from which the webhook originated.  Possible values: **test**, **live**.
   */
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEnvironment() {
    return environment;
  }

  /**
   * The environment from which the webhook originated.  Possible values: **test**, **live**.
   *
   * @param environment The environment from which the webhook originated.  Possible values: **test**, **live**.
   */
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironment(String environment) {
    this.environment = environment;
  }

  /**
   * When the event was queued.
   *
   * @param timestamp When the event was queued.
   * @return the current {@code ScoreNotificationRequest} instance, allowing for method chaining
   */
  public ScoreNotificationRequest timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * When the event was queued.
   * @return timestamp When the event was queued.
   */
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  /**
   * When the event was queued.
   *
   * @param timestamp When the event was queued.
   */
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * Type of webhook.
   *
   * @param type Type of webhook.
   * @return the current {@code ScoreNotificationRequest} instance, allowing for method chaining
   */
  public ScoreNotificationRequest type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Type of webhook.
   * @return type Type of webhook.
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeEnum getType() {
    return type;
  }

  /**
   * Type of webhook.
   *
   * @param type Type of webhook.
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * Return true if this ScoreNotificationRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScoreNotificationRequest scoreNotificationRequest = (ScoreNotificationRequest) o;
    return Objects.equals(this.data, scoreNotificationRequest.data) &&
        Objects.equals(this.environment, scoreNotificationRequest.environment) &&
        Objects.equals(this.timestamp, scoreNotificationRequest.timestamp) &&
        Objects.equals(this.type, scoreNotificationRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, environment, timestamp, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScoreNotificationRequest {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of ScoreNotificationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScoreNotificationRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to ScoreNotificationRequest
   */
  public static ScoreNotificationRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, ScoreNotificationRequest.class);
  }
/**
  * Convert an instance of ScoreNotificationRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
