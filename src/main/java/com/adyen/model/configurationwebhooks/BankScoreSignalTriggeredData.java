/*
 * Configuration webhooks
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.configurationwebhooks;

import java.util.*;
import java.util.logging.Logger;
import com.adyen.model.configurationwebhooks.ResourceReference;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * BankScoreSignalTriggeredData
 */
@JsonPropertyOrder({
  BankScoreSignalTriggeredData.JSON_PROPERTY_ACCOUNT_HOLDER,
  BankScoreSignalTriggeredData.JSON_PROPERTY_ACCOUNT_HOLDER_STATUS,
  BankScoreSignalTriggeredData.JSON_PROPERTY_AUTOMATED_ACTIONS,
  BankScoreSignalTriggeredData.JSON_PROPERTY_BALANCE_PLATFORM,
  BankScoreSignalTriggeredData.JSON_PROPERTY_CREATION_DATE,
  BankScoreSignalTriggeredData.JSON_PROPERTY_ID,
  BankScoreSignalTriggeredData.JSON_PROPERTY_RISK_SCORE,
  BankScoreSignalTriggeredData.JSON_PROPERTY_SCORE_SIGNALS_TRIGGERED,
  BankScoreSignalTriggeredData.JSON_PROPERTY_SIGNAL_SOURCE_TYPES
})

public class BankScoreSignalTriggeredData {
  public static final String JSON_PROPERTY_ACCOUNT_HOLDER = "accountHolder";
  private ResourceReference accountHolder;

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_STATUS = "accountHolderStatus";
  private String accountHolderStatus;

  public static final String JSON_PROPERTY_AUTOMATED_ACTIONS = "automatedActions";
  private List<String> automatedActions;

  public static final String JSON_PROPERTY_BALANCE_PLATFORM = "balancePlatform";
  private String balancePlatform;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private OffsetDateTime creationDate;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_RISK_SCORE = "riskScore";
  private Integer riskScore;

  public static final String JSON_PROPERTY_SCORE_SIGNALS_TRIGGERED = "scoreSignalsTriggered";
  private List<String> scoreSignalsTriggered;

  public static final String JSON_PROPERTY_SIGNAL_SOURCE_TYPES = "signalSourceTypes";
  private List<String> signalSourceTypes;

  public BankScoreSignalTriggeredData() { 
  }

  /**
   * accountHolder
   *
   * @param accountHolder 
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData accountHolder(ResourceReference accountHolder) {
    this.accountHolder = accountHolder;
    return this;
  }

  /**
   * Get accountHolder
   * @return accountHolder 
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ResourceReference getAccountHolder() {
    return accountHolder;
  }

  /**
   * accountHolder
   *
   * @param accountHolder 
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountHolder(ResourceReference accountHolder) {
    this.accountHolder = accountHolder;
  }

  /**
   * The status of the account holder.
   *
   * @param accountHolderStatus The status of the account holder.
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData accountHolderStatus(String accountHolderStatus) {
    this.accountHolderStatus = accountHolderStatus;
    return this;
  }

  /**
   * The status of the account holder.
   * @return accountHolderStatus The status of the account holder.
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAccountHolderStatus() {
    return accountHolderStatus;
  }

  /**
   * The status of the account holder.
   *
   * @param accountHolderStatus The status of the account holder.
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountHolderStatus(String accountHolderStatus) {
    this.accountHolderStatus = accountHolderStatus;
  }

  /**
   * The automated action(s) taken as a result of the score signals that were triggered.
   *
   * @param automatedActions The automated action(s) taken as a result of the score signals that were triggered.
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData automatedActions(List<String> automatedActions) {
    this.automatedActions = automatedActions;
    return this;
  }

  public BankScoreSignalTriggeredData addAutomatedActionsItem(String automatedActionsItem) {
    if (this.automatedActions == null) {
      this.automatedActions = new ArrayList<>();
    }
    this.automatedActions.add(automatedActionsItem);
    return this;
  }

  /**
   * The automated action(s) taken as a result of the score signals that were triggered.
   * @return automatedActions The automated action(s) taken as a result of the score signals that were triggered.
   */
  @JsonProperty(JSON_PROPERTY_AUTOMATED_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getAutomatedActions() {
    return automatedActions;
  }

  /**
   * The automated action(s) taken as a result of the score signals that were triggered.
   *
   * @param automatedActions The automated action(s) taken as a result of the score signals that were triggered.
   */
  @JsonProperty(JSON_PROPERTY_AUTOMATED_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutomatedActions(List<String> automatedActions) {
    this.automatedActions = automatedActions;
  }

  /**
   * The unique identifier of the balance platform.
   *
   * @param balancePlatform The unique identifier of the balance platform.
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData balancePlatform(String balancePlatform) {
    this.balancePlatform = balancePlatform;
    return this;
  }

  /**
   * The unique identifier of the balance platform.
   * @return balancePlatform The unique identifier of the balance platform.
   */
  @JsonProperty(JSON_PROPERTY_BALANCE_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBalancePlatform() {
    return balancePlatform;
  }

  /**
   * The unique identifier of the balance platform.
   *
   * @param balancePlatform The unique identifier of the balance platform.
   */
  @JsonProperty(JSON_PROPERTY_BALANCE_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalancePlatform(String balancePlatform) {
    this.balancePlatform = balancePlatform;
  }

  /**
   * The date and time when the event was triggered, in ISO 8601 extended format. For example, **2025-03-19T10:15:30+01:00**.
   *
   * @param creationDate The date and time when the event was triggered, in ISO 8601 extended format. For example, **2025-03-19T10:15:30+01:00**.
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * The date and time when the event was triggered, in ISO 8601 extended format. For example, **2025-03-19T10:15:30+01:00**.
   * @return creationDate The date and time when the event was triggered, in ISO 8601 extended format. For example, **2025-03-19T10:15:30+01:00**.
   */
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  /**
   * The date and time when the event was triggered, in ISO 8601 extended format. For example, **2025-03-19T10:15:30+01:00**.
   *
   * @param creationDate The date and time when the event was triggered, in ISO 8601 extended format. For example, **2025-03-19T10:15:30+01:00**.
   */
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  /**
   * The ID of the resource.
   *
   * @param id The ID of the resource.
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The ID of the resource.
   * @return id The ID of the resource.
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  /**
   * The ID of the resource.
   *
   * @param id The ID of the resource.
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The score of the identity resulting from the signal(s) that were triggered.
   *
   * @param riskScore The score of the identity resulting from the signal(s) that were triggered.
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData riskScore(Integer riskScore) {
    this.riskScore = riskScore;
    return this;
  }

  /**
   * The score of the identity resulting from the signal(s) that were triggered.
   * @return riskScore The score of the identity resulting from the signal(s) that were triggered.
   */
  @JsonProperty(JSON_PROPERTY_RISK_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getRiskScore() {
    return riskScore;
  }

  /**
   * The score of the identity resulting from the signal(s) that were triggered.
   *
   * @param riskScore The score of the identity resulting from the signal(s) that were triggered.
   */
  @JsonProperty(JSON_PROPERTY_RISK_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRiskScore(Integer riskScore) {
    this.riskScore = riskScore;
  }

  /**
   * The name(s) of the score signals that were triggered.
   *
   * @param scoreSignalsTriggered The name(s) of the score signals that were triggered.
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData scoreSignalsTriggered(List<String> scoreSignalsTriggered) {
    this.scoreSignalsTriggered = scoreSignalsTriggered;
    return this;
  }

  public BankScoreSignalTriggeredData addScoreSignalsTriggeredItem(String scoreSignalsTriggeredItem) {
    if (this.scoreSignalsTriggered == null) {
      this.scoreSignalsTriggered = new ArrayList<>();
    }
    this.scoreSignalsTriggered.add(scoreSignalsTriggeredItem);
    return this;
  }

  /**
   * The name(s) of the score signals that were triggered.
   * @return scoreSignalsTriggered The name(s) of the score signals that were triggered.
   */
  @JsonProperty(JSON_PROPERTY_SCORE_SIGNALS_TRIGGERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getScoreSignalsTriggered() {
    return scoreSignalsTriggered;
  }

  /**
   * The name(s) of the score signals that were triggered.
   *
   * @param scoreSignalsTriggered The name(s) of the score signals that were triggered.
   */
  @JsonProperty(JSON_PROPERTY_SCORE_SIGNALS_TRIGGERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScoreSignalsTriggered(List<String> scoreSignalsTriggered) {
    this.scoreSignalsTriggered = scoreSignalsTriggered;
  }

  /**
   * The type(s) of the score signals that were triggered.
   *
   * @param signalSourceTypes The type(s) of the score signals that were triggered.
   * @return the current {@code BankScoreSignalTriggeredData} instance, allowing for method chaining
   */
  public BankScoreSignalTriggeredData signalSourceTypes(List<String> signalSourceTypes) {
    this.signalSourceTypes = signalSourceTypes;
    return this;
  }

  public BankScoreSignalTriggeredData addSignalSourceTypesItem(String signalSourceTypesItem) {
    if (this.signalSourceTypes == null) {
      this.signalSourceTypes = new ArrayList<>();
    }
    this.signalSourceTypes.add(signalSourceTypesItem);
    return this;
  }

  /**
   * The type(s) of the score signals that were triggered.
   * @return signalSourceTypes The type(s) of the score signals that were triggered.
   */
  @JsonProperty(JSON_PROPERTY_SIGNAL_SOURCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSignalSourceTypes() {
    return signalSourceTypes;
  }

  /**
   * The type(s) of the score signals that were triggered.
   *
   * @param signalSourceTypes The type(s) of the score signals that were triggered.
   */
  @JsonProperty(JSON_PROPERTY_SIGNAL_SOURCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignalSourceTypes(List<String> signalSourceTypes) {
    this.signalSourceTypes = signalSourceTypes;
  }

  /**
   * Return true if this BankScoreSignalTriggeredData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankScoreSignalTriggeredData bankScoreSignalTriggeredData = (BankScoreSignalTriggeredData) o;
    return Objects.equals(this.accountHolder, bankScoreSignalTriggeredData.accountHolder) &&
        Objects.equals(this.accountHolderStatus, bankScoreSignalTriggeredData.accountHolderStatus) &&
        Objects.equals(this.automatedActions, bankScoreSignalTriggeredData.automatedActions) &&
        Objects.equals(this.balancePlatform, bankScoreSignalTriggeredData.balancePlatform) &&
        Objects.equals(this.creationDate, bankScoreSignalTriggeredData.creationDate) &&
        Objects.equals(this.id, bankScoreSignalTriggeredData.id) &&
        Objects.equals(this.riskScore, bankScoreSignalTriggeredData.riskScore) &&
        Objects.equals(this.scoreSignalsTriggered, bankScoreSignalTriggeredData.scoreSignalsTriggered) &&
        Objects.equals(this.signalSourceTypes, bankScoreSignalTriggeredData.signalSourceTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountHolder, accountHolderStatus, automatedActions, balancePlatform, creationDate, id, riskScore, scoreSignalsTriggered, signalSourceTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankScoreSignalTriggeredData {\n");
    sb.append("    accountHolder: ").append(toIndentedString(accountHolder)).append("\n");
    sb.append("    accountHolderStatus: ").append(toIndentedString(accountHolderStatus)).append("\n");
    sb.append("    automatedActions: ").append(toIndentedString(automatedActions)).append("\n");
    sb.append("    balancePlatform: ").append(toIndentedString(balancePlatform)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    riskScore: ").append(toIndentedString(riskScore)).append("\n");
    sb.append("    scoreSignalsTriggered: ").append(toIndentedString(scoreSignalsTriggered)).append("\n");
    sb.append("    signalSourceTypes: ").append(toIndentedString(signalSourceTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of BankScoreSignalTriggeredData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BankScoreSignalTriggeredData
   * @throws JsonProcessingException if the JSON string is invalid with respect to BankScoreSignalTriggeredData
   */
  public static BankScoreSignalTriggeredData fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, BankScoreSignalTriggeredData.class);
  }
/**
  * Convert an instance of BankScoreSignalTriggeredData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
