/*
 * Session authentication API
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.adyen.model.sessionauthentication;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/** AccountHolderResource */
@JsonPropertyOrder({AccountHolderResource.JSON_PROPERTY_ACCOUNT_HOLDER_ID})
@JsonIgnoreProperties(
    value =
        "type", // ignore manually set type, it will be automatically generated by Jackson during
    // serialization
    allowSetters = true // allows the type to be set during deserialization
    )
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "type",
    visible = true)
public class AccountHolderResource extends Resource {
  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_ID = "accountHolderId";
  private String accountHolderId;

  public AccountHolderResource() {}

  /**
   * The unique identifier of the resource connected to the component. For [Platform Experience
   * components](https://docs.adyen.com/platforms/build-user-dashboards), this is the account holder
   * linked to the balance account shown in the component.
   *
   * @param accountHolderId The unique identifier of the resource connected to the component. For
   *     [Platform Experience components](https://docs.adyen.com/platforms/build-user-dashboards),
   *     this is the account holder linked to the balance account shown in the component.
   * @return the current {@code AccountHolderResource} instance, allowing for method chaining
   */
  public AccountHolderResource accountHolderId(String accountHolderId) {
    this.accountHolderId = accountHolderId;
    return this;
  }

  /**
   * The unique identifier of the resource connected to the component. For [Platform Experience
   * components](https://docs.adyen.com/platforms/build-user-dashboards), this is the account holder
   * linked to the balance account shown in the component.
   *
   * @return accountHolderId The unique identifier of the resource connected to the component. For
   *     [Platform Experience components](https://docs.adyen.com/platforms/build-user-dashboards),
   *     this is the account holder linked to the balance account shown in the component.
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAccountHolderId() {
    return accountHolderId;
  }

  /**
   * The unique identifier of the resource connected to the component. For [Platform Experience
   * components](https://docs.adyen.com/platforms/build-user-dashboards), this is the account holder
   * linked to the balance account shown in the component.
   *
   * @param accountHolderId The unique identifier of the resource connected to the component. For
   *     [Platform Experience components](https://docs.adyen.com/platforms/build-user-dashboards),
   *     this is the account holder linked to the balance account shown in the component.
   */
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountHolderId(String accountHolderId) {
    this.accountHolderId = accountHolderId;
  }

  /** Return true if this AccountHolderResource object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountHolderResource accountHolderResource = (AccountHolderResource) o;
    return Objects.equals(this.accountHolderId, accountHolderResource.accountHolderId)
        && super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountHolderId, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountHolderResource {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    accountHolderId: ").append(toIndentedString(accountHolderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  static {
    // Initialize and register the discriminator mappings.
    Map<String, Class<?>> mappings = new HashMap<>();
    mappings.put("AccountHolderResource", AccountHolderResource.class);
    JSON.registerDiscriminator(AccountHolderResource.class, "type", mappings);
  }

  /**
   * Create an instance of AccountHolderResource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountHolderResource
   * @throws JsonProcessingException if the JSON string is invalid with respect to
   *     AccountHolderResource
   */
  public static AccountHolderResource fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, AccountHolderResource.class);
  }

  /**
   * Convert an instance of AccountHolderResource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
