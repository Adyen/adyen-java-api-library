{{>licenseInfo}}

package {{package}};

import com.adyen.ApiKeyAuthenticatedService;
import com.adyen.Client;
import com.adyen.constants.ApiConstants;
import {{modelPackage}}.JSON;
{{#imports}}import {{import}};
{{/imports}}
import com.adyen.service.exception.ApiException;
import com.adyen.service.resource.{{resourceClass}};

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

{{#operations}}
    public class {{classname}} extends ApiKeyAuthenticatedService {
    public {{classname}}(Client client) {
    super(client);
    new JSON();
    }

    {{#operation}}
        /**
        * {{summary}}
        *
        {{#allParams}}
        {{^isQueryParam}}* @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{^isContainer}}{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/isContainer}}{{/required}}{{/isQueryParam}}
        {{/allParams}}
        {{#queryParams}}
        {{#-first}}
        * @param queryParams  (optional)
            *    {{paramName}}: {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{^isContainer}}{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/isContainer}}{{/required}}<br />
        {{/-first}}
        {{^-first}}
            *    {{paramName}}: {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{^isContainer}}{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/isContainer}}{{/required}}<br />
        {{/-first}}
        {{/queryParams}}
        {{#returnType}}
        * @return {{.}}
        {{/returnType}}
        * @throws ApiException if fails to make API call
        {{#isDeprecated}}
            * @deprecated
        {{/isDeprecated}}
        {{#externalDocs}}
            * {{description}}
            * @see <a href="{{url}}">{{summary}} Documentation</a>
        {{/externalDocs}}
        */
        {{#isDeprecated}}
            @Deprecated
        {{/isDeprecated}}
        public {{#returnType}}{{{.}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{#vendorExtensions.x-methodName}}{{.}}{{/vendorExtensions.x-methodName}}{{^vendorExtensions.x-methodName}}{{operationId}}{{/vendorExtensions.x-methodName}}({{#allParams}}{{^isQueryParam}}{{{dataType}}} {{paramName}}{{^-last}}, {{/-last}}{{/isQueryParam}}{{/allParams}}{{#queryParams}}{{#-first}}Map<String, String> queryParams{{/-first}}{{/queryParams}}) throws ApiException, IOException {
        {{! verify if a required parameter is set }}
        {{#allParams}}{{#required}}        if ({{paramName}} == null) {
        throw new ApiException("Missing the required parameter '{{paramName}}'", 400);
        }
        {{/required}}{{/allParams}}
        Map<String, String> pathParams = new HashMap<>();
        {{#pathParams}}
            pathParams.put("{{baseName}}", {{{paramName}}});
        {{/pathParams}}

        String requestBody = {{#bodyParam}}{{paramName}}.toJson(){{/bodyParam}}{{^bodyParam}}null{{/bodyParam}};
        {{resourceClass}} resource = new {{resourceClass}}(this, "{{{path}}}");
        {{#returnType}}
            String jsonResult = resource.request(requestBody, null, ApiConstants.HttpMethod.{{httpMethod}}, pathParams{{#hasQueryParams}}, queryParams{{/hasQueryParams}});
            return {{#returnType}}{{{.}}}.fromJson(jsonResult){{/returnType}};
        {{/returnType}}
        {{^returnType}}
            resource.request(requestBody, null, ApiConstants.HttpMethod.{{httpMethod}}, pathParams{{#hasQueryParams}}, queryParams{{/hasQueryParams}});
        {{/returnType}}
        }

        public {{#returnType}}{{{.}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{#vendorExtensions.x-methodName}}{{.}}{{/vendorExtensions.x-methodName}}{{^vendorExtensions.x-methodName}}{{operationId}}{{/vendorExtensions.x-methodName}}({{#allParams}}{{#required}}{{{dataType}}}{{^-first}}, {{/-first}} {{paramName}}{{/required}}{{/allParams}}) throws ApiException, IOException {
        {{#returnType}}
            return {{#vendorExtensions.x-methodName}}{{.}}{{/vendorExtensions.x-methodName}}{{^vendorExtensions.x-methodName}}{{operationId}}{{/vendorExtensions.x-methodName}}({{#allParams}}{{^isQueryParam}}{{^-first}}, {{/-first}}{{#required}}{{paramName}}{{/required}}{{^required}}null{{#-last}}{{/-last}}{{/required}}{{/isQueryParam}}{{/allParams}}{{#queryParams}}{{#-first}}, null{{/-first}}{{/queryParams}})
        {{/returnType}}
        {{^returnType}}
            {{#vendorExtensions.x-methodName}}{{.}}{{/vendorExtensions.x-methodName}}{{^vendorExtensions.x-methodName}}{{operationId}}{{/vendorExtensions.x-methodName}}
        {{/returnType}}
        }
        }
    {{/operation}}
    }
{{/operations}}